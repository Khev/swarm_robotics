(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    421149,       8130]
NotebookOptionsPosition[    417506,       8061]
NotebookOutlinePosition[    417902,       8077]
CellTagsIndexPosition[    417859,       8074]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction", "Section",
 CellChangeTimes->{{3.958304036656714*^9, 
  3.958304040494396*^9}},ExpressionUUID->"7004319f-afd5-499d-bb87-\
2a13e7535bed"],

Cell["Can we solve swarm robotics using \[OpenCurlyDoubleQuote]swarmalator \
control\[CloseCurlyDoubleQuote]?", "Text",
 CellChangeTimes->{{3.958304041551214*^9, 
  3.958304053481802*^9}},ExpressionUUID->"5f4e01c0-6a9f-4e54-8bd1-\
e469c6e1a570"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulations", "Section",
 CellChangeTimes->{{3.709840281709675*^9, 3.709840285083975*^9}, {
  3.712437030849045*^9, 3.71243703429001*^9}, {3.82360441925706*^9, 
  3.8236044197836533`*^9}},ExpressionUUID->"a62f5431-6b7f-4448-ba23-\
125ce79f25cf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dt", ",", "T", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.2", ",", "2000", ",", "50"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"J", ",", "k", ",", "\[Alpha]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.5", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"R", ",", "\[Omega]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.005"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"znew", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Dynamic", "[", "results", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "NT"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Round", "[", 
      RowBox[{"T", "/", "dt"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"t", "<", "NT"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"zgoal", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", " ", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zGoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"R", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"zGoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"\[Omega]", " ", "t"}]}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zgoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"znew", "=", 
      RowBox[{"rk4", "[", 
       RowBox[{
       "z0", ",", "zgoal", ",", "rhs", ",", "dt", ",", "J", ",", "k", ",", 
        "\[Alpha]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z0", "=", "znew"}], ";", 
     RowBox[{"t", "++"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"scores", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"meanDistance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"radialVariance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"occlusionScore", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results", "=", 
      RowBox[{"plotResults", "[", 
       RowBox[{"znew", ",", 
        RowBox[{"L", "=", "5"}], ",", 
        RowBox[{"zGoal", "=", "zgoal"}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<<x>\>\"", ",", "\"\<var r\>\"", ",", " ", "\"\<enclosure\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.709840431168634*^9, 3.7098404313363857`*^9}, {
   3.709841207406206*^9, 3.709841217812026*^9}, {3.709841261739141*^9, 
   3.709841282451413*^9}, {3.709841352368338*^9, 3.7098413525278997`*^9}, {
   3.709841421942252*^9, 3.7098414524381533`*^9}, {3.709841485745319*^9, 
   3.7098415752211*^9}, {3.70984160869004*^9, 3.709841638671687*^9}, {
   3.709841857111949*^9, 3.709841881721517*^9}, {3.7098419185665617`*^9, 
   3.7098419196777983`*^9}, {3.7098419932482967`*^9, 3.709841993399069*^9}, {
   3.7098431315168543`*^9, 3.709843131674776*^9}, {3.709843162279698*^9, 
   3.709843179012744*^9}, {3.709854917824787*^9, 3.7098549647665052`*^9}, {
   3.709855055084914*^9, 3.709855127915716*^9}, {3.709855162601318*^9, 
   3.7098551649751167`*^9}, {3.70985611951422*^9, 3.709856121329632*^9}, {
   3.709856169872033*^9, 3.709856180678524*^9}, {3.709898362386549*^9, 
   3.709898362591949*^9}, {3.709900733188629*^9, 3.709900764649392*^9}, {
   3.70990320483998*^9, 3.7099032049946213`*^9}, {3.709906317462462*^9, 
   3.7099063600879183`*^9}, {3.7099064056306057`*^9, 3.709906405758383*^9}, {
   3.709906454756303*^9, 3.709906461426221*^9}, {3.709906600764236*^9, 
   3.709906613417965*^9}, {3.7099066628818703`*^9, 3.709906691679134*^9}, {
   3.709907312710309*^9, 3.709907319755876*^9}, {3.710004694260133*^9, 
   3.710004728455662*^9}, {3.710004792918166*^9, 3.7100048435540037`*^9}, {
   3.710004876519018*^9, 3.7100048766460648`*^9}, {3.710004911670142*^9, 
   3.7100049118052197`*^9}, {3.710004988180335*^9, 3.710004988274432*^9}, {
   3.7100051639626713`*^9, 3.710005185048821*^9}, {3.710005298225438*^9, 
   3.7100053118056183`*^9}, {3.710005414990032*^9, 3.7100054238832493`*^9}, {
   3.710005491810689*^9, 3.71000551493725*^9}, {3.71002073237024*^9, 
   3.710020796983672*^9}, {3.82240625281942*^9, 3.822406280204418*^9}, {
   3.822406478707234*^9, 3.822406479091268*^9}, {3.822406899912148*^9, 
   3.822406912192964*^9}, {3.822407069059057*^9, 3.8224070695392637`*^9}, {
   3.823601916575384*^9, 3.823601979317885*^9}, {3.823602162789925*^9, 
   3.823602166411029*^9}, {3.8236022388205023`*^9, 3.823602244387384*^9}, {
   3.8236022904113483`*^9, 3.8236023022005*^9}, {3.823602338962414*^9, 
   3.823602424260387*^9}, {3.823602454629109*^9, 3.823602477723393*^9}, {
   3.823602528412508*^9, 3.8236025285786533`*^9}, {3.8236025807391663`*^9, 
   3.823602592561091*^9}, {3.823602752260744*^9, 3.823602752635569*^9}, {
   3.823602818147151*^9, 3.8236028211041822`*^9}, {3.823602952700945*^9, 
   3.8236029987373037`*^9}, {3.8236031406004267`*^9, 3.823603140814571*^9}, {
   3.823603213357915*^9, 3.823603272754623*^9}, {3.8236033148620033`*^9, 
   3.823603391626577*^9}, {3.823603539383102*^9, 3.823603577074093*^9}, {
   3.823603622907927*^9, 3.8236036422234993`*^9}, {3.8236037128898573`*^9, 
   3.823603764627584*^9}, {3.823603807225338*^9, 3.8236038655178843`*^9}, {
   3.8236039497914333`*^9, 3.8236040886529083`*^9}, {3.8236041197821913`*^9, 
   3.8236041208201523`*^9}, {3.823604248614273*^9, 3.823604348312064*^9}, {
   3.823604447857493*^9, 3.823604525185899*^9}, {3.823604654597745*^9, 
   3.823604692818646*^9}, {3.823604723988899*^9, 3.823605026944234*^9}, {
   3.823605057260972*^9, 3.823605075146554*^9}, {3.823605139307777*^9, 
   3.823605139369759*^9}, {3.823605209500465*^9, 3.823605211010421*^9}, {
   3.823605266307659*^9, 3.823605266416979*^9}, {3.82360534100805*^9, 
   3.823605341110446*^9}, {3.823605554144026*^9, 3.8236055793878202`*^9}, {
   3.82360565331246*^9, 3.823605680678372*^9}, {3.8250762087803087`*^9, 
   3.8250762439768457`*^9}, {3.825076279818873*^9, 3.8250762847057457`*^9}, {
   3.82507633156781*^9, 3.8250764268998938`*^9}, {3.825076464388895*^9, 
   3.825076464699586*^9}, {3.825076529769212*^9, 3.825076531470957*^9}, {
   3.825076611888124*^9, 3.8250766124637403`*^9}, {3.825076855813274*^9, 
   3.825076859698851*^9}, {3.825077188327055*^9, 3.82507723400147*^9}, {
   3.825077526027708*^9, 3.825077592968409*^9}, {3.8250776419505663`*^9, 
   3.82507766309221*^9}, {3.825077739900675*^9, 3.825077766729088*^9}, {
   3.825077815680299*^9, 3.825077817382352*^9}, {3.8250780952071238`*^9, 
   3.8250781030922403`*^9}, {3.825078172654092*^9, 3.825078172737015*^9}, {
   3.825078251495893*^9, 3.825078255847432*^9}, {3.825078289577533*^9, 
   3.825078290656149*^9}, {3.8250785031967783`*^9, 3.8250785033125143`*^9}, {
   3.82507857153454*^9, 3.825078666178007*^9}, {3.825078764196294*^9, 
   3.825078782106358*^9}, {3.825078879439578*^9, 3.825078881374435*^9}, {
   3.8250789894162903`*^9, 3.8250789898464117`*^9}, {3.825079255142503*^9, 
   3.825079255243984*^9}, {3.826983044753439*^9, 3.8269830934671907`*^9}, {
   3.8269835551220837`*^9, 3.826983562553591*^9}, {3.826983626685639*^9, 
   3.826983626899678*^9}, {3.826989887113566*^9, 3.826989888115918*^9}, {
   3.826990436739026*^9, 3.82699050047112*^9}, {3.826990553432704*^9, 
   3.826990574934711*^9}, {3.826990619770814*^9, 3.826990620001627*^9}, {
   3.82699068376648*^9, 3.8269906839653053`*^9}, 3.826990795482016*^9, {
   3.826990839575232*^9, 3.82699085563905*^9}, {3.826990909873543*^9, 
   3.826990910000844*^9}, {3.826990959006912*^9, 3.826991031240491*^9}, {
   3.826991063694537*^9, 3.8269910637723846`*^9}, {3.826991116476964*^9, 
   3.826991176040844*^9}, {3.8269912211310053`*^9, 3.826991225098381*^9}, {
   3.826991259294191*^9, 3.8269912594438963`*^9}, {3.8269913464697247`*^9, 
   3.826991347465711*^9}, {3.826991419666698*^9, 3.8269914416005077`*^9}, {
   3.826992663092037*^9, 3.826992805450399*^9}, {3.826992851285302*^9, 
   3.8269928513956547`*^9}, {3.8269928874337*^9, 3.8269929035319366`*^9}, {
   3.8269929812132196`*^9, 3.826992981394943*^9}, {3.826993020347034*^9, 
   3.826993020464405*^9}, {3.826993081319356*^9, 3.826993110944655*^9}, {
   3.826993190668165*^9, 3.8269931907876377`*^9}, {3.826993313559909*^9, 
   3.826993347482483*^9}, {3.826993458370243*^9, 3.826993460392264*^9}, {
   3.826993521955865*^9, 3.826993549034479*^9}, {3.8269935996604033`*^9, 
   3.826993600978904*^9}, {3.826993652786393*^9, 3.826993652888213*^9}, {
   3.826994798976037*^9, 3.826994800223456*^9}, {3.826994947300001*^9, 
   3.826994950659031*^9}, {3.8269950527298737`*^9, 3.826995062959894*^9}, {
   3.8276216942603693`*^9, 3.8276217120687447`*^9}, {3.827621747503436*^9, 
   3.827621772602396*^9}, {3.827621805729398*^9, 3.8276218059676857`*^9}, {
   3.827622592308189*^9, 3.827622592479241*^9}, 3.827622642440608*^9, {
   3.8276326964132767`*^9, 3.827632696688792*^9}, {3.8276327672784643`*^9, 
   3.827632826157584*^9}, {3.827632866873472*^9, 3.827632867073473*^9}, {
   3.827632913699333*^9, 3.827632914824597*^9}, {3.8276329712228737`*^9, 
   3.827632974407073*^9}, {3.827633007301218*^9, 3.827633008770505*^9}, {
   3.827633050846587*^9, 3.827633123424328*^9}, {3.8276331614939528`*^9, 
   3.82763318381411*^9}, {3.827633214210051*^9, 3.827633260551531*^9}, {
   3.827633439720565*^9, 3.827633439776971*^9}, {3.827634393710774*^9, 
   3.827634394843046*^9}, {3.827687508460896*^9, 3.827687607056097*^9}, {
   3.827756902377254*^9, 3.827757010235689*^9}, {3.827757080012662*^9, 
   3.8277570817084*^9}, {3.82775711908501*^9, 3.827757119995131*^9}, {
   3.827757160691663*^9, 3.827757176887925*^9}, {3.827757211853269*^9, 
   3.8277572157159157`*^9}, {3.82775727066813*^9, 3.827757446136437*^9}, {
   3.827757504963431*^9, 3.827757509020031*^9}, {3.827757877618287*^9, 
   3.827757879770526*^9}, {3.827757922026182*^9, 3.827757941993252*^9}, {
   3.827757976654804*^9, 3.827757993652236*^9}, {3.827758042749362*^9, 
   3.827758099190134*^9}, {3.827758131527546*^9, 3.8277581443085623`*^9}, {
   3.827758221131712*^9, 3.827758240993052*^9}, {3.827758308197321*^9, 
   3.827758308264168*^9}, {3.82775835416145*^9, 3.82775839042791*^9}, {
   3.827834940400012*^9, 3.827834978965848*^9}, {3.827835163968642*^9, 
   3.827835164338973*^9}, {3.827835299313695*^9, 3.827835300450416*^9}, {
   3.827835389400549*^9, 3.827835400142379*^9}, {3.827835518795363*^9, 
   3.827835573449984*^9}, {3.827835823626227*^9, 3.827835823879281*^9}, {
   3.827835940673912*^9, 3.82783599635455*^9}, {3.827836166300205*^9, 
   3.8278361681222267`*^9}, {3.827836218860861*^9, 3.827836218939303*^9}, {
   3.8278363221003723`*^9, 3.827836324834414*^9}, {3.8278364767497053`*^9, 
   3.8278364774039297`*^9}, {3.8278615163097277`*^9, 
   3.8278615231711283`*^9}, {3.827919744670539*^9, 3.827919770180942*^9}, {
   3.827922232185163*^9, 3.827922237034939*^9}, {3.837537074158909*^9, 
   3.8375370743329477`*^9}, {3.8375371103630047`*^9, 3.837537142609036*^9}, {
   3.837537183051981*^9, 3.837537209463189*^9}, {3.877144645810727*^9, 
   3.877144677920826*^9}, {3.887467455806857*^9, 3.8874674581800213`*^9}, {
   3.915990577333956*^9, 3.915990586338118*^9}, {3.91599064006203*^9, 
   3.915990670715238*^9}, {3.915990711990655*^9, 3.91599071244807*^9}, {
   3.951742648811062*^9, 3.95174269962988*^9}, {3.958304433975052*^9, 
   3.958304472283331*^9}, {3.95830458822408*^9, 3.958304604585229*^9}, {
   3.958304871015992*^9, 3.958304883163785*^9}, {3.958304966510146*^9, 
   3.958305055452991*^9}, {3.958307630641115*^9, 3.958307630747674*^9}, {
   3.958307812290312*^9, 3.958307871426075*^9}, {3.9583079233605328`*^9, 
   3.95830792418152*^9}, {3.958308271539996*^9, 3.958308271650653*^9}, {
   3.9583083613366947`*^9, 3.958308400536384*^9}, {3.958308471889597*^9, 
   3.958308471955681*^9}, {3.958394494159717*^9, 3.958394560160486*^9}, 
   3.958394613900943*^9, {3.958394752862389*^9, 3.9583947858436604`*^9}, {
   3.958394828622753*^9, 3.958394905243743*^9}, {3.958394977069933*^9, 
   3.9583949841437483`*^9}, {3.958395039867743*^9, 3.958395085569758*^9}, {
   3.9583952005141697`*^9, 3.9583952609293337`*^9}, {3.958395370317107*^9, 
   3.95839539753769*^9}, {3.958395445360244*^9, 3.95839546121931*^9}, {
   3.958395493648259*^9, 3.9583954937279997`*^9}, {3.958395553561598*^9, 
   3.958395623732069*^9}, {3.958395660039318*^9, 3.958395696449251*^9}, {
   3.9583957636424*^9, 3.958395767004251*^9}, {3.958396214721324*^9, 
   3.958396218361208*^9}, {3.958396369855139*^9, 3.958396385516621*^9}, {
   3.95839669294811*^9, 3.9583967267121983`*^9}, {3.958396820759666*^9, 
   3.958396820810351*^9}, {3.958396948873126*^9, 3.9583970049280033`*^9}, {
   3.958397100269939*^9, 3.9583971107199593`*^9}, {3.95839719500182*^9, 
   3.958397245550267*^9}, {3.958397391410849*^9, 3.958397391979611*^9}, 
   3.958398370768116*^9, {3.958398959852167*^9, 3.958398972651414*^9}, {
   3.958399011474341*^9, 3.9583990280947638`*^9}, {3.958399444178355*^9, 
   3.958399473895643*^9}, {3.9583995813552933`*^9, 3.958399612720233*^9}, {
   3.958399672889432*^9, 3.9583997245003757`*^9}, 3.958399923461801*^9, {
   3.958399956970893*^9, 3.9583999572541103`*^9}, {3.95840002801467*^9, 
   3.9584000577275963`*^9}, {3.9584001363865356`*^9, 3.958400186638818*^9}, {
   3.958400246801032*^9, 3.9584002469961157`*^9}, {3.958400400334095*^9, 
   3.958400401302885*^9}, {3.95840072638713*^9, 3.958400738511894*^9}, {
   3.958400890033144*^9, 3.9584008903510303`*^9}, {3.958400926409802*^9, 
   3.958400997531184*^9}, {3.958401157401711*^9, 3.958401178655497*^9}, {
   3.95840137104278*^9, 3.958401489669693*^9}},
 CellLabel->
  "In[2107]:=",ExpressionUUID->"cecc672f-0f96-452f-855c-7313178a3aa4"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`results, StandardForm],
  ImageSizeCache->{1098., {169.634033203125, 175.365966796875}}]], "Output",
 CellChangeTimes->{{3.958399553098137*^9, 3.958399612844594*^9}, {
   3.958399650507161*^9, 3.9583997246935062`*^9}, {3.958399864273869*^9, 
   3.9583998778367577`*^9}, {3.9583999114394197`*^9, 3.958399957413136*^9}, {
   3.958400021456997*^9, 3.958400058098333*^9}, {3.9584001386457043`*^9, 
   3.958400186845169*^9}, {3.95840022066677*^9, 3.958400247162119*^9}, {
   3.958400323915955*^9, 3.958400401559861*^9}, 3.9584006256145163`*^9, 
   3.958400674672596*^9, {3.9584007136731157`*^9, 3.95840075914498*^9}, 
   3.958400810652967*^9, 3.958400841859248*^9, {3.958400909268303*^9, 
   3.958400997698955*^9}, {3.958401158069696*^9, 3.958401178883595*^9}, {
   3.958401371348733*^9, 3.958401489869252*^9}},
 CellLabel->
  "Out[2114]=",ExpressionUUID->"5f2048ce-8700-4258-845f-3b204b0dd028"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.958399553098137*^9, 3.958399612844594*^9}, {
   3.958399650507161*^9, 3.9583997246935062`*^9}, {3.958399864273869*^9, 
   3.9583998778367577`*^9}, {3.9583999114394197`*^9, 3.958399957413136*^9}, {
   3.958400021456997*^9, 3.958400058098333*^9}, {3.9584001386457043`*^9, 
   3.958400186845169*^9}, {3.95840022066677*^9, 3.958400247162119*^9}, {
   3.958400323915955*^9, 3.958400401559861*^9}, 3.9584006256145163`*^9, 
   3.958400674672596*^9, {3.9584007136731157`*^9, 3.95840075914498*^9}, 
   3.958400810652967*^9, 3.958400841859248*^9, {3.958400909268303*^9, 
   3.958400997698955*^9}, {3.958401158069696*^9, 3.958401178883595*^9}, {
   3.958401371348733*^9, 3.95840151080075*^9}},
 CellLabel->
  "Out[2117]=",ExpressionUUID->"f86c9825-0a83-43e1-bb4a-6e9236b0398b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxF2nlcTev7N/AQKklIpiIyhGiQZIgPkqJSkgahJJLmeW437+Y9CzmSEEJI
6hTiJKE0CKGIDEklhcr428/ru66e8895vc/dva/1ua+11l7r3mfGbs8tzkMl
JCTOD5eQ+H///t8/3auVEi3fzUsbD+Y/4OzPTzW7nclS2HJB/3rCKrI82Of/
7L4zmawAhwAt50194xhPAluXM93qKVkJL54vO2b8L1kF7d0v35ZkkWcicsE5
T6tk8izMNOe46YeQ58DIeMtFJ3eyGgov9FRLOZPnY1l5gI+1A1kdPfxflwJ3
khdhycxjz+oHrYmLcyYVD3Uka8FZTXdOxR6yNjKyX34a7kpeDAXp1R4Xvcg6
UPvITr8cRF6Cv6lt0t+jyLq4+6JRZ28KeSnK9ZSv/jpI1sMrpc7rJ3PIy6Dg
1vfD7jJ5OQqP3JOXvUVegY9L+1QKa8krIa2bJTB/TdaHT9xh5ZIe8irkTeng
Ppak/qzGQkuO072JZKCtaca45AWMWcCaaj3H7tU0vgauJSsefNtK42swaViq
U7Yrja+F4PFhsw8sGl+LtSz+zzMHaXwdXj60+v32Ao2vQ8uqvM+JFTRugL0J
WpXRL2ncAJKVGx1zvtP4eliH/P3VJafAjK9HxtEpXxzmMpYwxPmpB8Y8W03j
hih3tTm72IbGN2C6VZ/cfi8a3wCzDQNHHdk0bgRWhqT632M0bgTua7se7Ws0
boxHl4v+/VpN48Y4m322VustjW9E/1D2rzcDNL4Rt1JGjPwlN4EZ3wQHl/gY
W1XGrE1IOn9NfcRSGjeB0pn4mb+MadwET05tEK20p3FTbJbYsvSOO42bovUJ
K+1sBI2bYevt1e0f0mjcDPYTtw/z+4fGN6OF+3W41Xka34zpsS6ZsSU0bo7Z
Ltfch9xjDHPknc51ffyY/t4c9+2U2UPeMC4zR3ve6Py0Tppvge3Dfskm9dN8
C1ybaZ3YM1SRmW+BGMnfK6tlGZdZYEjj/e6ZiowltqCpuaJfcjpjbEFJW8dk
z7k0fwt+f3Y/sk+D5m+Bwtr9sV90ab4luvZaFcuuovmWEH2zM24woPmWOC4b
Ybx6E823xMoXcZGmFjR/K65l5q/7u43mb8XBMUn1lvY0fyu2yjWvMnSk+Vtx
oeJBYpMzzbfCkaHH/051pflWuDw2+vFID5pvhbqSOs3z3jTfCsPmFhdI+NP8
bcj13eUsE0Tzt+HwEblHjSE0fxuakr81u4XT/G1YMX37sfpImm+NFvcVar+i
aL41OiyHHP4eQ/OtsdctsqkqjuZbw3dN4vfQBJpvg7zoceZDE2m+DdqPxRQ7
J9F8G6RunH2qJJnm28D1z9tHfSk03xbvz2funZNG823xaCD/r346zbdF/EjO
AQ0OzbfFk8/VQb/JEnboemN+5TyX5tvhRWLxqFU8mm+HsiccmdPkMjtIbLUt
+EyW2A71ThWzH2RsR0eni2XD4PztyBD6DE8cnL8d+mvvZY0bnG8PjWvLYvcO
1rfHHh9H01g6PpY9np7wr3OjPGX2cFhdbjON8krswNbOudmZtB7YgRIL5+O9
g+u3A1p2uiOUaX3LdmD53+kZioPrvxN2r52b2mNp/k6ccdpzQBhN83fiTk72
QlUWzd+J+/xR9nw6HyR2YccntZYqOl+wC/yNT12eBNL8XTBpeJP30I/m78JG
xYXN/9D5KOEAFdc3mYZ0vqo4oD/WTKdx8Hx2QKH0ZV/TfYwdHCD3rPf7OSf6
fAcEFoSe6t7FOMsBJTtr18yi66fMAUPW305bY8O4xQHb+gzPbdpK9R3hdMbm
p6051XeEoDLLapsJ1XfE1hWLupcaUX1HKGpu9JMZvL4dschWXaJtNdV3hIJo
XOTNFVTfESKLc+5pS6m+I2xSE3UtF1P93bgc8j5lMt1fVHbj2MxCs5b5VH83
Fk/Q5R+aQ/V346PaNdbGmVR/N9RmTjLsUKb6u+EmMJgdPJnq74byyMZdMhOo
/m40RLk5pspTfSd02kboDIyi+k44aiuq2jiS6juhVdt/RjrdTx2cMMN/Sua1
33R/dsKsbPeL5XT/zXLC8pvaqwt76X7thB8zHzcd7GLc4gRrl9ytdh/p/r0H
cxxduQOtjFX24OKwdVUBL+l+Lh4/qDD5bSNjhz3YK1WycOkjqr8Hl58GyvhU
U/09UHPqKj50l+rvwebfh1/l36L6eyCVZWRXPPj944y0/F3Gl69SfWeEu/7R
4l6k+s4YsrNpo/0Zqu+M65qZ4/VOUH1nOBxabCxzlOo7Q2+U6/AqEdV3Rsfr
q7tCOVTfGbJrGncqJFH9vTBOWuDEjaH6e6F8T0umPYzq78XnmS9yZgVQ/b3Q
0f850cCT6u/FC4OxN+FC9fciyZTbpuRI9cXjWaHOTbZUX1yv5rx0/Baqvw+R
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
xyJ82Ir6Xm3qfywmNqq7pmtQ/2MxdctefS116n8skqRcLZ+pUf9jsXK035WE
2dT/WLjODN2zcib1PxZyo7Td+6ZR/2MRMiDVUDSV+h+LIdM0jrEmUf9jkW4r
aDCbQP2PxaSJn4JVx1H/xeu9+azgjxz1PxZHr4+Z3zKK+h+Lw+tmrq6Uov7H
oiu5oLFwOPU/DoYf9v08N5T6Hwd9r4vnTv+V/Z/l43A49FHnmV+MJ8XBY8e3
O5cHGKvEYXHKeL3b3xmrxWG+upxRYy9jzTiMGJM38LWbsV4cwnSyzCd1MUYc
Al+km6/9xNgoDk8XT/7t08bYXDxe/tz27DvGNnF4cjjUte0NY4c4OOwo0F7Y
wtglDvXbbQuDmhl7xcH6hvPA/eeMg+Jg0TdSYlYjY1YcnLIvPox5zJgdh+a/
Sq7t9Yw5cdhu4PPUupZxRhz2/DRUqqpmnBUHVsX1VRseMM6NQ2ZV5vp7lYzz
43B8xX69LRWMi+JwxiR++pv/GJfF4aSpjWTwLcaVceg3cvuieJNxbRwqfuT0
lJQyboxD4hv3CS7/Mm4R5931zWVqEeO2OOj0ePx5fJVxdxwEr3d+PHiFcX8c
Ou93r3a8xFgiHlMf2E3VvshYKh4zNm7OkDlP/Y9HS1Hk0/az1P94hHzW/lOf
S/2PR9aKHt3/TlH/4/Gv0PxySQ71Px4bH9ecLs2m/sejXa5tW0UW9T8eFe5L
pJ79Q/2PR/r5WrlvmdT/eMiJHt+bcoT6Hw936cmnNh6i/sdjYrasStxB6n88
fljevXNfSP2Ph6nK9GVKAup/PNKO5mmF8Kj/8bg8zjviHYf6H4/U4hMjdqVT
/+Ox1Pxp5YdU6n88TtTPecpKof7H48UPS7MFydT/ePT3XDRoS6T+x+PpkEN5
RWzqv/jvD7ycfzSB+h+PeCHPURRP/Y9H79PLvNw46r94Pe/M7KuJpf7Hi5+n
//s0nNwSD9GL0W+NY6j/8YhN1R04HE39j0f9w+vixz7qfzxK9cY+3kWWSMBN
eZPddSzqfwLK103L3USWT4DWlrjS6kjqfwIaT7MebiOrJOCI17y57yOo/wko
s25WCyVrJqCk6qfJBLJeAn6xPqoUhFP/E+Cw7/Naa7JRAnSmbd31J4z6n4CW
1OaFZ8g24vkTKjytyQ4J2HxGqUuK7JIAe9WIoOuh1P8ESI5WeOtHDkqATEOF
jAaZlQBZSeH9TyHUf7H/SA4/R+YkoF3n7D9u5IwEbCkqjtAkZ4nzFp1L+x5M
/U/A+dttxTfI+QkY1hbVySYXJaBetXeiFbksAZfVP6upkivFn3d38djeIOp/
AgpEzrfLyY0JmGrVsyiD3JIARPcbu5PbEnAxefFIA3J3AuJPfbJTIvcnwCSn
bdn3QOo/G68W7DtUR5ZiQ/XZGM8LZHk2xjd/zk8hT2Jj1gMfKzeyChvHLXZY
mpLV2FDPrTyuQdZk42PSNL3xZD02/LInyPUHUP/ZqFp9YepLshEbV2w1bO+Q
zdni7zPVm+fJNmw07bc2PEh2YOOh9OMPUWQXNl6ntWa6k73YMHwzbJcdOYgN
j/Ndc43ILDaGL+V90SWz2bhgKV84h8xhw2h/qedEcgYbgbGTJ0uTs9hQYjXm
/fSn/rPRpf9k9mdyPhtbuidHtpKL2Bjh/+hKI7mMjV1ltjcfkivZ8LaZd/QO
uZaNNS1vjK6TG9lYf9n4xlVyi7g/SWsHLpDb2AhdWf8tl9zNRl+4Uv4Jcj8b
9wt3zzpGlkiE3duhm4+QpRKRkhCgnkGWT4TxMYtiIXlSIuZfXNPDJ6skYkud
bAOPrJaI3Eec7YPWTMT6XbfjBq2XCO/5eZsH5yMR43U8CgVko0TESulfE5HN
E7FjjOPmQ2SbRLx9vSQsk+yQiKAz81ZkkV0S0RFXmphD9krE1p+RzmfIQYmQ
2qdYNbherEQ4hWqXFJDZifh7S6RZQuYkwmDWhPm3yRmJuBOcdvIeOSsRIUo9
WXWD/U/ElGj9Kc8H+5+I1uehY/5//xMx7uqdiI7B/ifC5iT2fh/sv3h9eqeV
S9D5VZuIzZuOiUaRGxOh7iPbpEhuSQT/bylvJrktEfOmjC9eRO5OxLulYaYr
yP2JuP/ay2zw/JdIQmeI379WZKkkOMhM4DiR5ZOwUupTtTd5UhJcFh7yYZFV
krDYsCosnayWBJuRKz79Q9ZMQuG7k6UXyHpJUOl+8vnG4PWfhJJzx2NqBq//
JGzueRPQMnj9J6GhnlX5ZfD6T0KPr2vgMLqfOIiPt/9g9ASySxL0nGU+ziV7
JeFn4oMzy8lB4s9v7/xv8H7FSoLZmRRdRzI7CXkBDyT8yZwk9Ic9mZFIzkjC
Q4s3GUfJWUnoe7/A+TI5NwlG4f1xd8n5ScjKEP5oIhclwfqbze0eclkSuBFZ
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
B49fiQeJu0UL7pJVeNC/01tWQp7Fg7uza88FshoP7JasiiyyOg+vX0w24JI1
eZDdY+XNIuvw4PalZqsHWY8Ho4Ah3+zIK3n46m9vY0gGDydnm8YN9tuAB3WR
XvRkshEPNe9DrYaQTXiYGnVgeBudP+Y8LN6xJaOavJWHeZu9FS6TbXgItf8T
KSTb89A5edbrQLIDD4fHDlllS97Dw3Ct05nLyC483F81ddhkspu4HzZbA/vo
evESr1/Air8NZD8e9g6czbpEDuIhSN/DMZUcxgN38ZoNLmSWuP/Daq3XkmN5
CLtUmDGVzOahvYY15uvg9c/DCY0ztx4MXv88aGQeKsgmC3jQOnK2M4icwYOL
tqqPGTmTh4zLehtUyVniPGw5nz66P+XwID22sO8+OZeHrIBFzUfJeTx8Tt0z
14ucz8PyEu0Xg/e/Ah7Snzv8Hkcu4uGseg6vle6XpTxUbjh27Aq5jIcLsm/U
YsjlPJgd+6i9hVzJg46Tym0VchUPrJ/Nz7vo/l0r7rfZvqhScoN4vZO6ihPJ
jTw80uazt5GbeFCbt/vLTHILD9Y3rPq76Pvjrbh/5VbH/yW38SB5Yml3HLmD
hyseN9rMyd08TBp6JG0q+SsPFye7vXtH31/9PFh43+i+SP7FQ0+rbEEwWYIP
pdQy7XVkST5md2h6yZKl+JgjneP5mL4vZfmwPmKm8w9Zno8RWltv7SUr8NFi
c3eyBnkSH65VZ9BH389KfNQc6dC7SVbh44Sd1/AE8iw+qk2HnzEjq/Gx/PCB
OYpkdT5S/SxZzfQ8oMkH12JHcQ5Zhw+biVMaDpD1+Bi/edQjbfJKPvZYnyga
oOcP8OFwcH1CGdmAj+ZLhmsSyEZ8rC7uaDMlm/CR5uTJUiCb89G2ql/6BT3v
bOVj8fvshONkGz7eLgn/uY9szxe//ybsW0R24GNRRUH1V3qe2sPH6HftGiVk
Fz7GPhrKiSK78fGxtvLzBrIXHx7HfpnLkf34KCiwuNpAz29BfNR5eU47Qg7j
Q7TlS6ojmcWHnPq+4WrkWD4ebrOK76LnQzYfrR90xl0lp/CR1ep7NpTM4WOM
t7/5WrKAD4nRvOHS5Aw+3pdOfFBDz6OZfExfszFbRM7iQ2GDU8oOcg4ftw7z
kmaRc/notP5z9BM97+bx0Tvlv7uXyfni9dT8KhVCLhCfX3eP7F4z+P/b8LFe
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
L+4=
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
k+3/iIKmKH3f6C+0X0QhCkVXg47K5ZKVozDDPfJftzNZNQo9+rb+Gj2RrB6F
70ObXp66SftTtKNwd9QMvtMisl4Ual8dv+NUSvtZDKJQvdDO+8xcMqLAK/8V
svoM7X8xjUL0P4vWpdPJVlF4Mj/5uiSH9svYReHA87pZy7TJnCjoXz3qvvEo
7a9xjsIFR9PTTRpkbhRG+myyv5dJ+3P8oyDdZ/NgjhqZF4XpN9qlIzNoP09c
FGr0nhuGjCXzozB488ytOw7Q/p+0KCxQlatoGkvOjILlw+6FbzJov1C2LF+h
xqkYdXJBFH5JDJVvHKb9RUVRMOl9KOS4FrksCl0tbRqzTtD+pIoo/PE4u8xj
KrkmCgY87RXbC2k/U30UNojljg43ILdEoSFRvy3xMu1/ao3Cj4p7jZVLyW2y
8zN9bNh0t+d/7oxCU+uE7zdtyXLR+KhnM4LfQvutFKJxp6ms2tiNrByNtrgg
p6YO2p+lGo31ubbm3EiyejQOWf5UlhtM1o7GS73n97WNu//b76UXjTzNhxtc
N9P+L4NomIalX6kNo/1hiMbaqH7m/kf+/GfTaLw3DT20/TbtJ7OKxplT/mdP
faX9ZnbReJOzvmbrGDInGp4ntdNFK2h/mnM0rph5DV0bQPvXuNH4ctP4QFEO
7W/zj4Zh6uCumhba/8aLRpPlv7WnVclx0TBpqjHeuYb2y/GjUfFwznlVAe2n
S4vGu5jvWhX3ab9dZjTCP4zcxR9Gzpa1957xMmYj7c8riIZ4NMe6/Bjt3yuK
xr14N3nb77S/rywaf33SyjYsJVdE437VwYyH+rQfsEaW/6IPndNfffrP9dFY
EXBi5t99tJ+wJRqxE3v8cd9A+w1bo3HpaffQQg3aj9gmO7/9o03lvtH+xc5o
8OU3eiTdZvsbYxA9JmZX0gna/6gQA+0XQaPmCml/pHIMHEdVGl2PpP2TqjF4
8Ekj0D2U9leqx8DpjPI0lwjaj6kdA77bd8vvqbRfUy8G3yckzzE9Tvs7DWKw
2Tq6fKGA9oMiBg2jL+s4t9L+UdMYLLXe0BZmQ/tNrWJwVJzb1vGI9qfaxWBu
2FrdeTtp/yonBneNDjUXjKL9rs4xUOzVV+0i2//LjYFGY8HJE8W0v9Y/BhV3
8eZaDu3H5cVgov6TvQbnHtL4x2D49W/aY+oe0PjHIGCTx53NA8lpMZijdlCv
fNN9Gv8Y/GqY9eHGtRoa/xicMOelZBiTC2LQXVKXqZV5j8ZfFn9jp9yFN9U0
/jFojvYbe9iCXBGDXoa+zd+q7tL4y1zdEPjZkVwfA2hP28kdTG6Jge7e9dd6
1FTR+MegR3JeKXcfuS0GH+98zKvmkjtl/bU5YPUvC7JcLLJzIr1sZ5AVYmG/
ruFb7kiycize5rbU9e9DVo3FkN5tFUU/Kmn8Y/Hl6FWVCa1k7Vi0jl1Q96SR
rBcL2yVvo6Iekg1icd3G36ypkoxYGI+4eS73Btk0FvMV23xulpGtZPHn5jf1
uUS2i0X7YZd/VhfJnFgIpjnMSS4iO8fi56lBw7MvkLmxKPqhGCtg9o8FL7Fy
wgL297xYSOetPbO/mBwnOx/5z5dPlJD5sfA/92XehsvktFgo/3hgdLKcnCnL
/7PHVT47/+xYIL3IS/EOuSAWx7wv8QbdIxfFQmnrfv+MWnJZLKqGx0wtbCBX
xKJ6uXPGsufkmlhoHPN9s471b30sXmhcn/HiC7klFh1PBp5//pPcGotZgS/y
rOXY+Mdie+vijTMU2fjHwvLepF6BQ9j4x2H8lalftMew8Y+D2bd/3vMmsvGP
w6ixQ36c1GPjHweriX7PfOeT1eOg7Rx2On0ZWTsOH56o9xxqTdaLwwD3HoGN
m8gGcbBcq9HQ7kJGHI4Jdf6s9SWbxuH6L5uH3RFkqzg88VXc+TmVbBeH5gad
r+MOkDlxcN444XDKSbJzHBy+FjfOKyJz4/BnysUR42+S/eNwJdrv5cJaMi8O
B3/qvxO8IMfF4dkP7vsRX8n8OGw6pFdW3U1Oi8OX5VPszw6k+suMQ+4a+cs3
x5Kz42Ddf2cf+ankgjhoPLF3cF1ALoqD91w9lc6V5LI46L/9zM3ZQK6Ig0X2
zuYIN1b/cWhaL3ocHMTqX3b+49Ke70lk9S/L95O55ME+cmsc3K677NXNJbfF
Yfj+F4cPlZI7ZeOjvMRb/y5ZLh66hcpNzU1khXikV+sXH/1MVo7HA75TW2Q3
WTUelrNP+gQo03ylHo9mtavLoseTteOhJj7rdmwmWS8edg+tOp4uIRvEY7Xj
xR5aa8mIx138Os1zIpvGw/F6iv5nP7JVPJbIDSpxjyfbxeMK53JUVzqZE4+M
Dfq1e3PJzvEY+KerfdllMjce3aOXz+5ZQ/aPR81YwZc7z8m8eLz9vYaX2U6O
i0dF6EWziN40X/PjkR9re2H3CHJaPE5OatB3nkzOjMfcyIcz3eaTs+Mx3dxN
19+CXBCP6iKtvSlb2Pwfj95Pjnad8iCXxaPvVK+6R5Hking0bC0v6C0l18Rj
/ch5w4yyyfXx+JVVIQi6SG6Jx4Z9Oy6UVZFb4/FxRttIpWZyWzx2m3xYtekr
uTMeil0zfj3pQfcnuQS0fthU3bc/WSFBtiJDx1wVsnICepkcgutYsmoCbF7N
Cc2YSFZPAN9bwKudTtZOQHlvxVFKhmS9BDy1zBm7dDHZIAHfR+tsCVtJRgKW
LrxTeNGGbJoAsx/Wnzo2ka0SMKjy70v9HWS7BCg3Obl7cMmcBIQkhmzMDyA7
J2BRvE/CpwgyV3b+y4uqdJPI/gk4eabul4uEzJP9vUVQ6/EMclwCZoVs3P36
OJmfgM/zpm/XOE1OS4Bx297MzRfJmQnosW9S597/3f9l+U+av7i2it3/E/BA
rtfaAXXkogRwq937LG0mlyVA33HklKBWckUCKu9b7cv/Sq5JwNfjHdovfpPr
EzBiZeiJIfK0/mhJQIRXcxsGkFsTkHI14YH7cHJbAm5xN4+XqpE7Zf2vvC+/
VJssl4g32+otW2aQFRKxa9Hve3LzycqJ2BKq1WucCVlV5razF+ZakNUT4eEy
rdTClqydiH6X5z7bsoWsl4j5VYnvdzqTDRKRFPEl18+DjETovJrYFhxINk1E
jML7kJBIslUieqo0jAtIItsl4v4k3/TdEjInEarLlS9wMsjOiZg8/aqh+XEy
NxFF4x3ezCgg+8vON8MvbHAxmZeI3v31br4vJ8cl4tzyNYGX7pD5iRg23cA+
/iE5LRGbuos0LBvZ+i8Ri3MnpfZ/Tc5OxPURi9eXfyIXJKJLb6Lh7g5yUSIK
fy59rdJNLktEreOGIYV9aX1ZkYgj0zd6LVMm1yRiZNTO4vuq5PpEbIh5LFoz
ntySiO4bnfmVk8mtiUCiYbHhTHJbIkrku+0OzCN3JiLdJmNOx2KyXBK8g1f9
XLKSrJCE+drqC2PWkJWT0L7uTU7pBrJqEma2zmx+40hWT8K/X0u85d3J2kkY
Ou+n/DBvsl4StBRKtVWDyQZJ+BUa7T0giowkNG0qDfyeSDZNQlqtXmWViGyV
hL8zldol+8h2SXANuRq86giZk4Twt73aOk+SnZNgNDfvvqCQzE1C2eDLR0Ze
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
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw92nlYTd3/PvAyJBVCkeEhhJAKIUO5o1TGRJOS01wqmufhNM91xmROQlQk
oQhJkkyZKiIhlDFzJfzO7/q+1+f557leduus/V73XmevtfeZ5LjD3KWflJRU
8UApqf/////7r2sZd1mm7JBXtcvoHzBbtDR9z3RmWRROL3QbGnGNrAhL282a
+ZuZlbBp2Mjm4XHMKtgmyrlx5RrzeKwz5gWLZNnnqeLb0q/jXysyT0anMMdn
6x3292rwPPd1U3AL8zQc7bFwWGPJ/l4dgzyOq0z8wzwTVwe/WvBsWh1ZAwm8
43q1s26QNaExocU67SizNi4Nty/Usqonz8Gss1OuPfnCPBed70bqqvneJM/D
4knwj5t4i6wDmZITNsuKmOdj7hVDqztnmBdgXnRCe28l80Lcbpg/92fLbbIu
xhpsHq3Ev0NehPvLh6RXzbtLXoxKlbetKYnMSyBj+SL18xPmpVCVrSmNes2s
h+XBYx+86mDWx8LCafxHRg3kZejt3hY3IIoZiJ6gNXLTCTIX8Nv3cJywjR03
gEhjWNeQfvfouAE+5jjcfy9DllqOM7w3SE5l7Zdjgsfc5o3FrP0K5NvqD2iU
Zu1XYJ3hu3viUay9IZLm7cjuns6OGyJHfvLJo5PYcSPcrp9tV6LAjhsh4nrx
8oQi9vkr8fmpeefqRta/xK9fZNkOYu2NwU/Sc4xMY+2N8e5x8L3SSnbcBBpv
eqyf9rLjJvjd6S7nNew+HTeFtUgrIsacHTeF5RaFf84FrP9VqP0lNe+/daz/
VbC/XGF7PokdXw2HivF7fe3Y8dV4bhCrK1Zjx9dg2pmRyQdGseNr8LD28OoP
A9jxtcjqH2vX8b981sLrcMSXWWvY+a9D0sU3He9B58tdh560NS1HBz6g4+vh
fdIv3iaRzF2PPmvz8f7F7LgZTgf+VFrCIcMMRsN5Nz50sc8zw5E3WU5NfHKV
GWLdLI4dnMTab8Bi099Dqy6y9htgdFpt4+k9rL8NuJCgOSp+HLlqA5T0B2r4
nGbja44JT+0mhBqw9uZ4f+CY/4afrH9z/JopqPhPnbU3x/CKBAQsYv1vhLec
aVwqqwcbUbq349D9qw+p/UbcN5Md0OdMrtoI7Xcy8xufsfabsCbu6ZPHq+g4
NuGGd6yjzVLWfhNOy+mVG+9m/W/CBfelRV/zWXsL7N414/QSXdbeAmfdKiOe
yT2i9hbYM6tytn0HucoCk9Wa89XDG6m9JdIGLZP2L6TjsMSY7ZFZeqdZ/5Zw
Si+eY7iEtbfEBd2B/w3UZ+2tMOX+sgX6Bay9FdZoy17Ms2LtrfD+6uwtLkms
fsnf6yc4Lg8iS1kjaO2tgEAndv7WeBY+eiuH9ce1RuX3qhfK11j/1pj0aMDs
mex8pWyw/Pf+65YP6Hxgg1nu3VKLpZuovQ3iH29QEzex9jYQJT1Y+mUva78Z
sgLfM7/9WfvNWJGa0yGzgLXfDNsJqLA/QMerNkPfpy7r4D3W3hZxbztVZ4xm
9dviT72LnpY8/T3XFl9nnv+XP4Q+r0riF6utau+Tpeywqslp3EQxGXboDUhs
s9rG+rfDylH5huWXWP92KPqjab7wF+t/C6Y/6n0xUZGd/xb8KXm12egN638L
zqgFnTzbwPrfgozhml2vnrL+7TG48dvwLU2sf3uEbXU5cFm7mdrbI8REpd+/
qeQqe6i+DBvfvYS134q2kem93r2s/q2QGrq8YdkAdv5bMXvq4ZilBaz9VnQd
ezKr6N1jas/B587HG4uGkVU52GHlN7ttCf09OLjq+lJjfDF9HocD2wYl6Y+x
7Pw46O/efXVSFjmXg0/LvJQtdFh/HOyTf77Rbxa5jYMv0yaefbOZ9e+AfhUX
gtvmsf4dsOTA8osPLVn/DgjK32j1q5fGk+OAU9n99m7JYfU5YOfAnKqkxdQ+
1wHOh1XSX1WQqxywIKvOd+M4cpukvbDhl4Myfb6UI/jTrduGsfNXdcSruKcR
i73p7+GIh4H7mmL6kzmOqHE+NMriNuvfEadWBTs9jiHnOmKFrkf04Imsfkes
q1b5hnOsfkcUfNMs+nSZ9e+EefbavUnzWf9OqO7vMy7hBrsenBCWUfouoZGN
vxN2/DZZMzufjb8Tugf12CUnsPqdMD48xbmzl9XvhEOTQxvOZLD6ndBX3uR0
sp7174yU+6d/NYxi/TtDLmGM5qce1r8zIpLTK0ZqsPqdYfRCbWtDzhPq3xmJ
/r/shg9pof6dMUW+WiXqHB2vcsYVP40RY3JY/85Yhba+mCTWvwt2zC+yvXuI
+lN1QeVY4/b979h8csGwUM+6xC8sfxe8Ddi0vTWT1e+CjJoX2hOns/pdwDWz
N3/L6qtygVbtuuijbfT5bS7YsPhI6KcxbP64QtpfZv8UB/p8VVeoOmk0WLmy
+eQKJ3m9t4M3kDmumBCWEypg3+dcV4S86CpHFLXPdUXJyN2Lytew+e6Kji0V
1uK/rH9X2F44pSF8yPp3w3alm8OmnmT1u6FCZ8yRxxls/N1Ql+2fd9SP5e+G
/d8rpv7exK4/N0jFrTxzTpldf25YUxKbtWA2698NK6cvXt1myPp3wxX/2SpS
n9j9wx3b7l0dHJfH6neH+xDrCY892Pi7o3r5uosnV7Hxd8crgWW7+gj2/eYO
bvCgBTNu0njkumP0u4Ztcdrs+94dnmffaJ8V0v2lTXL8busbG3l2//HAXaev
ohY+3U9VJZ6gsNFVld3PPdD04GRm8wlaD3A88Lt+g2/lPLY+8MAOw64fDfm0
Hsr1QOp/GjPn9dB6qcoDSXKFIz5okNs8EDvW0cU8ma23t+F52Qiz12Jan6tu
w/X4m5H4QOt/bEOD8ucrZkdoP8HZhjQd36UGS2m/wd2G0wNC/l27V0P9b8Pr
2UM2TXx6lfrfhjNzDJA3gNwm8ZFM0fnEaurfEytzHXtbvMiqnhjk7MQ5XEKG
J5S2Pig9voraczxhudhs7RFd6o/rifjD5j3WUbQ/ypU4uJ/eUc3r1L8n+m+T
HXEmmPY7bZ5IyTHZsteb7Ue84LdxeYmWCo2Hqhc+Twu03PSEDC8EfHn+tt6V
9hMcL5T+7dsVf4zM9ULF6uNbei+Qc70w49X33iGV5CovXPKKlV1STW7zwuPX
Pfu1nrP9iTdm1lXufz+U8lH1xteyEy3KhmR4Y3lrqqfbTDLHG+Zq5q809rL+
vXH/vVN+di6db643Ct/qD5+wilzljbO9F89Ej2f5e2O29Be9eFO2ft6OS4V/
1eJ20fWkuh1KJ9Q758my6287XK0r7m9QI3O242h8fkjdfLa+3Y5d13a+9tcn
525HaeiTX1XL2XpxO2RPjD/b35jcJulv1oZv69ex9eMOXHHYYTxlM7v+d0Dl
yKbjzkNY/zvwcPrc2RWR7PrfAcP0Z0nL3rP9yA6EhShu+RHIrv8dMDhhqB80
mVy1A5mXLPOWfmb174DNfQMLl2a2v/DBmMj4YXqvyYo+kNvRe6jzIsvDBy9S
y5S0X5C1fdASKz93azh9PnyQsnhMWo4WnZ+ZD469MJbnt7Hz9cHEf4uKlrP5
7eODdbPFjTY32Pj5oGrHj2vcX2SeDyaJAy8GTaHvh1wf+EoZtGWuIZf44L1t
p4aJH1vP+uBArWfOVQG5wQdRq3pyFhez7xsf7F9U3dHJ9gNdPji13jrjVyP7
/vFF0td83/aXZEVf7BsxTXNzHlnVFykF3MsLZpG1fdHXPP3f6IMsH1/sMnmS
en0K2cwX+QtG+Pmy/Q3HFz96Jt/4tp7s4wvDu9pfHnez/Hxxa2O8lk0xmeeL
6S3bfay8WJ6+mP1DHvE65BJftLwMHJk0gOXri+a3arFGLZRPgy966ydNsSln
efvi0gvbhFH7yF2+qGrV7R2exfL3Q2HLEM+ZIpa/Hw7fECUsj2T5+8Hgb9eU
h8Esfz+YjXzgGHmVzU8/qHol+q4YTudj5oeyS0oRuQ5kjh+uB121XH+G7OOH
tLmO8be/sfr9YKetdX2FFI0Pzw8OHxUar8uTc/3Q36s8+48yuUTyeVlzotIm
sP2oH47aWT0bO5Xc4IcfFUduWM8gt/nB3rj7wq+Z5C7J5z9dNaKUHZfyh90D
r7JZI8iK/lgdenbkiWd0fqr+0Hhl5jmQ5aPtj7s2ap4buOz694f/tT8dGVas
fn/0e6LQnTqX1e8P/UTtr+8VWf3+EC97XTP7K9vP+2Pu9B9Rpx6Ref7gBL9M
dTpGzvXHPTm9A4tWkkv8kcq1/aLJnv9U+ePkcac9WnrkBn/wdXbaNZyh7782
SX1HqjW1VpC7/BEYPUlt/Cv2/CkArzpyatIFZMUAvDb2379+HVk1ADY3JiwW
jCRrB0A9YHX72Da6fyAAY12+NXNKyWYBUClOR00KmROAlqTpreZuZJ8AzN6m
OX6pGZkbAAurwcFuG8i8ACz9NOXr3NXk3AA8X8PZ/3oIuUTSn8PZdl9dclUA
OqPM1oTHkBsCoJl2e+LjW+S2AKgZ7d3dNpbOvysAppe1137xZPUHoqNr2i/7
KlZ/IM6+vt+76AarPxAql+e1bqxn9Qdiorn2jMHMCMRT20inWXVks0AYrO9N
Ta8hcyR2mH757yWyTyB2BUz+sekcmRuIf9KGc12KybxAzG0MPTAynpwbiNHm
fnprdMglgegZGdXvxwdWfyCuZRxXVjzB6g9EmNrkF3bBrP5ATDWtrbUyIXcF
ovdYbsUKVXb/D4KjavrVJX/p+aZiEFKXbd5t/IKsGgQl1U2jt9eRtYMwhndw
fnUpGUFY9ebBao8DZLMgmJYO7N2VQeYEwXbz/L/8CLJPEII7tHZEeJK5QZhr
Yu3IbaH1Fi8I43qU9jn/pfVKbhBm+A1Z1ruEXBKEgNB7SgoHaT1WFYSEPqvN
QxXIDUEY3D/gbMAsclsQ9k1VHNJoSO4KguWJU0ZJ5uz5cDC2DNmi89yarBiM
FSolMj9tyKrB4Bhzf/yxJGsHY5RZxbgbZmQEwzD8lW2vMdksGFc6kizH6LH1
YjAuqFao7NEm+wTDbq9i/evJZG4wVH4Yf96gROYF40amfcTMgeTcYJjNiXAt
+kHruZJg7GgynSbzhq3vgvHhmmmgVSO5IRjhY9b6nKoltwWjtTlKffQ5cpfk
fC5np0cdJUuF4FrmrZB7O8mKIZgns/X4pySyagj0x6WsPR5M1g7B6Ptb22+7
khECFw95zmgLslkIUn/+Tlq4nMwJwRTuW7eG2WSfEFQor32h08nWzyHI+z1c
+pIPmRcCzPX5KiNDzg1BwANFmS3HaX1bEoLeyGy5xfbkqhCET/uysEeV3BAC
y7LSgZ+6aH3cFoK5iyyetd4kd4Vg8/2B7zNOkqVCEfrDKFJ2N1kxFC2fbu65
kEJWDUXkhEWrPSPJ2qG43DVk/uQAMkLx41O612RvslkoSvnFxo/dyJxQnE79
otDoRPaReITS7WoOW79L/t743UN7ezIvFPoyt1aH2bH9RCgSTkWe/rqZXBKK
uTXGyiU25KpQpBjKncuzJjeEwq5dXe+KFas/FKayP9UGMXeF4sm5L0n+lqz+
MKRacsfJMiuG4aOfqlOdBas/DFmKHQoVzNphGJqyxfc5M8KQWVGkbcDam4Wh
+WnV21fMnDDIHir7dYv17xOGewlnrKXZ+XPDkPC20TuB1ccLw3+j59Tb/a/+
MGwWpT1LYeNTEgY9N6sjQxxY/WF44pNb8JaNb0OY5Pv+gt4oNv5tYXhToz16
5zZWfxgqatoq3baz+sMRYZDxMsGP1R8Os3zZ7M9BrP5wjImO23QonNUfjjN/
gofncln94biVPXj+6wRWfzhenBwi8ktj9Yejd66qgwmf1R8O9Td6ym47Wf3h
iHqpv/7uPla/5O8Tvx6PyWf1h0NHL4kfVcjqD0dpu+LA2lJWfzgcLu1ytzrP
6pfUs51rNKea1R+Opz+XDd1Qz+oPxyfrta2l91n9ETBMyFqwoYXVH4GXN0ed
VWtn9Ufglr7i3SkfWf0RwHb3kOU/Wf0ROBwh98z3H6s/AivjfgzOlaX5yIlA
6tzpe88NJ/tE4JnnS+8DY8ncCHBSqvUXTyHzIqA/+bCJ6yy2n43A9j16B/rm
svkfgfwPmkMaFrH5HwGLacVXjy9j8z8CfY83W5saktsiMDzPadt6Y3JXBFp/
tVhomLD3iZEQl9ZIXTrB6o+Eo7/MxZcyrP5ItD+urwkOp/23diSSsfH5h5Fk
ROLMtaNfOy7Rft0sUrL2GX1l2UMyJxLlYfycrW1kn0j0ONtdqWsncyPx6JjM
zqevyLxITDx2bBaek3Mj8W5+5ny1ZnJJJMzsqpt97pKrIuGqG/nm8TVyQyQG
Pl+2s+MCuS0Sv3I/WEiXkrsk51Ny5rh7AXv+EIVEuZYAkwNkxSg8fH6Ufyab
PY+IwnDzfklnMsnaUajd9blgRRJ7PhEFn0cbLC24rP4otB7lTXsWyuqPwumi
i6Nu+7P6o7DIXurV6O2s/igYb+65csqd1R+F9XHrT/OcWP1RcItKTy6yZ/VH
4ULq3Zq/Nqz+KFT/+OAaa8Hqj4KXbuPxeRtY/VH4aeNcP2wtqz8KiuPtqpVM
Wf3R0I/bMMHAiNUfDQOFXbeEBqz+aJhviOyV12f1R+PbiA3dBYtZ/RLfE6tt
W8jqj8ab+0ufrdNh9UejqfxnoOUcVn80fo5Km8vVZPVHo++okeHNWaz+aIxU
zr+xYAarPxrnd/HuXpnG6o/G7ds7N3qqsfqj0f/f0ZVzJ7P6o2GIgTxlVVZ/
NDJfzldUmsDqj8YrrcuHNMaz+rlYpbZ7qv1YsiwXHe82+h5VYePBRdyBRudB
o8kqXKTef/oiQpmNDxe/J466K6NEVudiwcaBY/JHsPHiQjb+YOnG4WRdLkSn
roqVFNn4cXGi0+Pq66FkEy4OLm1eUTuEjScXa67tn3ZGgWzNxboBabGn5Nn4
crHvZkrgeTmyOxf9BkWp3R3MxpuL543DLnySJYdwce5ckKcKM5cLzn1sXz2I
nMzFfoUx/ZJkWB5cNMpkeNYPJOdwEd764LsScy4XVSbZH10GkAsk9buWH6/s
z/Li4l7y1EQV5nIuhg3e3xrSj+UnGZ95SaOfSZPruPhpeDHHkLmBixAftzsn
pMjNXJy/cVt9HHMbFw/l54xP+Xfl/9zBxccx+ardf8ldXFhNeXvKjbmbi+3m
huub/pClYhD42Tt8JbNsDCa93FJZ1kdWjMHaqAV7JjGrxGB9qlp++m+yagwa
ty93/dFLVo/Bu5gIf1tm7Rj0bA3iXOoh68bA0ti35j9mxGCm57xFod1kkxi4
6nRtbvhFNotBjNucusnM1jGomnZlks9PMicGeTdEcuU/yO4xOB9TPr33O9kn
BqW1S1QXMIfEICV2wj7Pb2RuDPy79U13fyUnx+D1VpN7V76QeTGo1Mx79aKL
nBODLAWOdu9ncm4MTLfN9ZBjLojBmXIrgxGfyCUxMFmU6T38I7k8BtLOMvmD
PpCrYqDXarH3+ztyXQx8/2wb1txJbohB2z3uuVMd5OYYXCkbaRbzltwWgwcW
jeKVb1j+MbAyPLpS+jXLPwZnPydOOvWK5R+DznGZbyxesvxjMbW23fJzG8s/
FtpBFTqRz1n+sTDp0V3x7xnLPxYT4xJXBj5l+cfi0Zyy/s+fsPxjMffrBSx9
zPKPxZ+qkJr0JpZ/LN6vzLVseMTyj8WWW5WXZR6y/GMhjJ1+Q+s+yz8Wnyb2
11vdwPKPxetbC95Y32H5x+LIVg+e9S2Wfyw2tfcNWlXP8o/FUB+5sbPrWP6x
qFxqL5KuZfnHwlQhwOj6VZZ/LOzu+fdFXmH5x8Jxr2bK1Mss/1iE3RxXebGS
5R8L+QhL15XnWf6xuLF0j83lcyz/WGz4Z+SufoblHwtrEzOXmFKWfyzu7luv
Vn+S5R+LrjkBof2KWf6xGHkzadHM4yz/WOx5+2GRwVGWfywK/9tvZpzP8o+F
z9nZm5YeZPlLxi/+2jjV/Sz/WBh1T4v+upvlH4erHoWWp3ey/ONw9IhhuKOI
5R+H4LORtf94LP84KLaGj0jLYPnHgdP2b9GAVJZ/HOwj3VQ8E1n+cUjQPply
OZblH4cjWgHbpKNZ/nHYU/hzp3Y4yz8OgzaN71oTzPKPw3RV/w2W/iz/OIyw
19mzZgfLPw7P5UyKtTxZ/nFICjRx/+fK8o/DVK3E4guOLP84LF6tsNXZnuUf
h/qv+Vt7bFj+cdi3tlUQZsHyj8PNmmHP3pqx/CXjk7d1isEaln8c7o28sTrR
mOUfh08Zk/XOLWf5xyEsV+35Az2WfxyM5vuOfarL8o8Dz2hP8915LH/J+Mpp
DTipyfKX1Ft0Pjl0BstfMn5RTeZaaiz/OJhen2fWMIHlH4f+E/btsBvD8o+D
t7f8wQcjWf5xWLi36NH8oSz/eLzu7PoXK8vyj8f5wTkjL/Rj+cdDc9Dlga19
VZR/PF5Ifb71/idZNR4Trms4tHeR1ePR5DW48vo7srbk856cbha3k3Xj4R0o
X7aulYx4LOg8veZrE9kkHqu1Zh7i3iObxePuiycVPfVk63jM/rlIvKWGzIlH
y8+WJUUXye6S/pt4Z1+fJfvEQxTHVZQrIYfEwwamVmOOkbnxmDpcdc/IPHJy
PC4v/PapezeZFw+udJb7DSE5Jx5a8tdUE9LJuRLPzp6nkUAuiMdVw61VlyLJ
JfHYqTT43dIgcnk81ocvaTqynVwVj0QjUWmfK7lOUt+bF8f1t5Ib4hHp5vjN
y4rcHI+aTzI1SevJbfEYOb/SJsuY3BGP95zyn3HLyF3xOHn2zkuXheTueKQd
vOE5X4sslYDwvJuvv04jyyYg/sq5wv0TyIoJaJqVN3HRKJZ/Al6dNy2sHsLy
T4Dz3D1VSway/BOQpB1VZtpzmfJPQIK+a3ffW7JuAjS92twFjWQk4OmdpQvl
r5FNErDq+MlC99NkswSY+XZPKzpItk6A3XsNtaYsMicBb14VLn4fSXZPwLyx
S1TfeZJ9ErA/clPhIxtySAIixh99dNKYzE3AoZSGS2HzyckJ0Hmy8aTuFDIv
AbsrHoz7oEjOScADV3HBzr+XKP8E3C0zn63/gVyQgDhrh4qXj8klCfBrnp+T
fJ1cnoD3K0ws550hVyVA3YJT+yaPXJeACflrBx3lkRsS8O3V0NSQKHKzZPwi
3VU4XuS2BGy686bFcTO5IwFGnOUuiSbkrgSkHhhZ1rCA3J0A8chz+iZTyVKJ
0JKe0/ttJFk2Eb+Lrjm09CMrJmLX88ZIma8XKf9EwMypM/IFWTUR9ScWP1p1
j6yeiLxTWYOCr5C1E9FP9vcjhVKybiISxs0cPfoQGYmImKkne1BENklE+B4l
1bOJZLNEFB5bVOcQSrZOhOaN5Z9PeJE5ibhz+ZPjUQ7ZPREGUqVN5hZkn0Sk
VAYHnVlFDklE+l/1M7dB5ibiz7UnJdKzyMmS858cV/zzaCXln4h1WkNQOJmc
kwijDeJy2b0XKP9EnBqra5qpTC5IhNwAh7Rs/nnKPxGL5hmXHBxJLk9Ep3/j
6MsHKij/RLiP9W6W3kauS8S3wd57+6LIDYmIKjSN3crcnIhSRzelI07ktkQc
MWyITAG5IxGK9TLRb8aSuyTjl1Fs/+t7OeWfCHvhn9zau2SpJMivk2lqKSTL
JsHQoLsgKIWsmISTKWtGHHMnqyThnGHMFjdTsmoSlo36PkM0i6yehLpF58sH
DyNrJ8HdMS8p99s5yj8JZaPLHOc9JiMJod1W2w9eJpsk4dZ0vQd3jpDNknBj
9Le8/EyydRJWOi/YqhhM5iRhfvNoh/4csnsSLq/5sNTPlOwjOZ/087M3zSOH
JMHnd/+0vP/I3CSMEtwztZYlJydh7mPrVN9vZyn/JPQ6ztF530rOScK4y4MP
VdeTc5OwfNJf5x9nyQVJMNgcIhdziFyShMbpK2SceOTyJNx9nrwnJ5JcJTnu
/qVxgie5Lgkbb/VkfbUmNyThw8/GHYrG5OYk6GHf74D55LYkOGq8PDBejdyR
BM2Y5Mr+I8ldSWjf+eDktH7kbsn4/1nYFvPlDOWfjNb2QzXDX5Blk2G/dtb7
+w1kxWQoTZn690oVWSUZP3RarreUkFWT4duvV+e/g2T1ZFw99sUijk/WTkbQ
t5Ct8rFkXUn7lZzjpX5kJKMk+llpkBPZJBkLhwSMtthENktG3ZidO1cbka2T
MUhuwgjrBWROMm5V7o8LmU52T8aTvMoBhSpkn2TojAmp+ziYHJKMQ86JY5f9
LqP8k1GvXb5l3wdycjLco/zkBrWSecmQdlxaHHaXnJMMcb3j659V5NxknC0o
dQorJRckQ6ht2tk/n1ySjDJu6EqBmFyejM6TtTZqSeSqZESM/jK0IoRcl4yn
u5Tt128jNyTj2t5nq97YkpuTMS7g0quIteS2ZIT0NzYYsYzcIfn77WEJh7XJ
XckYcXVBy/zJ5O5k/BEfCaweSZZKQWVxZdaqgWTZFJxsKve8/fM05Z+Cz9PO
mK/qIKukIOj1YlHVY7JqCm4KWxO0bpLVU1Dl8DI2u5KsnYKYXa3vvxeTdVPw
JGbHtFUHyEiBwLRjr5hHNklBYLbcpcYYslkKErZU9yn4k61TcL/k9d2FzmRO
CrR1u09ZWpDdUyCn+FXVYyXZJwUzGgbv376QHJIimR8xxa7qZG4KrNYGNZqN
ISdL6q8szdOQI/NSsGJD3P6e3lLKPwXZthnW596Tc1NQ/fKog8tTckEKvKPO
rul/m1ySgjv9E0/wLpLLU7Ck8/h/Q06Qq1KQYuQwN2Q/uS4FJhu3J97LJDek
QN2h/xmVaHJzCgLG5m1eu4PclgJ3pX7KO7aSO1IwKfNXbOR6clcKas1tDUOW
kbtTUFP8rcdeiyyVir2O9kZzJpJlUzFoz++6T0PJiqnYdunx9J1/T1H+qeBO
yxs48xNZNRUuRxJljj4jq6di+2Otu0Nuk7VT8U2raIB9JVk3Ff1PbV2zs5CM
VLS7fV9dsZtskooBQauPXU0hm6Vi+JXtcmdDyNap2LAgTpnnRuakInXvBZ8N
lmT3VHz5uLq6x5Dsk4o4nS0lyfPIIalIeSn94s8kMjcVmodm9lorkpNTId67
5+CuvyWUfyp2qL6MuPyBnJOKvGur5tQ/IeemQvi2yamijlyQiuxE3Yr0s+SS
VDQlXn60Ip9cnorjprZbWvnkqlSU78/4ZhtNrkvF0cHOSyq9yA2pmLjZp+mv
Dbk5Fb7CKx5TjMltqTg86Zlwhg65IxVTjX79UplE7kpF5/kfL04PJXen4r6j
auvW7pOUfxpyf5yMHfOALJuG3StcvwuLyYppuBp+MuBOElklDb9ks1bUOZBV
0/BHa+cB7hKyehqOTn1x7acSWTsNGvsHfp3x6QTln4Zlj5Ttx1wnIw0KQ8XL
aw6QTdLQnubXOCOEbJaGxQMGrDc1I1unYXKqVNskdTInDZe/h18o/VdM+afh
7ZWXw383kn3SUBf4c3hvMTkkDa1h9R0n4sncNIyLvXJFxZacnAYL97TaBXPI
vDSo5k6ZKDuInJMG5WkNX9KeFlH+aRgkPcnpyilyQRrmbugSH00kl6Sh5atj
oZ4tuTwNgeWd1bFa5Ko0BOiv6A3sT65LQwonyntUUyHln4ZpG/4scDpObk7D
EtvQHbaR5LY0SJkP0vy7ntyRhnVl45NXTSZ3pSEiRcxf9v045Z+G+j/n7Z5e
I0ulY0HNqt6JO8my6Vh2qtDrlQdZMR3veI7TG5aSVdJh69Tb4jSMrJqOzcuv
7tv34hjlnw7H6bVREafJ2umIS7qX9S+erJuOv68T26ZakpGOQa4e0Z+mkU3S
8cXpY6j1rwLKPx1eE1OeOl4nW6djTlRtqcJOMicdk75aDLJwJbunY23a5PbF
88k+6bi5zM38Yn9ySDpC/a9tbrl3lPJPh9ENu4GiA+TkdIwwbbd540XmpcO+
vWbrvUXknHQInOZP2CRDzk1HTJ3VXu/7Ryj/dEzQsn4xfj+5JB2LFmV853iQ
yyXHh+1+pqtDrkrHdSlB/qG/hyn/dGQ/+M88t47ckI5TtXmfZwvIzZLx2OyZ
tNqW3JYOTssj44vTyB3p2JiQv2rz93zKPx1+n05bpl8hd0vylE7PNM8kS2XA
c13WqKLNZNkM5ElpKudMIytm4F7L2NPKXw9R/hkwklX5EXCRrJqBx79KNw7I
JKtnwF9jsIKGPVk7A/puQ13ezybrZkB7xPBjBn/yKP8M3NLtmap5i2ySgfN7
U2aX7CabZeDduzzl6+5k6wzEKqfo+i0gczIw8NXRT9NlyO4ZqG1W/z6x7SDl
n4F9ZulD2i+QQzLwt+HJIYudZG4GIjc4TgzwIydngPtw+nv9tWReBqbO+i/w
zHRyTgZMc601m6TJuRlw4a9LO9SSS/lnYHavwoCxZ8glGdjxK0RpcSa5PAMf
jTKX9ncjV2Vg+uVcqcBl5LoMlDYe6MwcTW6QfP4QPXnDngOUfwY0xHNNVtWQ
2zLwffEq/s1MckcGstbmLL5uTe7KwKG3oX3bFpC7MzDKqrL+lS5ZKhNWWZM3
xxuQZTOx+UKTyuBVZMVMXDv1WsHXnKySCZknE7422ZFVM6Gsc//mokiyeiZW
jn9gX7CPrJ2Jp40TwiZfIutmIrbJ4+WRVjIy4Xso5j9lKarXJBMJL5x/vh9F
NstE51cd+dtaZOtMLA92uG67gczJxL993lwFf7J7Jhzse0JbRWSfTLz66iFt
VUMOyYT07R8ea3rI3EzJ90nBxjBNln8mNGZ8LK5xYflnovsmd8qnPJZ/JqpX
8C1s2PWVm4kDWufCB0yg668gE7PFRuc/2pJLMnHhverkkex6Ls/EwEd7Svya
yVWZKGi2WS83muZHXSbSvXUfNlmQGzKhe0hf+rGI3JwJl2vjw18/JrdlYnvD
w5/rptN87ZC0V8mL+xvA5n8mrkyy2POlms3/TGxcfOPg1OH0fSGVheK+T+07
t5Jls2CyN2vM2DKyYhb2LfE/XaBA31cqWbhwqTUlyoWsmoXepqX7cy6R1bOw
9mdYy7fR9P2onQVN5WWjMnzJull4bDx9iMNNMrLQPG2kh9dU+n42ycICBF8s
jGbf/1koyTufPO4J+/7PgnzOfp1yHbpfcLLgnVMyKiqL7J6FXWG1Ph7vyD5Z
yHsW7xtkRPerkCysuPRZ52AumZuFs2oDr73+TU7OQuJth7GwovsnLwurjn4e
X1RKzpGMT/e+/KlD2f1fcvz75LACD3b/l9R/6Fmh3Q12/8/C58ud8QWzaP1Q
noWtN/ve9GWQq7Iwvfipq0UXuS4LnffXZxSb0/qmIQt7POWapc6Qm7Pw/Hbe
+VWjaX3VloWn4vQDiaHkjiyclh7bebKF3JUFtwSDnrYJbP2XhQktIbJP15Ol
ePBJNq2v5ZIH8DBzcmP7/lNkWR76ch73ObwkK/Bg2qdzdshIWi8r8mDnHFV2
YAVZiQduGW+PcgDbL/Dw49U4Re988ngebkfMLz/0kO0feLD927Hk3ADab6jx
0HDvutFhHbI6D5bRIXGezmQNHhLvGx4ZJCJr87Bp/xGn4KtkHR6O3LsfWP6V
rMuDYtbyvXWTaD+3lIejfYv2HjZj+08eTGLXGKyNJhtKPl+rdctFtl814WHM
wLyb31rIa3hIalPy+jSY9stmPOTe/K5euJC8iYfVgWXfp7uQrXlo2/Ou3lFA
tuNh6oKLJTaXyRweLs40OSPHnj848zBl278v/uz5hTsPBoYKaUJDspdkvB8d
Punmw55v8BDr6bz70x5yAA/HbmTxp11nzzt4mDzH/e2Qr+QIHoombuvNG0/P
g7g8NJ9On9++khzPw9biMMUGH3IyDzoDaoe57Can87BRadS1g1fZ8zEeznPM
7sZ/IIt4iPp24YmCMj1Py+Hhs/PEg7p65L087Nn5uFPGhZzLg9WiHylB6eR8
HlZNWOiceJpcILke0qd7zH9CLuLBXjRqZ6wUPV8s4SEvfVyv1zRyGQ+yT4cV
fVtNLpec3/SEh8q+5EoeshTPFdwXk6t4iD8U4jnjPLmGh4D8/7zHtJLrePj1
dKt8njQ9T73FA3bhVLUaez4rOR71pjHMmPyQhz+dwdL1Hux5reT6+vOl+mQa
+amkPlFfxaxi9vyWh+2GF/h6d8jtPDzbs0f69Sf2PJeHq7dUb08aRs+PP/Dw
9GvR1W+a5C4eTkwyqdq8jvydh2R3l2OW3uRuHn72HPZ5m0bu4+FN3u4RQ46T
pfhwq4zLvn6dPIAPo5phQ0e/JsvyUVWjIv4tTc+3FfiYeoazIXACWZGPyN41
fvGLyUp81Goe1J5hSVbh4/PGRXecfMnj+dDPvirWSSer8tFQFfpkzxGyGh+2
CU9+7aoiq/PhcNZxg9YTsgYfqYKV5nbfyNp89NOf5T1JgZ7P6/ARGt82LlqN
rMtH2N+xzwOXkpfyUXlKU19mExl89Desr9X2JBvy4feoVOFnDNmEj4U7uccs
c8hr+JL9rt3SjSfIZnxUS130+HCVvImPFBv1lsmPydZ8/C78ov/rI9mOD279
b+Nt/dj7C8n46IcXR4wiO/PBqamYqTWTvc/go/Hjk6hYPbIXH6r98ryCzdj7
DT4+Ki06P9SJHMBHnFOPtmkge9/BR3avzr7pSeQIPgYfl75zPIe9/+DDfNVA
8YNj5Hg+TCxX1OadZ+9D+DjX8n7hmJvkdD6ars6qXthC5vFhHPBX/987soiP
wDqpVJ9ecg4fS5yMuOmD6X3SXj48LWdKbVJh78/4CJ+o3Xl9GjmfD5uf98Z1
6rD3aXyc99waWr6cXMRH/MamVwvM2Ps1Pn7+uqrnsoVcxocCX2Wb4Tb2vo2P
GX3D1jwKIldK8juhcF0ljr1/4+NvW+ilYVnkGj4+vC5WvrCbvY+TtC+7fXLc
EfItPkz5p3bMPcXez/FR01q/UKqS/JCPKdLy7xJq2fs6Po7Z3nSraSA/5eOW
zVl+5RP2/o6Peu4p4x3t5HbJ58XWuT/7yN7n8TFq7ZgHg36RP0iuH/krTp//
sfd7fPDG1P8UydL7ye98bH461q2Hva/s5mNDpEvmf2PIfXz846oY9ZtElhJg
8FwzxwJ18gABhrbUXVDUJssKMODGvalLF5IVBDAZZuA/S5+sKIBI1j3wuSFZ
SYAxGbJ91qvJKgKserzqUc4G8ngBHk8ou33AiqwqwMjz/5Vs30JWE2CxTLGR
jBNZXYBBN29auLmTNQSA/qQjAm/2flmA08K03mQ/so4AHqPGKq8OZu+bJedb
O+js43DyUgGqAs7umc9l758FeGh7PHZrPNlQgJszE6daJ7P30QJUxw3SU00n
rxEg83V/bjl7/2wmwL0/LocmCcmbBLhmP2uzXTZ7Xy3AVpGjhccusp1Asn+b
YWi6l72/FqAgtehB336yswAxH9VOxrP33e4C8L40R784RPYSIF9/3MeRR9j7
bQHef1m1d3wBOUAAi9cPtPuOsffdAnzU1VpzupAcIYDfuPaM5cXs/bcAC+4m
C4+fIMdL8u+42v3+JHsfLoDe5bVWg06R0wUwGPd15R9mngCrZQVb7pSSRZL8
n0/VCmfv73MkeQZfXjugjLxXAKO4dNNtzLkCZIx8XFLMnC/AKP0RineZCwRQ
76z7coe5SIC5Z8ta//f3JQKclT+3xYu5TIDvS1q/yTGXC/DgmrtaKjufSkle
J+t83rHzrRLgRM8Raw3mGsn1qvbWxozVVyeA+e3jXZYl5FuS87O32Ak2Pg0C
2N3Mqh3Cxu+hANIua35cKiI3C3CqrD5nExv/pwL8dd+jdpfl0yaA5dp8OS2W
X7vkelijdiGA5dshuV4jz+Xn5pM/CPBloa3O6TxylwBO2n6PinLZ/Bdg/r66
LxnseuoW4Kd9zhdLdr31CRClmbFEdjeb/0LE363TydvJ5r8Q54zeYqqYzX8h
2hX6V/MFbP4Lsdi8QqWDXf+KQkBLM189g81/IaraFas3prL5L4S9cu4djyQ2
/4VY/a9YzZPNN1Uhhp7J/886hs1/IYw2pg6fE8XmvxBj5w+0+hnG5r8Q29U4
KwrY/NYW4nRS5kzjADb/hViQpr31gQ+b/0L0Gu2cu5Z9XywVwvdJ3fcyDzb/
hYjix3+Xc2XzXwjbrpXR6x3Z/BfiZd3aF7H2bP4LMW/FXpfDm9n8F2L/i78W
5yzZ/BfCJnLY73JzNv+FqF+6aO/xdWz+CxEcWxmdvorNf0k9D0vf2a9k81+I
lMoRkyYvZ/Nf8ve5p10a9dj8F0JesKE3fBGb/0LUjeZPHMl+vxIgBOdDP+W9
7Ps7RIj8s9PHjNZg819yfuX+HvHT2fwX4nyA+fL2yWz+Sz5v7cznCyaw+S9E
zhhOWAS7f6QLkVu8ee0ZJTb/hZBxTOS9GMbmvxBfU63DpeXZ/BfCrdPcUFmG
zX8hqkcMmvSfNJv/ks+7M2blmD52/xfimufKt4PZ/a5AiE/yjgs/f2H3fyEe
vLZ3v8F+b1MihFLU+sKct+z+L/n7Rg/tLS/Z/V9y/WTLTR/9jN3/hbgwqfxi
bRO7/0uOl02d7HWf3f+F0HBZEDPoNrv/S67nWVKDdrHf79wS4sTDO62q1ez+
L4TWl2nzDvzv/i9E2YW62Urn2P1fiG3fSn9Fs/XCU8n1emJqxctCdv+XfL7a
4V1L2fqiXYj13n2XM3LZ/V8IWV2YN7L1yAchvMPuBY4Ss/u/EKOUOevXsfXL
dyFu7vjYLyqF/d5HiHcKd08fZuudPsn1OvJU/LVI9vsfEcbez9n5LJg8QITF
C94O+eTLfg8kgoq+rewvT7KCCHIcpaPdLuz3QSJUd4oGf9tKVhLBy6pm3Rsb
sooIBnlfRPc3kseLUJ74qOfcWrKqCPurRbuzjclqIsxcXS3cbkBWFyE1zEEa
S8gaInTM7/grN5+sLUKsvMHRu5pkHRH0TG4rZaqTdUVwl3FzWDmZvFSEqTpO
R7rHkSGCqUDYl69MNhShu9AkYvUwsokIjrUb9T7IkteI4HdD1iqJ/T7KTDJ+
k9A2vo/Wu5tEWLbT+nPRD/Z7JRFCpy3avfAz2U5SX635z8oOtv4X4Zlmnore
S7b+F2Fvzinlcra+dhfB1Xe3tOYjtv4X4eGQQV3777D1vwje5jrf5erY+l+E
Sstvqn7s91chIpRIFyY/ZOv5CBGcDtjozS1j63/J5/lkm6UVs/W/CP/NFz54
foSt/yX5FP3XpJXL1v8iBCof9Azfxdb/IlzNm36wWsDW/yIof7RNGpjO1v8i
pG1JnW2YQN4rwk5BXl5UFDlXBM5l3R9lweR8ESYOTJr31odcIMLc69s9lbeR
i0QY3xN6fBnb75SIUOj29I+LHblMhOe/A/yS2e+/yiX599xROrqOXCnClIVT
vlwxJldJrh9zm5GP2e/BakQY1Sqb9GERuU6EutQwq7655Fsi/F19LEtWg9wg
gnTwisXDp5IfirD2WaHDqAnkZhGWv+wdpjKa/FSEprR/60YpkttEqMqE+vDB
5HbJ+Fn+yZdl+8MOyd8P1LrT10v7xw+S6z80pejjN3KXCInLIkxaPpC/iyCf
Nu/4tdfkbhF61Xc9Lmol94lg62nRymsiS4nRb0TDZd8G8gAxnLXmJKy/QZYV
o1vWcf7MarKCGGe/DWmSvkBWFGOjxiGfxtNkJTEGFG2ULSgiq4jxqFs5P+gw
ebwYe78eNl2+n6wqRsOehL9yO8lqYlS2/rnekEVWF2PF+omFwmSyhhg1HdVF
G9n+XFuMBXWp9xTD2P5fjEmvXv5304/t/8UYcUE6O5bt75eKoTakU2+hM9v/
i/E+ynVMpx3b/4sx21hJI8eC7f8l4/PQJtRwHdv/i/Gft9eATyvZ/l+Mgw/W
N4iWsf2/GA+fNT7X1WX7fzEsFPPnP9Fm+38xJuvMfBgyg8wRI7yz6KIS+32h
sxgXFhp8Lx5Ldhdjzdg7oYYjyV5ilMoNMWuWJ/tI8khKDfEYQA4Qw2bXke+/
+uj5SIhkPM3F1+J+kCMk+Zpt/aDwicwVQ1PnpYfwDTlejM8T7umPfk5OFsN0
2hnPnCZyuhjjbnzsGtVA5omRzzl1R1BHFokxIWvIQIUr5Bwx2gvfCmMryHsl
ec3+E/bzFPv9pBjbhrVXuB0n54vhsUjerDGP/Z5SjMXPzy9dvodcJMaDF0rR
hUJyiRgCDeVRI9jzpDIxTikKpILiyeViXN+3VK8pglwpxuPu3Pr5geQqMVxL
ph3le5NrxDgxdPi9dy7kOjGueESvNLAn3xJjhq/3QDF7vtUghm/oafk368gP
xXh9TcZKx5jcLMbFuz3t0cvITyV5p/WV1i0kt4nhVWR3aag2uV2MiNdGA8zV
yR1inFGvjhGokj+IYd9eMa9BhdwluZ71v4+SH07+LkbzmtHqKwaTu8XQWF/g
FMKe3/WJYf1CvvZ4D3v+l43+cxJXP/nCnv9lI1tzSZfMO/b8LxvTL2qWaL8k
K2TDt80wyeoJWTEbPzoMfMPvk5Wywd1f77G3nqySjb3uzl7nq8njs6EbGBjw
6DxZNRvPnxlGfiwlq2Wjub43pl8hWT0bX0S5kUqHyBrZUHqt6jllD1k7G2b3
jY20hGSdbJT/rZbRZc87dbNx6tSk43px5KXZWPXl4QyEk5GN+F1a3GX+ZMNs
zPFzPbrEk2ySjXEreLt0nMhrshH95rDZTFuyWTZkN8fWjt9I3pSNwXdefpdf
TbbOxsbTro9+LSfbZcP1epZD22IyJxuFE6oF1+aSnbPxdrah49GZZPdsWN7T
v5Ewmewl+Xvzi1WcsWSfbKR7FxvojiAHZGOh+XNDBTlyiCTPIwOvPpUmR2Qj
IfFM2bEeer7Mzca+GNcR/l/I8ZLzz/F7qNtJTs5G4/xR33rbyOnZ8NHwca1o
JvOyMaQwZlpAA1mUDa35mrNm1ZFzJMdzlni1XibvzcbfZxteZJwj52ZjpsHv
mEUnyfnZODwu3+jFEXKBZPyadk9J2E8uysbqlmEjp2aTS7IxKURZ/koGuUzy
+fcP9LNJqFj2/wDvdFgH
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1453.}, {0., 11.653816420795707`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"<x>\"", "\"var r\"", "\"enclosure\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.958399553098137*^9, 3.958399612844594*^9}, {
   3.958399650507161*^9, 3.9583997246935062`*^9}, {3.958399864273869*^9, 
   3.9583998778367577`*^9}, {3.9583999114394197`*^9, 3.958399957413136*^9}, {
   3.958400021456997*^9, 3.958400058098333*^9}, {3.9584001386457043`*^9, 
   3.958400186845169*^9}, {3.95840022066677*^9, 3.958400247162119*^9}, {
   3.958400323915955*^9, 3.958400401559861*^9}, 3.9584006256145163`*^9, 
   3.958400674672596*^9, {3.9584007136731157`*^9, 3.95840075914498*^9}, 
   3.958400810652967*^9, 3.958400841859248*^9, {3.958400909268303*^9, 
   3.958400997698955*^9}, {3.958401158069696*^9, 3.958401178883595*^9}, {
   3.958401371348733*^9, 3.95840151087811*^9}},
 CellLabel->
  "Out[2118]=",ExpressionUUID->"6d6182a6-3b53-46fd-943e-16a9265442e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["No video", "Subsection",
 CellChangeTimes->{{3.8771446939247313`*^9, 
  3.877144695330412*^9}},ExpressionUUID->"602775f5-c144-4760-8d05-\
5dce18c88c22"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dt", ",", "T", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "5000", ",", "300"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"J", ",", "k"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "0.05"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"znew", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Dynamic", "[", "results", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "NT"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Round", "[", 
      RowBox[{"T", "/", "dt"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Z1", ",", "sols"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"t", "<", "NT"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"znew", "=", 
      RowBox[{"rk4", "[", 
       RowBox[{"z0", ",", "rhs", ",", "dt", ",", "J", ",", "k"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"z0", "=", "znew"}], ";", 
     RowBox[{"t", "++"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sols", ",", "znew"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"plotResults", "[", "znew", "]"}]}]}], "Input",
 CellChangeTimes->{{3.877144698428904*^9, 3.877144698587327*^9}, {
   3.9109065365666523`*^9, 3.91090653790619*^9}, {3.9109065761583967`*^9, 
   3.910906576294586*^9}, {3.915990719698986*^9, 3.9159907237173986`*^9}, {
   3.915990853298237*^9, 3.915990853361206*^9}, {3.915990927608822*^9, 
   3.915990927790656*^9}, {3.915991047429126*^9, 3.9159910512994213`*^9}, {
   3.915991141442391*^9, 3.9159911647521763`*^9}, 3.915992612569015*^9, {
   3.915993331201371*^9, 3.915993339024495*^9}, {3.915993729770926*^9, 
   3.915993730806138*^9}, {3.915995375383347*^9, 3.915995375640081*^9}},
 CellLabel->
  "In[9392]:=",ExpressionUUID->"0434f075-b06b-404d-b070-04c995a1db64"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`results, StandardForm],
  ImageSizeCache->{55., {1., 10.}}]], "Output",
 CellChangeTimes->{{3.91599114176579*^9, 3.915991165026515*^9}, 
   3.9159926128759747`*^9, {3.915993336808213*^9, 3.915993344429997*^9}, 
   3.915993731049465*^9, 3.9159953771611433`*^9},
 CellLabel->
  "Out[9397]=",ExpressionUUID->"e4f7bc24-0547-4ec8-ac91-f9ea9094d1a5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      {PointSize[0.03], PointBox[CompressedData["
1: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
MfwfmZM35w==
        "],
        VertexColors->{
          RGBColor[0.4006511766710266, 0., 0.844451570585328], 
          RGBColor[0., 1., 0.], 
          RGBColor[0.8652738592699433, 0., 0.], 
          RGBColor[0.4296927978773262, 0., 0.9056625293144986], 
          RGBColor[0., 0.5596260363194883, 0.9644176977370754], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[1., 0.8806211896174918, 0.], 
          RGBColor[1., 0.6930617769560692, 0.], 
          RGBColor[0., 0.5435611978960587, 0.9720259745238927], 
          RGBColor[0., 0.5700565725898289, 0.9594778156861019], 
          RGBColor[0.8513707435377026, 0., 0.], 
          RGBColor[1., 0.8168845603833516, 0.], 
          RGBColor[0.4101179795664746, 1., 0.], 
          RGBColor[1., 0.8609778709675753, 0.], 
          RGBColor[0.45606403656755373`, 0., 0.9612451289096783], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.8160215731127888, 0.8429892613338172], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.519670321365779, 0.9833406480071285], 
          RGBColor[0.791151162662978, 0., 0.], 
          RGBColor[1., 0.6980642982144966, 0.], 
          RGBColor[0.4476661357337955, 0., 0.9435448924905302], 
          RGBColor[0., 0., 0.], 
          RGBColor[1., 0.6424620405321825, 0.], 
          RGBColor[0., 0.9083116276571764, 0.7494368105488036], 
          RGBColor[0.24824252886507794`, 1., 0.], 
          RGBColor[1., 0.7532125301424217, 0.], 
          RGBColor[0.13433825714056213`, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[1., 0.6643537279807068, 0.], 
          RGBColor[0.35853188885097875`, 0., 0.7556768437840651], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.4367047302209329, 0., 0.92044156311042], 
          RGBColor[1., 0.6828526930370742, 0.], 
          RGBColor[1., 0.5773842067703556, 0.], 
          RGBColor[0., 0.4963761629061514, 0.9943727169520831], 
          RGBColor[0., 0.6518919395142463, 0.9207207422502645], 
          RGBColor[0., 0.7577271797578002, 0.8705973746602178], 
          RGBColor[0.37121959399184207`, 0., 0.7824186909498428], 
          RGBColor[1., 0.6237553336292847, 0.], 
          RGBColor[0., 1., 0.], 
          RGBColor[0., 0.778917880538106, 0.8605614992537116], 
          RGBColor[0.8057146031728893, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.8916642580218579, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[1., 0.7286593029563085, 0.], 
          RGBColor[0.6995304883149491, 0., 0.], 
          RGBColor[0.4282216589721178, 0., 0.9025618132018576], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.7215272531540398, 0.8877415907428521], 
          RGBColor[0.6884289006384077, 0., 0.], 
          RGBColor[1., 0.7155807219143591, 0.], 
          RGBColor[0.3855197487508371, 0., 0.812559094495349], 
          RGBColor[0., 0.619909571471178, 0.9358675306558448], 
          RGBColor[1., 0.7814903143584585, 0.], 
          RGBColor[1., 0.6704617434056954, 0.], 
          RGBColor[0.8420514235795091, 0., 0.], 
          RGBColor[0.31072309143010973`, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.9012662312446864, 0.7863711719824803], 
          RGBColor[0., 0.8162784032991534, 0.8428676270482074], 
          RGBColor[0.38729898268314766`, 0., 0.8163091817933879], 
          RGBColor[0.8951710775232427, 0., 0.], 
          RGBColor[0., 0.6096111133267093, 0.9407448607587294], 
          RGBColor[0., 1., 0.], 
          RGBColor[0.20765836305441826`, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.38214371156538857`, 0., 0.8054434286253661], 
          RGBColor[1., 0.794289233418256, 0.], 
          RGBColor[0.9317222054596955, 0., 0.], 
          RGBColor[0., 0.8800061989024018, 0.8126862647970877], 
          RGBColor[0.35518362194786235`, 0., 0.7486197092747682], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.9566689745160579, 0., 0.], 
          RGBColor[1., 0.68100709517422, 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.3975349591673579, 0., 0.8378835260655956], 
          RGBColor[1., 0.5824961142178501, 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.6653253466540638, 0.9143587062922383], 
          RGBColor[0.3556482328906217, 0., 0.7495989686983501], 
          RGBColor[0.4282394678003103, 0., 0.9025993488283905], 
          RGBColor[0.4193435361064422, 0., 0.8838494139021418], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[1., 0.7114652733257081, 0.], 
          RGBColor[0., 0.7326510746486741, 0.8824733701341161], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.38769259433350234`, 0., 0.8171387961704238], 
          RGBColor[0., 0.7512587212795947, 0.8736608242380516], 
          RGBColor[0.3475070735807045, 0., 0.7324398658029907], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 1., 0.], 
          RGBColor[1., 0.6409415970466767, 0.], 
          RGBColor[0.4105599117304014, 0., 0.8653361888533369], 
          RGBColor[0.9261916600458195, 0., 0.], 
          RGBColor[0., 0.7858225636577267, 0.8572914545190741], 
          RGBColor[1., 0.7081296921485788, 0.], 
          RGBColor[0.2880593009410688, 1., 0.], 
          RGBColor[0., 0.6791231598847386, 0.9078240883057492], 
          RGBColor[0.3929300676456113, 0., 0.8281778067158507], 
          RGBColor[0.837583392990127, 0., 0.], 
          RGBColor[0.01448311523339213, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.13574349038980624`, 1., 0.], 
          RGBColor[0.8807232312097963, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.8168348369978347, 0.8426041011115316], 
          RGBColor[0.8185419739120864, 0., 0.], 
          RGBColor[0.7795804944799654, 0., 0.], 
          RGBColor[0.888141931607864, 0., 0.], 
          RGBColor[0.4312731311566198, 0., 0.9089933941601634], 
          RGBColor[0.7576401510126656, 0., 0.], 
          RGBColor[0., 0.6188442349220877, 0.9363720720102584], 
          RGBColor[0., 0.8012635242741231, 0.8499786450698018], 
          RGBColor[0., 0.8995112742009174, 0.7955712529942787], 
          RGBColor[0.2712938024572805, 1., 0.], 
          RGBColor[0.6705839332392677, 0., 0.], 
          RGBColor[0.3973011350697912, 0., 0.8373906955488565], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.16070224162262448`, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[1., 0.5830330121327869, 0.], 
          RGBColor[0., 0.9270835558302645, 0.6510279859264271], 
          RGBColor[0.38331548263665777`, 0., 0.8079131678377189], 
          RGBColor[0.8041952472810154, 0., 0.], 
          RGBColor[1., 0.53451986942508, 0.], 
          RGBColor[0.08705351617653677, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.8030562253429068, 0., 0.], 
          RGBColor[0.38514068922198114`, 0., 0.8117601515915805], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[1., 0.5429174497811782, 0.], 
          RGBColor[0.377455902985446, 0., 0.7955629451813195], 
          RGBColor[1., 0.6581390087263657, 0.], 
          RGBColor[0., 0.8939384238327579, 0.8060879896864118], 
          RGBColor[0., 0.776881775417254, 0.86152579474914], 
          RGBColor[0.4131919680791208, 0., 0.870883768011878], 
          RGBColor[0.200065529709109, 1., 0.], 
          RGBColor[0., 0.9037945208383507, 0.7731170190300849], 
          RGBColor[0., 0.88113945054908, 0.8121495589822026], 
          RGBColor[0., 1., 0.], 
          RGBColor[0.4609813379502402, 1., 0.], 
          RGBColor[1., 0.6046636298302601, 0.], 
          RGBColor[0.027358282972573693`, 1., 0.], 
          RGBColor[1., 0.779710223667688, 0.], 
          RGBColor[0., 1., 0.], 
          RGBColor[0.9849892279773216, 0., 0.], 
          RGBColor[0.7913808628401294, 0., 0.], 
          RGBColor[0.17632009627192272`, 1., 0.], 
          RGBColor[1., 0.695816982307154, 0.], 
          RGBColor[0., 0.8072975840664129, 0.8471209258797355], 
          RGBColor[0.17829302136574038`, 1., 0.], 
          RGBColor[0.3923367990714704, 0., 0.8269273758962663], 
          RGBColor[0.9214960048618843, 0., 0.], 
          RGBColor[0.802158077456637, 0., 0.], 
          RGBColor[0., 0.6205602583547463, 0.9355593665908694], 
          RGBColor[0.47276355227806616`, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.7775700920781904, 0., 0.], 
          RGBColor[0.9550532930731488, 0., 0.], 
          RGBColor[0.418600729190724, 0., 0.8822838014613353], 
          RGBColor[1., 0.6125889988459559, 0.], 
          RGBColor[0., 0.5129563399603173, 0.98652037677426], 
          RGBColor[0.8988588290494252, 0., 0.], 
          RGBColor[0.8806382869382073, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.4034245087092102, 0., 0.8502969161920919], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 1., 0.], 
          RGBColor[0.8605009925807251, 0., 0.], 
          RGBColor[0.8449016367698207, 0., 0.], 
          RGBColor[0., 0.7601432356406004, 0.8694531352097947], 
          RGBColor[0., 0.7217299260800479, 0.8876456052322841], 
          RGBColor[0.9272974039082229, 0., 0.], 
          RGBColor[1., 0.595594944954391, 0.], 
          RGBColor[0.43888088502197775`, 0., 0.9250282396175203], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.9249644795247423, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.9236504800656523, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.7901834806820714, 0., 0.], 
          RGBColor[0.763039724917699, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.967527936235143, 0., 0.], 
          RGBColor[0., 0.6930485240971228, 0.9012290624179979], 
          RGBColor[0.709134072204636, 0., 0.], 
          RGBColor[1., 0.8166625204834531, 0.], 
          RGBColor[1., 0.7515335863432726, 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.8587888485460682, 0., 0.], 
          RGBColor[0., 0.7228904650370391, 0.8870959761993649], 
          RGBColor[0.8188679470269582, 0., 0.], 
          RGBColor[0.44681374526226647`, 0., 0.9417483110392653], 
          RGBColor[0.8124741271315534, 0., 0.], 
          RGBColor[0., 0.5056675177351365, 0.9899723490554254], 
          RGBColor[0., 0.8752170128748027, 0.8149544141504227], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.3993819123484053, 0., 0.8417763450696282], 
          RGBColor[0., 0.7101618237896076, 0.8931242363771529], 
          RGBColor[0.4468747727818387, 0., 0.9418769386029726], 
          RGBColor[0.8662042588268996, 0., 0.], 
          RGBColor[0.9042274871233911, 0., 0.], 
          RGBColor[0., 0.5829982205145584, 0.9533486759528769], 
          RGBColor[0., 0.7448815229095551, 0.8766810532030027], 
          RGBColor[0., 0., 0.], 
          RGBColor[1., 0.5436938669643544, 0.], 
          RGBColor[0.36175008659818003`, 0., 0.762459831830322], 
          RGBColor[1., 0.8151253414327483, 0.], 
          RGBColor[0.07820018023527578, 1., 0.], 
          RGBColor[0.12463260361088245`, 1., 0.], 
          RGBColor[0.8143709796487062, 0., 0.], 
          RGBColor[0., 0.9065106453508357, 0.7588781716225567], 
          RGBColor[0., 0.7249936294234225, 0.886099921563892], 
          RGBColor[0., 0.7211791338777349, 0.8879064593670576], 
          RGBColor[1., 0.6707579077669307, 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.42500468782198914`, 0., 0.8957814104514512], 
          RGBColor[0.4279686937221334, 0., 0.9020286389218575], 
          RGBColor[1., 0.7116670401097506, 0.], 
          RGBColor[0.12883796730325883`, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.6849812136159399, 0.9050497252499698], 
          RGBColor[0., 0.5528885503047201, 0.9676085582422709], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.45325198964160135`, 0., 0.9553181840223306], 
          RGBColor[1., 0.706265745522267, 0.], 
          RGBColor[0., 0.741994263400747, 0.8780484537905084], 
          RGBColor[0.36075392301802345`, 0., 0.760360220126164], 
          RGBColor[1., 0.7452697816234842, 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.9300261083528638, 0.6356021259684852], 
          RGBColor[1., 0.6300976121388882, 0.], 
          RGBColor[0., 0.8549875875691451, 0.8245350313285713], 
          RGBColor[0.36105686150218375`, 0., 0.7609987228777731], 
          RGBColor[0.0010036796368519075`, 0., 0.002115453279699295], 
          RGBColor[0., 0.8003211599796897, 0.8504249469993379], 
          RGBColor[1., 0.6354854586875047, 0.], 
          RGBColor[0.35508542448782454`, 0., 0.7484127387123818], 
          RGBColor[0.22571135952098415`, 1., 0.], 
          RGBColor[0.839844545077419, 0., 0.], 
          RGBColor[0.4709797623545241, 0., 0.9926829701058103], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.6885315462736921, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.883645609186064, 0., 0.], 
          RGBColor[0.9215309186466685, 0., 0.], 
          RGBColor[0., 0.6192247305022103, 0.936191870030417], 
          RGBColor[0.8389668782176906, 0., 0.], 
          RGBColor[0.3420192382915763, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.7171779239975242, 0.8898014247223514], 
          RGBColor[0.4525534486180443, 0., 0.9538458707013956], 
          RGBColor[0., 0.7423382072190224, 0.8778855626552489], 
          RGBColor[0., 0.6957265692679552, 0.8999607453412711], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.7001426934090288, 0.8978692773846914], 
          RGBColor[1., 0.6986225981341541, 0.], 
          RGBColor[0.8621179865093355, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.028047257513242597`, 1., 0.], 
          RGBColor[0.7965414357186666, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.8567239168859876, 0.8237127090812253], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.859837943434459, 0.8222379120569544], 
          RGBColor[0., 0.846175525581176, 0.8287084070513722], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.6535425514561344, 0.9199390155879412], 
          RGBColor[1., 0.5499261711177155, 0.], 
          RGBColor[0.8301514980326914, 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0.4311859730107675, 0., 0.9088096911350886], 
          RGBColor[0.26272934240193685`, 1., 0.], 
          RGBColor[0.07430839920739425, 1., 0.], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.8662294364862668, 0.8192109131580266], 
          RGBColor[0., 0., 0.], 
          RGBColor[0., 0.7302044406965524, 0.8836320912997531]}]},
      AspectRatio->1,
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm]},
      ImageSize->Medium,
      LabelStyle->15,
      PlotRange->{{-2, 2}, {-2, 2}}], 
     GraphicsBox[{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], 
        PointBox[CompressedData["
1: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
         "]]}, {{}, {}}},
      
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Phi]\"", TraditionalForm], 
        FormBox["\"\[Theta]\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      LabelStyle->15,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->
       NCache[{{-Pi, Pi}, {-Pi, Pi}}, {{-3.141592653589793, 
        3.141592653589793}, {-3.141592653589793, 3.141592653589793}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[
      {RGBColor[0, 1, 1], PointSize[0.06], 
       PointBox[{-0.0022743896329707647`, -0.00001459222557492479}], 
       {GrayLevel[0], 
        InsetBox["\<\"Z\"\>", \
{-0.0022743896329707647, -0.00001459222557492479}]}, 
       {RGBColor[1, 0, 1], 
        PointBox[{0.012433660830548717`, 0.0017390512733168552`}]}, 
       {GrayLevel[0], 
        InsetBox["\<\"W+\"\>", \
{0.012433660830548717, 0.0017390512733168552}]}, 
       {RGBColor[1, 0.5, 0.5], 
        PointBox[{0.8510295587849093, 0.49630170230430576`}]}, 
       {GrayLevel[0], 
        InsetBox["\<\"W-\"\>", {0.8510295587849093, 0.49630170230430576}]}, 
       {RGBColor[0, 0, 1], 
        PointBox[{0.07145194228000815, -0.07749953819267134}]}, 
       {GrayLevel[0], 
        InsetBox["\<\"\[LeftAngleBracket]x\[RightAngleBracket]\"\>", \
{0.07145194228000815, -0.07749953819267134}], CircleBox[{0, 0}, 1]}},
      AspectRatio->1,
      Axes->True,
      AxesLabel->{
        FormBox["\"Re(Z)\"", TraditionalForm], 
        FormBox["\"Im(Z)\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      ImageSize->Medium,
      LabelStyle->15,
      PlotRange->{{-2, 2}, {-2, 2}},
      Ticks->None]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.91599114176579*^9, 3.915991165026515*^9}, 
   3.9159926128759747`*^9, {3.915993336808213*^9, 3.915993344429997*^9}, 
   3.915993731049465*^9, 3.9159963218758087`*^9},
 CellLabel->
  "Out[9401]=",ExpressionUUID->"24244e8b-d455-4ffb-802d-bda1be9dec99"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Catalog", "Section",
 CellChangeTimes->{{3.9584009117796164`*^9, 
  3.9584009149282303`*^9}},ExpressionUUID->"f07bb820-a8cf-4e27-9302-\
cf9f5910752a"],

Cell[CellGroupData[{

Cell["C shape", "Subsection",
 CellChangeTimes->{{3.9584010468196497`*^9, 3.958401051720194*^9}, {
  3.95840112584004*^9, 
  3.958401126504057*^9}},ExpressionUUID->"2acf08db-8620-4006-a43d-\
23be3b9c7aaf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dt", ",", "T", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "2000", ",", "50"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"J", ",", "k", ",", "\[Alpha]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2.5", ",", 
     RowBox[{"-", "2"}], ",", "1.55"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"R", ",", "\[Omega]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.005"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"znew", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results1", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Dynamic", "[", "results1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "NT"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Round", "[", 
      RowBox[{"T", "/", "dt"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"t", "<", "NT"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"zgoal", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", " ", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zGoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"R", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"zGoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"\[Omega]", " ", "t"}]}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zgoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"znew", "=", 
      RowBox[{"rk4", "[", 
       RowBox[{
       "z0", ",", "zgoal", ",", "rhs", ",", "dt", ",", "J", ",", "k", ",", 
        "\[Alpha]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z0", "=", "znew"}], ";", 
     RowBox[{"t", "++"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"scores", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"meanDistance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"radialVariance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"occlusionScore", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results1", "=", 
      RowBox[{"plotResults", "[", 
       RowBox[{"znew", ",", 
        RowBox[{"L", "=", "10"}], ",", 
        RowBox[{"zGoal", "=", "zgoal"}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<<x>\>\"", ",", "\"\<var r\>\"", ",", " ", "\"\<enclosure\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.958401071272626*^9, 3.9584011045511923`*^9}},
 CellLabel->
  "In[1843]:=",ExpressionUUID->"7e9a6686-ccb3-487b-adab-c6b52254662e"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`results1, StandardForm],
  ImageSizeCache->{1098., {171.134033203125, 176.865966796875}}]], "Output",
 CellChangeTimes->{{3.9584010777409773`*^9, 3.9584011048782673`*^9}},
 CellLabel->
  "Out[1850]=",ExpressionUUID->"8665cb5c-619a-420b-83ec-07f2ab2b0c75"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.9584010777409773`*^9, 3.958401122848469*^9}},
 CellLabel->
  "Out[1853]=",ExpressionUUID->"ee736963-3800-433b-9a27-a49edc6a46a5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw9nHlcTdv//0N1ixCFEEqGTMk880KRsVISQrOiaJ6H0zzXGRIyRYaSISSZ
6yPkEpmSDJUMIZQxFL/ze3z3695/7uNpt877vPZzD2uvtfbRtd+8zKm9goLC
X0UFhf/////7r2mW6bmcHrvMNCD8A3yHrNk4t7m7wCo4uitCVrSdrI5ztyxG
vzcha8Ii4tCD123dBNaC20rHCwfOkLVx7k9vi/feZB38mnutSWsMeSBcbq0x
mfpRXeBBiC5a/+zGYfIQ2G95nj/ZhayPupLIjV765OE4cObwaI3qrgKPRMcj
5WumbCQbIDs+MnWxItkQmWk9nZ7s7yLwGByoUDhVuog8FntWDXyl1NJZ4HH4
u3V6//G55PEYvzHr8rp15AkoWHfohXMf8kQMfrI+d0m1msCT4KVSfrZlN3ky
Nvc+oDbWhTwF8funDs6YQJ4K9/ah0nhl8jQsPZLXtry6k8DTcdvJ4ZFNPnkG
pO+WXhgQT56Jtq8G42fZkWdh0o3+IT7TyMDVoYZK4p4Ci4ADaqPsgz53FLbP
hlr5EhebOwKLZqM2/+K3jKPcPgcfzWrfjk/h9jkQqStfVNrE7XMRujA+86Ep
t8/Fo3HVp8PHcrsRQiqGDKrqwe1GmNRn9vujP1WF7cZw/lb1v7ZnAouMsXNl
pGHV/7h9Ht4d/zZwfg63z0NmxhPlBancPh+be4hGPvDh9vnYWqRe92Q1t5ug
7MSaeZZzud0E5YPCVo0fwe0LYDfbMc9Pg9sXoI/iHtPerSrC9oWQBjnE9Hsl
sGghsrTv6cbd5vZF8Ht44fnqIm5fhIL1S6T79nH7YijlBTjYp3D7YryeMaf7
vgBuX4KWvBXO6x25fQmO2128VWjG7UthVX1WTzaD25diaX/dY23Dud0UM+69
G/Rdi9tNoelv/DzoH243Q6PnlvYJ3//5P4YZjEvb39B+LbDIDHtv6xSOqRS4
2Ax62zpU/e+awArmkNb9/v3vGbY3R+NosydGuWxvjqK7iTNG7GB7c9QFjlEP
TGH7ZTAJu+4zTMT2y3Ar7Py1Sd5svww/Li7csceZ7Zdhx++wizar2N4Ce6ct
0N+4lO0tUOXurXB9DttboGDjzTS3SWxvAavnW+dYj2R7SwzpPConVpftLbFh
paP/155sb4ns8Odbd6uxvSXKVDeNiWzP9suhKvp8ZWeLstB+OSxepi1q/Ciw
aDnUBv713/xK4OLlkKyJbz/kqcAKVriTL5nY7T7bW8Hayv7O+H/Z3gqfy6pd
tpWwvRXmbW1qWXCW7Vdg1pe1FvYn2H4FDHpozu9ymO1XIGpsg3J2NtuvwNsq
A43ru9neGl9DVUyCd7K9NR7MSW8q38X21nBf0q32+X/trWE1wy567XG2X4ku
LYqjrC6z/Uqo5qXWnLvL9ishOjx7xcCXbL8SPz7Nzov8zvar0D2jYshyVe7/
VRi+a7qSvzb3/yrYWKn1LBrN/b8KQel6Tu3ncv+vRrLp43kLrdh+NdIsA45F
urL9ajxFl7lZIWy/Go5bzCftSGN7G3R8cn3gpn1sb4MuKp2Me5xmextUGsgm
pl5nexu8LjskffSY7ddgSIhBbtN7tl8D/09v5jxuY/s12FSo4SPpKpxvxWuQ
+09DUG9dnn9rUXVTfMhzrMBYi2Z0XpQ5l+frWnycVnNYZsn2a9Gxj0HLGie2
X4e6U14Lfvqy/Tp0jeia4RTL9uvwsmTDqX0ZbL8Ov1fCIv8g29siO+J7+9RC
gXVs4bO+YsS0a/w8W5T1fKNx5qHAtrao8n9Wo/Df9c4WM96bben1VeAsW7xV
1+z/q71wvSy2xRm9hYsPdRO41ha/JgTX9NPh9dUODQNPJNoYCKxjh5aSbb/t
pgsMO2iKo1+MXCiwrR2WnOj4+/wKXo/t8GHDI80uTgJn2WFbt0naA71Y3w6l
eg91f4Sxvh1KnKbbJSexvj3iu14xrtvK+vZYoVbk/i2b9e3RYe69vLLjrG8P
3TCVf1afZ317VHbsfvbINda3RzefJyMu3WV9e4y2m/I97Snr2+Pppt5VA9+w
vgNKIuwL/ZtZ3wHahw9lpP1mfQc0N5dmblQS7o+2DqhM921V68r7pQOm9fmk
4qslcJYD5l5L0j6gK3CxA1IOp+3ePVzgWgcMH92jzX4c77+OkC4bnftlmsA6
jrCMN9NYZiQwHNFyXjEnfDHrO8I1rlN5qCXrO8Jr6rPnS2xY3xF1A/YZNDuw
viNUS/YouG5kfUfsVdVOKvRifSeMcjz5rTqQ9Z2weoPGykci1ndCxxuDLh+J
Y30n9N3ho2eTyvpOWFzV7P06nfWdEJ5ULVm8g/WdYGxesSxtL+s74ZimYuTx
Q6zvjCf/bKw7yv6MjjNizJuGJ51ifWfknt3WzeQs6ztDKydtzqtLrO+MzJc9
nR1KWd8ZS/ZZ6ly5wfrO+G3T1k2J/adaZ3ytrqoa9oD11+PrRD31sY9Zfz0a
+90y6/+c9dfDyW3rmE8vWH89wjvrzT/whvXXY657pd7sRtZfj7Z2xSuuNLH+
erzd4OQx8hvry9t7JLaE/GR9F3R//tn/dBvru2DUpYHele2E/iBcoKiks7FW
SWBbF1QbTH52X5X9RRd0uXtzzonOAme5wChTt1tgN4GLXfDo6uyzI3oIXOuC
rG3Vh25osf/pCtMBBsYW2gLruOJ4D9VvZQNY3xXVu/7Xc4Qe67vi6zQjpaAh
rO+KC069exUOY31XLHsWs7tmJOu7Iuvv3rffR7O+KzYMD5nTOpb1N8Bo3cxP
nyaw/gZcNl8x9t5k1t+A6N4HF2azv2y7Qd6fOeTtMJP1N6Bb+MFX3Wez/gbo
5DQ8PDGX9Tcgo1+dH+ax/gYoRa5tuWTC+hthNeZc3KhFrL8RpZOVzZKXsP5G
HOk3NeiJKetvxDCsHdV3GetvxLP806mLLFl/I+7avC5xs2L9jSgPGvA2zJr1
N8J/1MzBkatY3w2ulk1b/GxY3w3NSQ9X2qxlffn2dbtTx9myvhuuFQ4zb+Xz
hMgNZQlZFwsdWN8NJ1+nfbJ3Yn03bFrdrn279azvhhV3JV0lLqzvjieNsWM1
NrC+O2a3r4+O28j67qjL99f56Mb67mic8KP//E2s745RcYqZ0s2s744zxnPy
KjxY3x2aW23d2nmxvjvefR72Y5A362/C1+ZUp2k+rL8JO4eduGvky/qb0GHA
h+Wz/Vh/EyxX1auN8Wf9TRiXLeqmGcD6m1DvphT+jly8CXcC1DwLAll/E34V
iDt4BbH+ZgSt+rxML5j1N6On+e/gMjI2o7T6xQ67ENbfDKUks4qPZNFmtCWv
neQRyvqbYTJtx6dX5OLNOKbWUcssjPU3Q/GxXsUxsoIHFgRWTmofLrC6Bzpf
j9q8kKzjgd9//m6NIxt6QCUp7d5ZMjwwacpL1JHNPOD+srfSH7KtB1rTT85W
Fwns4YHkAdLeWmSRB9pMfh7vQRZ74J6fSF+VnOUB1y/dDn3m5+V74NjtetN7
5GIPdHTwnJ9DrvBAZZzPSR9yrQf2BD4/PYnc5IHqiAq/5v/ye2Knc3qffWR1
T6geSb+2gKzjiSH5llkN3J+Gnlhz2KU8jAxPnNjq7q1GNvNEO+12RZL/fHli
hd3Z4i5kD09UtmqfiqJfkSee1mUWNPF4EHti7IbId8vJWZ74GvQ78BSPn3xP
RNz6E6dKLvbEYJulU6x5vFV44rXappN7eHzWesIkdGevWh6/TZ441vNWcm+y
gheUV++csJjHu7oXYnwsJgT8dz54IahT1bFdPF8MvVDgmFd6gecTvPDxZv22
h57M74WSRUOXNPD8s/XCqdMH23/j+enhBavfWtW//zt/vXDrceGXVnfm98KG
qombW3i+Z3nhZeaNjR95Pcj3Qse4nio1vF4Ue+H7xcn2/7oyvxd6ulzYms/r
S60XPC12XpXw+tPkBbX6WSqbnJnfG8ZLA4ONeb1S98Yxg+ipWo7M743PqxRt
X9szvzdOqikp5/P6B28UmrYY+/L6aOaNfkWFkyeuY35vHF4T/v3zGub3xpre
LRl5vN6KvLG5g8EY29XM743vBhlP1Hl9zvJGSFaXIxd5/c73xozQmjPOK5jf
G8oeFzTUeL2v8Eaf2dfuH+X9oNYbKbuTOy22YH5v/Oimfvu1OfP74KVO6agw
M+b3wZItkundeb/R8YHy+6pO2bwfGfqgrMbniOFi5vdB7MCLBucXMr8P3g5I
2DdnAfP74G7D2F7X5zO/D1YZZu4w4f1Q5IP7a4fOvG7E/D5QOHNbbS7vn1k+
6Jek0eMC76/5Ppge3slxLJjfBwWVdsoHeT+u8MHrG6tUes1gfh/selHpG8P7
d5MPrG2sVjVPYX5f3I1tLV7F+726L4z0ZQUlE5nfF43PUmYNYf/A0Bf+AZ3d
4scxvy9al9XPbRjD/L5Yui+9wtiQ+X1x4PyavnsNmN8XJmYTRv1i/0TkixO7
7nQxH8H8vriXtrfswH/9GV/oP6y3bxnK/L5IfLHllQn7P8W+sHotst46iPl9
4Zc79Ur9QOb3hWyN/igDXeb3RdSKiF1+7F8p+MHgtHnfi/2Y3w+rPoYcbfdf
f8wPO02LVxn1YX4/dF53elgM+2/ww4zhD3RKOX5o5oc+ob7z2rG/Z+sH93YP
s6ZrML8f7s7TmOjH/qHIDw0nJ6kd68r8fqhaOXbYy//6k364cemZVEuN+f3w
OkTBdFFH5vfD1qqlDiEqzO+HyVPcHuYpM78fTiY1Hn6syPx+UE1d/lapA/P7
Y4WiToYh+7vq/nB7VFS48i/7w/440C/SLIL9Y0N/2HZ54HLoN/vn/nCvbVO8
xf60mT9M0+cN//SD/XV/uBz+8Ez9u8Ae/tC7NmLwmK/sv/tjycxxSmYcbxX7
I3uHYZQ7++9Z/jintGh/wkeB8/2xbc9+9/3s7xf7o/uDVS8vvhO4wh9PpbGd
KxvY3/fHpPDpHxtfC9zkD4l6SlL7V+z/B0DvYPS7nvUCqwega+oI9eF1zB+A
KoXYdtNrmD8AT7ulX1n8jPkDcGqL+WqbJ8wfgBt/Tpdv4POMbQB8xhQMCHjE
/AHIMZ1qFf2Q+QMQGjrGL+0+8wegYXdo9Pa7zB+A2V3bYvbx+Sk/AIUW8eGH
y5k/ANvKmn1P3GT+ADxaqLTpDJ+/agNQ9yzO7cJ15g+A89JJfsVXmT8Qmvdv
pF25wvyBGJn34eLVEuYPRK8LJkrXLzN/IJQNAjZcv8j8gbBWUf987TzzB8L4
dmbW1f+eFwPR1nd70JUzzB8IJeOI6OLTzB+Ip18u/e8CnzfFgUi9eXJK0Qnm
D4R7p5MfTh5n/kBMm6Bcf4TPq8WBmFXY2O9gHvMHwlyWsW93LvMHYo2Wvm8G
n3ebAhGQVLQ95QDzByGr3lwzOpv5g3AsqqkhkM/LOkFY8DOy7+Y9zB+EVcVv
jzvsYv4gnOr4I3cFn7fNghCUvKnzou3MH4SRS5Sez9jK/EFYGmo3wHAL8wfh
k1mfh7oy5g/Cu+dn2mtImD8IfZVO5XVIY/4gzDD3vf8lmfmDUPzROrQ+kfmD
YLU958i9eOYPwqj0PY4lscwfBMWDrjnHo5k/GEd66wXvimT+YIy+UlWTyPEH
nWBsUI1/7B/G/MF4+6X/RscQ5g9G2/SQrWZBzB+Mdi6b7aYHMH8wUp8U3Rzq
x/zBWP1X9XF3H+YPxoC1SsltnswfjD3/znzzZjPzy/8+ftqHu+7MH4xV/l5Z
5zmeUhyMDnMXdzjgyvzBeCrT00pdz/zy7zvXuM7PifmDUbKlyXYdx2cUQlDq
vmL7fDvmD8ExeYdh9DrmD0H3e8+m91rD/CE44alz5M8q5g+B90ynp6+smT8E
39/svnPLivlDMGhWQdwpjhd5hMAkWKScuYz5Q+TPDveXiMyYPwQL9LzWOS9l
/hC08+s5YzHHn/JDkN7Ro2HMQuYPQc6MQQ69TJg/BNZht4+1GjN/CGIzFMrr
5jJ/CHS/zLl8bTbzh2JAo2Zc3izmD8VYtQ+DxTOYPxQ1K6bs8uH4mGEoFNPX
fbSewvyhOJd0sc+MScwfCuPluXq6E5g/FIMyPDsqcbzNIxSdr62paDBk/lC8
9jjmd8uA+UPh77/rz/GRzB+KkqVrXWUcv8sPxcSZ/Yv89Jk/FLN2KjauHML8
oYhXHac8YxDzh2LP4av/6Axk/lAo295vbq/D/GG40Op+9VU/5g9Dc9C+qLK+
zB+GZaMDR+X1Zv4wzPj17UpKL+YPwyl/LRMPzt+ZhUFr1NNzyzSYPwwBpyf3
m9CN+cPQ8F7Xo9d/45dhMNGML/ipxvxh6Nre+v2TjswfhogZwT0uqTB/GLSH
Vo3LUmb+MIzsvWx+pCLzh+FT3A0zx/bMH4bzA7TN5ykwfxjO1A1aoP+H46/h
eDrzwpSOrQKrh2PpmCK9Rs4/6oRjsWXjP7d/CGwYjs2/hr05/o3js+GImYP/
Sb4IbBYOxRGt2705nmsbjt/Z+puXfxLYIxyH96TOmfSB48fheKn7TbP3e4HF
4dBdqvvmVwPHk8Mxyafy7NPXAueHY7p2ZcqllxxfDkeNeq1D1guBK8Kh4Xpy
emQtx5vD4SlW7e34XOCmcJQvzfppzPFoBRHKb4+uGVotsIoIJdmb/1Wt4v4Q
YfPtHhfePxRYSwS/ksqC8vvcPyKcc3Q6fZzj3foiTNXyviS5w/0lgk3h8Qrv
coEni7Bzy43G5Te5/0QoSnDXmHxDYBMRvF/OM+5znftThN++fyNbSwW2FuFo
8qzy55z/tRXhx9ejg0qKBXYRIbblU0L2Je5vEXzW5LbFXBA4QARjpxCRyznu
fxGSb6pqLCoSOF6EvaVNp0cV0ocIg1tvu6oXCLxNhHQZRn85QT8iZOvUKldy
fiBHhBt585qLjtKXCLePdfq0I0/gIhGgcVUhPJf+RFgw5p+h9ocELhNh3m1H
e+MD9CnCy76bT+lzPqJKhO5nTvdR20u/8jyHrm37tFvgBvn+WmNgcH8nfcs/
v9D/SWGmwC3y7/d1xN7MbfQfgXPX74WHZdB/BGbP/+xvn07/EdD93iVxnpT+
I5D6v7zC4WL6j4DFPwv/dOF8u34ExqW42n3h/IphBE4lx9c+SqD/CHTI1wu5
EEf/EZjbo3D83hj6j8BI87MdY6PoX97e88CfDRH0HwHXds3qZuH0L9/esduc
CaH0H4HEvoHSPsH0H4HgBTvaKwTSfwTuT2iQvvKj/wj0635n7k2uD4iPQPP+
iz1OcP5IHIG3S3VUt3rQfwRud7XvH7qJ/iMwMblxuYMb/Uegq4Z+/oIN9B+B
g9nBowxd6F/OXxbf7ulM/xGI8lWQtTnQfwRq1/4MfmlH/xGYcXx7ws119C//
/hPnXDi5hv4jELprmWYm1zM0RKDOdZg0YiX9R2CryqCJrpwva4nAzvu7FcyX
038kjvX+1jzZgv4j8XpwREddc/qPhMn8nQtVTek/EqFVu082L6b/SOycXzun
mvNz+pGo6Xfm9/9M6D8S0f8EPsubR/+RyHkS1JBuRP+R6LtfvV/YHPqPhOmB
lOD1oP9IDHE2UjSfSf+ReHIm9sxUzg/aRqL44oEtg6bSfyS0vzXv7jKZ/iPx
avr5+y0T6D8Sm5+Zja8fR/+R6CVuV1I+hv4jcSu2b1DRaPqPxDbvxnXZo+g/
Et3FJV6pXB+SFYns/W9OBg6j/0hUdc3TcRpK/5HwLl9xwWww/Udia+iU2Ol6
9C///I07wvR16T8SDellBzQH0H8kLhzv1KrQj/4jcX7M8YgPfeg/Eu5WbROr
teg/EimDoX29J/1HwjawZEyBJv1H4pTiTf+93ek/Cu+sD35MVaf/KNx9vzMj
pAv9R8G6X8vmDWr0H4XBM9oFW3ek/yh0EbcrmqdC/1HwXD5n6ARl+o/C6ltq
N/QU6T8KJycf3tWd88OIglKDw4F2CvQfhdCJUbVNbcJ8slkUYmXmprW/BbaO
gk2s1uc7PzkfHYWQk7o3Lv8Q2CUKPZ8WPjj+TWCPKPRq1O2R9UXggCgEfz2S
KG7m/HUU+o3fNyHik8DxUbjcZ3FPrw8Ci6NwbvG3kQ7vBd4WhRsHGwIt33K+
OwqS2Z5txm8EzomCtm/1mUmcH8+Xf9+nm3OH1QtcFAVb69B7fes4Hx+FYxqm
47rUCFwWhXUxY24pPBO4IgrjfDx3fakWuCoKuT9XH3pdJXBtFF5Fz3z3uFLg
hijseObsXP5A4KYo1A/R0y65J3BLFNq9KOl0uoLz/9HQb5ZMyOV6JZVodM98
sX3XLYHVo1Ea32GK9F+BtaLR+Z6RRlwZ1wtEQ+f7d/0QrhfQl3P9hiDPUoEN
oyH90fzP+v8JPDkarxWf37Up5vqCaLw0j6hadklgk2j03WWgveAC/UfDaMCU
XbPO0X80zqR8XT2R66lso3FN+7T1KK5fcInGkMg7skEF9B+NuT+2ddY+Sf/R
ODVt/TWNfPqPRvRW8aVOx+g/Ggefbfze4Qj9R2PVJrNNrbn0Hw3RlIwh3w7R
fzQUS7YM+HiA/qNh3jdn5Zts+pfX+zbkYe1e+o/G7Qw3afUe+o+Gat19yYNd
9B+NXsuL7t/eQf/RsNP0s76xnf6jkV7vqlO6lf6jMWxU84jLW+g/Gg0dNgSf
k9F/NFIHj+taKKF/+fdry3tzIo3+YyA5OF7pGNefqcTA+9Mol8NJ9B+D9NU/
1Q8l0H8Mzgz5+Tc7jv5jED1fPGFvDP3HYLbXwJO7o+g/Bgf7avrtjKD/GGQF
/xuRGU7/MRgmznu4LZT+5azT32trMP3HwOJSwoqMQPqPgcYtq9gt/vQfg/CQ
j3/Suf7FJQbGj86VpHvTfwwunx9yJ92T/mNQWb9r6JbN9B+DiW+Sb25xp/8Y
TJ5pdz5jI/3HoKdxwo+trvQfg5aZPqLt6+k/BrorpVY7uB4nJwZaxyyDdjnQ
fwzumoxq3GNH/zGoHZp2ZN86+o/BNXw8f2AN/cegb9TlPrmr6T8G1U8CbhxZ
Sf8xODpZUpa/gv5jMDVJpHV6Of3HwOfW5bNnLeg/Bm1/y45cMqf/GGyY1Ovz
FVP6j8XFLUMSbyyh/1icW+bje2cR/cdi2aWwgocL6D8WGkZX5z+dT/+xkGwq
G11vTP+xqHmn6v6O65cMY9GapKbweTb9x2LVUsu3P2fRfyxMVzsPaz+T/mOR
qXajuON0+o/Fk08d8jWm0n8sxv+754f2ZPqPxZEdQ7YNmUj/sXiwT09qOJ7+
Y7HUVu/1VK6vCojFisxT6caG9B+LNbYOu80M6D8W6V2udLAZSf/yfOaOV9dz
PeW2WNwfVl3vrU//sfD8VLRONIT+Y3FiecaUlEH0H4udm1S9MgfSfyzOHzus
mqND/7HIaNJoV9if/mMRHlBrXapN/7Ho03Kk2/0+9B+LAdJeI19wPWetfP8+
u5zT3JP+YxHxfl58ux70H4tt80xvdtOg/1g0/wrxGtiN/uNweatv2DiuT1OJ
g9O42k9Gnek/DhM3O1236kT/cZgUfFzJVZX+43C394a8YK4n1Y/Djuw5Z1OV
6D8OfTs1jN7Xgf7jkFrbUb2wHf3HYf/yNav+/SuslzOJg9tsWdcarp8zi8N3
PXvDr78Fto6D+fCIi6q/BLaNw7SxuWcGtAjsEoeOt9MHTOR6Vo84SEwUvi/+
KnBAHOpycqc5fub6vDgsKTRrDm4SOD5O/rxX2Cv9o8DiOJSX7zl+pFHgbXGI
Xlhx9uo7gbPiYGfXdVJNg8A5cVj2cLD+T66fzY/DLzxP0XglcFEcrvRRcjWo
53rCOPxb5HJuQZ3AZXH4a/k40qlG4Io4tOs27ErEM4Gr5J//a0TI7icC18bB
ukvRsfNcj9gQB8+ZB1Y/fiRwUxw6+JRH/XgocEscjqer6fd8wPWL8XCNxYIJ
9wRWiUfGuAUNlhUCq8fDNE1F2fe2wFrxCNlun73llsA68ejpMKOk8F+B9eNh
2z3CtqpMYMN4jH7TK/IX1wtPjsegWR+H9LvK9ZLxUMj8bIor9B+PL7t6/HEo
of94fOi7cGz8ZfqPh5JmzIcjF+k/HvfPXjS8d57+41EZ8KH1x1n6j8e7lq4W
/YvoPx5HBuqNNy6k/3j81Ru6162A/uMR49N/R/pJ+o/HsOrOehfz6T8eO9xb
p7w+Rv/y77v7S23Xo/Qfj8lT/2pNzaN/+fd1G1XvyPXQRfHQvZYK8SH6j8dU
o4ljLxyg/3j4m00525BN//FYWna8sgfXp1bFQ69dQdLcLPqPh3a5/WPP3fQv
zx/+pDhrJ/3HY+6XWXMrMuk/Hl7JBXYK2+k/AT6w7TdmK/0nYPR2N3/7LfSf
APNzSp7pMvqXb3de1em6hP4TcK39zvm/uJ5WPwEHd/8ZYpBK/wlQ+l502D6Z
/hOQ66/4YGsi/Seg88J++8vj6T8BLmZztBXj6D8BV0efnjEthv4TMMDynKp3
FP0nYOu3bRF5EfSfgNh+Ow6+DKf/BJTmdQ7qH0b/Cfh3NdqsuR5YlADFf2PG
pAfRfwK6Bo7Tqgig/wS0Vu49qeZP/wnInjOy/UJf+k+Qn59jVOK5Xj1HXl/a
7do1T/pPQLzW2BnKHvSfgD2/fm6at4n+E9Br532bODf6T4CT50iVGxvoX15P
yderE9czVyVATUF319L19J+AiGGHEqRO9J8Afa+IKY8c6D8Bz76PPKZtT/8J
aFQe/tbelv4TkTKs9X3uWvpPxFG94UXNNvSfCJ+2GaZTV9N/IlRVrp6MWkn/
iZhXb/qyfAX9J8IuyuuVFtdjGybi6sTSM46W9J+IkrwamxPL6D8RTt/tK/+Y
0X8i5mZ8GrzElP4TYRkyfMnOJfSfiGL1C0saF9F/Iqonmw2bsZD+E/HJJqMu
1YT+EzF+0+yAunn0n4jyxn8+jTem/0Ts/ZA9P4HryePleXXuRz2fTf+JqHpo
dWA86D8R45S+Hk2aSf/yz1vmvad+Ov0noqHH3uDp0+g/ERfXLjHKmEL/iSho
XfS76b/3ERLhFe2zb/FE+k/E1+X7puWOp/9E3NlXUKY8jv4TscwndZHTGPpP
xLETPa+Vcn18QyKmDZk8dbAB/cu3x9XlxvJ9h5ZErAtR6vV2OP0nIWpvZtTi
YfSfhGDJjub8ofSfBN13yg49h9B/EnQsah6HDKL/JMyKHmH9ciD9J+HKou81
i/k+hWESKtOXehcOoP8klLvP19TtT/9JKOjSUprM9f4mScipCY772Yf+kzA9
/POa9b3pPwlKN8IXVvai/yS0PFlkOo/va7gkoVUnatMZTfpPgoW51eFhGvSf
BIPQX4q7utF/EsZ0zxV1U6f/JHyo2zMgrgv9JyFWX/dlG9//2CZvL/Ou8O1E
/0m4Ne/F6498fyEnCRGvLwxzVaH/JJhnrtjxUpn+k1Dao9NMOyX6T8Lm3eM1
azrQfxLOd5+os5bvl1QkwavJ1/G5Av0nwXP1uvp1f4X3J2qTsGKQ/Z4XbQI3
JGHGnc+Zzq0CNyXBKjOx6v0vgVuScDz60Cqvn3z/IhnvLG/p/fohsEoyPu8R
TYzi+xnqyTh/x2xL528CayXj97Dbc7Z/EVgnGV8qU2cP+SywfjImNYxKL2gS
2DAZq9YtmmH0SeDJyXgyPnnWww98XyQZ19Zm7lrfKLBJMvY+GrTq9zuBzZIx
/ECNv/itwNbJ0K6J+jmkQWDbZPQsvFN36bXALslYERQ7zprv23gkY+c+j+bP
9QIHJOPjvdX9017w/ZRkRNX3uTiyTuD4ZIS/iam4WSOwOBn144JWuz0XeFsy
rJ2rbbs8EzgrGcpuqfUnngickwyv+KjXVtUC5yfDxuaIW1uVwEXJkDUqBB54
xPdhklGZE9bFtFLgsmTkeOkb/nogcEUyJu5XrjvI94OqkqHfa+ig5ffoPxnR
I3a1KvJ9m4ZkxN6OcC+8Q//JiIj4Euh6m/6TcdK25+D+5fSfgsHDNb0e3KT/
FIiMtB2T+f6RegreXXX4Y3yD/lPwMmiwUbsy+k9Bzw97J1+6Rv8pMNgwoCbk
Kv2noKDju6kzSuk/BfVFFqZ//0f/KfLn0YIBV/h+k0kKrPVdj8cX038KnmpU
tjPj+0XWKeiy2bFP70v0n4LyfVGt9RfoPwUR3XPz8s/TfwoeDDQbEX6O/lOQ
gV9hpnx/SpQC5zcGh3WL6F+ePyc4/1sh/afAe4zPlpun6V++P5adtMkuoP8U
WP5TqRp6iv5TcCAwJsv6JP2n4G8n90ET+X5WUQrs1s7a3iOf/lOwavnp9j+O
0X8KDuqkOlYfpf8U3J+d9r/LR+hfvv+k0TqH8ug/BU8WI1LM970aUuDaZcf7
4Fz6T4HtC29b1xz6T4HFvPyX1ofoPxWaY6aHLDxI/6mY3LvjiJkH6D8VUb+7
fxu3n/5T4W1n9XwE3wfTScXO9dXvBu+j/1TolOb1H7iX/lPReutZqE4W/adi
U1iimu4e+k+FScS923p8H81EXn/MszJ9vn9mlgq17Ko/o/l+mnUq3h7+6TNl
B/2nIuZF8GjjTPpPxYLje8dabKf/VLiZFEQ6bKP/VPS82GGQ31b6T4XTr9d9
kjLoPxWed89v3LeF/lMxre11nwvp9J+Kg/oPRlbJ6D8Vc79+O/BdSv/y7996
NbEXOT8Vf5+V1kyV0H8qtGYG5dqK6T8VxeU+jfFp9C/PY7bw6KlU+k/Fo71b
m2pT6D8VKecUzquTa1NhXGjYbW4y/afiftXjH/5J9C/3JzvtfTyR/lOxJDE6
4W0C/adBbXuXmUPIKmmIqRqY4RRP/2nYkL0141Ac/afBdMdCo8ZY+k+D01Gd
/ePI+mlY0Ev5fGgM/afh8MaPKf9G038ayjMe6PYhIw2tL84Fu0XRfxqaWw9n
lUTSfxpafpze0ptsnQbtZV/X+UTQfxpGtsQo3hPRfxqkC6TxY8keaeisbdK8
JZz+0+B8+dnc1jD6T0OlgiTGiRyfhk0Gh87fDaX/NIzq4/4e5G1y7jepz6kQ
+pfvnz52S/TJOWkIj1iamBVM/2kwMN9Q2ZdclIbS3kMnZQbRfxrG//1zoi+5
LA2Dz3svzgqk/zQc3d1FTZ9clYY6me33kwH0n4bpA9p3m01uSEORrczunj/9
p+Gk5oUPzuSWNMjSR5z/40f/Yhg/2nZnO1lRjHme/zOcTFYRY1v6ppePfQVW
E8NSfWNTGFldjHZmKauGkjXlf7/qpP59Hx4vYujfvWQbSdYWw+7DbpUJZB0x
AsLnDXnvLfAgMTo05l/eT9YXY9Kwumo78kgxFC7UhQ4kG4qRXlB67LWXwOPF
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
KkPGjl7zdh1Twf8DvzVInA==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw123dcje//B/AQIiPJyCotCUmFInpF0ZKMyKpTKi112qd92qd9RsgoZSQZ
JSsjSkZkJONTZlZCiJJI/M7v8X1fn38+j6e761z3uV/Xdd/XuM9kV/+V7n1l
ZGT+ycrI/P////dfu6lzs06/MyWtpvQP6DXz++t6+A1ZDhenDDM/M76ZrIAk
blfxrfSnZCUMdt8x9dSDRvJYNM57+PZ473/kCdB/cLNlsEMTWRUW9bb+o548
I6tBcEDNssT+FVkDkRbfb+jzW8hacJ52suER7zNZG7XVySoXb30n68DAY+2l
XV1d5Ok4qO6wNaHnN1kXQ7cf0Lh1/S9ZD4E5A97PGN8H//Ms/FtwLcyipC9Z
H+nhb5T+GytLNsAwuzWT4NqfbAjv9a/6G8QNIM9GdV/hpdORA8lzwHtY+tRz
hRx5LgxuZj6c3ncQ2QiCELl5k7OZjeGeZ+x25jfzPKxRtx6nYjWYPB8rdigk
+8cym2DXtL8lxvuYF6DXpl/ktVPMC7H34OzogHPMpjC5o7h8ZjkzcLCoVP5o
AZkPjCsQ9wqT2XEz2F1f0dbXnR03g9WEvy1b57Pji3AwwKpSYzA7vgg3b5mM
NW1g578YDu6d0dU5ZP5iPPx5MbVpJTtujt3b3m50V2DHzdHUyd3T9z67XhY4
ytM8eSSHzLdApkNslPJ6dnwJnjudc16hyo4vwcQ5gu9/W9j1Xwo+at+sPE7m
L4WnbpLCtVB23BIqzg4vX4Edt0TLfo8QnaHsuBW0lYd/7veM8uVboT7bKq3s
GMvbGo6/VE2Xx7Pj1jj6bfjIl+vYcRvsFOXUmxuy4zYYGFP6YMUIdtwWr+bo
jq1rp/bEt0WDaft//g2sfS2Da1j13H+n2fFlaJllcsJkNztuBwztO64jjh23
Q7fMw7VdXuz4cghaT3Wor2LHl6NzofCO6wJ23B41K+r09mmTYY+PlwvjGpXY
39vD9tjG8j59yVX2mHiCUzyxnfWHFbgxIrlc9yUZK6D44YqO0T0yfwUybApX
L6giV0ltMSoO5az8SoTPmcxbdJCVX4mfollqi3ay8ivhfGOvh0kWK78SWy2d
9KcnsvKrUDdDZefgSFZ+FfgXn/a7F8jKr8LdpJ8cfx9WfhVObL5t0+zGyq9G
Qus1tVHOrPxqKG993U9mPSu/GnsD/xaJHFj51XhurCl/bgUr74DVoza9d7Vj
5R3wy0d8nWfDyjtAyet10UtLVt4BkdnmT0KWsPJrsKis99xwc1Z+DS74GwYG
mrHyayBYXHjAZiErvwZxM79tU5/Hyq+F7YpBfSwMWfm10K2JUM6axsqvhWNF
jMLgSaz8WgycExkwTY6Vd4SWZVPp87f9qLwjZnNlHnmXkvmO4AsMNQduJlc5
Ik5Zb8283r5Ufh3GpO4f9jCRjHVwmdg44OZAMn8dvnve3HZKSPfXqnXw/lis
cXscu9+ux5CdK+/t3i9D5dfDauJu2efTyfz1CL9xbfM0v3//u19Xrcehq6vW
vExk9+8NUNPZ/HdXfu//jA14V731scbFP/8zfwPqR54bLPOih8pvQGnOfZdE
WbLMRuTs32b1ZSY9H7AR4ZI9rzZzflH5jfjolDanZ1s3ld+I5+6fLS/X/6Ty
m2AQNNHopAIZm1D+4Nbyhw70/OFvQm9Lpt34gh9UfhPGqbyZEv21k8o74fSA
nvhPi8lwgv7EKFWHvA4q74SctZXzi3ro+VblhCEPl36pdWLPO2coVN7IOXj9
G5V3Rh+bXbPUDch8Z6zRkrk55UA7lXfG4O39T+Uqk2U4cArtqD+t9fV/VuXA
1LfGu0jtC30eB9WPVVtva9HzlsPBp6SvGzv02+jzOXjx40/o2yWf/ucCDiIL
Ew74uH6k+jhYUJeg45D04X9u5iBz2YwZfqVsfOGCiuPvjiY2v6f6XaDvciti
y1gyXHB3ZcOUljX0/Oe4IF9U961+9zuq3wUljstPdLe8pfpdsOkBp07XiFzl
As3oG9oW2TR+aXaBzDhPw2Ftr6l+V/QT9H210Y6s6oqNoz+flj1D4w+4Yun4
6ldNamSOKwaVxK44kUPjH74r9O4m3OLIkwtcMXeAoXzM0JdUvys2XOJJlg59
QfW74vld58H1o55T/ZtRnj6wtk6Lxj+qm7F7rbc0TRpPYTO+RH+63MN5QvVv
xqBXaRZFqTR+4m/GTpnw22XnaLxVsBkL4kecfN5O462qzbjslrzguy65eTN6
Ha6knQl6TPW7oanRJP7HpUdUvxtunTh4IUqBDDf0+eDrMsHzIdXvhiccDD90
7QHV74aefnuPfdMmF7jhlckemweiBqrfDYKXz39qyJCb3XDq0tWd1UH3qX53
LBqeXZfUVk/1u8O3Z+KZ5d5kuCPr7OXnvU33qH537M0KKGttvUv1S/9ee/4g
jT7kAndM0n1vFKp2h+p3x4ZpDpmHbG9T/e7wCX0xJT62jur3wD/r5Mb7529R
/R4Yv4vXu/nvTarfA3YWyz0GWpM5Hvi0UDIvI6+W6vfA2XOdr2u6b1D9Hohc
X93J30Cu8sAC55kqO65dp/o9YKo5ZdzTOWSZLRhUvXS7Wuk1qn8Lhqh0zTDX
JWMLJFZr1445dZXq34K9szTXBoPM34KiuesMDR/UUP1bYBBWdlTPl1y1BT4p
I3XM5cnNW5Bn+KXCquwK1e+Jbb0J/yZsIKt6Qmm17Zxd8mR44tQcp8n51dVU
vydM538ZPCCazPfEj55nl0oXkAs8UZJslxLej1zliScLF+osultF9XtCo633
fWseWcYLyvvTIpYFklW9YPMrf5S9DRleaMnfsuW+Npnjhfdyl3aWDybzvbBp
R+6hkleXqX4vFA7vCZt7hlzlhdE5CzvrxeRmLxw5bhC0IIws442SNru15pvJ
qt4wjPyoeHwNGd5QWDZ7uvkKMscblf3KcH8lme+Nc8UT5SZvYPV7I3TAwzUy
3qx+b5T2blRZEMvq90aOj3NQ0S5Wvw8MBtUlDLnI6vfBJ9mlBXjD6vdBYVjH
rsFy7Pv7oCtwe4vuZPb9fXDN8UTCTxNygQ/mt5YsW76BXOWD+lFXiidHsevv
gxNmb2PX72XX3xfRC20WtVxl198XH9d9aj7Rxq6/LwwPnasrGc3y98W1kw1f
Li1i+fuijzi19BmX5e+LynseH74XsPx9oR096VN7A7lZ+vnvE4KuD2DtbyvW
TIg7vtmEtb+tMCoao38uiLW/rUjz9O85e5TM2Yq3V376rHhP5m/FiR35S8LU
Wfvfip4pqsfGu7D2vxWT1QInzipg7X8rvI/Y+Jc0k2X88O5Q3f0INepPqn44
3GfhzW3uZPjh40KZGV8Ps/7nB9llSZqRX1n/80PJIJ6O7hzqrwV+sLjSI9Mb
Ta7yQ5+8QeefXSc3+6Gy8EPZFQXW//1xqO1a6oENZFV/RHmv0eMdIsMfnW77
Hxt0kjn+aBr2vOOOGd1f+P5YPHvJ4gVCdv/xh4GBXg3vJbv/+KPacsCpsJl0
v2r2Ry7PY8csPlmGi2WTlszMv09W4OIrTzX6tDrd71S5KI6aUe0fStbjomfZ
3vBrN9n9kYvKV29dSifS/dOei4Q17QFagWQOF11lsc/Vb5C5XOhf9RhZOIHu
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
/2L5S8/Pivfq/F+Wfyqmb3zyY28/et+4NhVyBbCNlSPXpyLy5Zt3jkPJjdL6
Vstena5Ibk7F2LMf3v8eTW5NxQaLNytrxpPbU8F/uHRAsiq5OxW1T0L6LdYk
y6ThZdQDm99TyXJpUNt1t/mILlkhDU8bn9WsNSCPTUNpeWRX71yyahq6+XoR
+SZk7TS0CQT2xmZkvTR0DlSOvGtBNkqDsWlszyZrMtIQzOc8eG9HtkyDubG3
rO8qsn0arP6tEH5cS3aU1r/7EW/zRjInDe2jL1x+zN7X9kyD5dV6D3N3MjcN
Css++x/1IvPSoHzx67Nhfuz97jSsEVwu9QkkC6TnU2D78UooWSi9HiHZWUqR
5Nw0vOiXms+JJRdIz/fVogmHEsjFadiy+N6g1hRyWRqq5K281DPIFWnQuv/A
ZJ2QXJWGjtbdyak5LP80/OQ+tjyVy/JPg61jdVLTHpa/9Hw895v+KmD5pyHK
9jZv5EGWfxrc9+QYaB9m+adh1OtNgXOPsfzTkLtPPNfsBMs/HQPdi5IsTrP8
09H//Chn83Ms/3Q4LvK4vqCS5Z+O6ae1Ls2qZvmnw7zli6XqNZZ/OjLrnL0G
3WT5pyMlXl3t822WfzpGO3wOqatn+afjTGX4lgMPWf7pkPPN+hXWyPJPxxDL
37pLnrH807E+ZNvg4c0s/3TUOphlN7xh+afjUHrrZeF7ln86lvbE7LX6xPJP
h8vtPrN6v7D80yH2Dgs78p3ln45pSV9DVnex/NNhNjxhZvcvln867BauPrS9
l+WfjnBBVvPMPvT7geJ0BO/zeFEjSy5LhzBq3IGVcuSKdKibfjN8Jk+uSkfi
kvk5nOHk2nTsnbjy2ktFcn06VMJz69aNJjemo0wvouSuMrk5Hb1zfd0XTiS3
pmPQjrZ/xarkdun5ucRHD9Mgd6fD71jlK78p7PdwGbBInat3S4cslwGXdpGv
qi5ZIQPXLoftCphFHpuBaYf3VFYaklUz4K1Z2SRrRNbOwB/3/O9L5pP1MnDI
YtiQxIVkowzIGr2ZetGM/d4iA3OM/iz/ak62zEDpGcRPtCTbZyAsqeDqEhuy
YwY2XR053seOzMmAWt2u1LQVZM8MKI5cqHRwNZmbgS0qwy6fX0vmST/PTT2r
bj2Zn4GfM/KT/ttEFmTgTULR4RccsjADjUN9/zZvJudmwLhLU/DCg1yQgXF1
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
fpj+H0mYXLU=
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
j6L6rsgM0gzcE0r1XbHsj4d0eQDVd4WaQc+OAT5U3xWDnnsdyXCn+q54eXbI
YFNnqu8Ky/nKIesdqL4rBg7b2hFpQ/VdURL4Q//JVqrvhpDOi3yvLVTfDS8F
lp9nmVJ9N6jX/Ewfv4nqu+H8rRWCWeupvhvy/n43cFtD9d3QqqDcdnM11XeD
tYzu9S0rqb4bWmY42Q5aTvXdUSG1aND9ZVTfHeu8NDUuL6X67hjkKTS9p0/1
3VFr5/j9z2Kq747wzx4lRnpU3x1nh1qxihdSfXeoJQ8Uqy2g+u4oKBFL1dD7
iOWBCv2eKW7zqb4Hzra2RKlpU30PiP5kfP45j+p7IFurfvMLTarvAT9L7YBW
et/le4CfdWxRlwbV94CbWnL23zlU3wPeX0tS1YhZnnhxs0XedjbV90TQwert
ebOovieqz7+PeKdO9T3xaammaDUx2xPOuZovjqhRfU/UKeYfn0hc6wmpY+M2
pqtSfU98P9Y8fiQxywujOXd9+CpU3wvfly67NZUYXji0iVtaqkz1vVA5rGuf
ETHbC7FJeppdM6m+Fyq+5/xOIa71wp/WcZXziTu8sPLn+kEdM6i+N1I6ZxwS
Eit6Qyt9k4MRMbyhkzv0D4vYwRs8I5HZeSWq7w3Fp+8N4ojzvSX1XfatIK71
xr2EWfZSxB3e4Az8ENikSPV9MPxkWsMBYkUfrD8sDAglhg+Wy7+3Wkfs4IP7
e1NEM4nZPmiq75n5dzrV90HrtIfT2ohrfWA7+Ht2LXGHD3q6hYWHiFm+KH4x
wV5ArOiL7MpnXTHE8EXy6m4rP2IHXyifdX7qTMz2xdDhfJHdv/q+2DvbLN/m
X31fOH0ZqWn/r74vTMOXOLv+q++H+sGbvAP/1fdD5S0H/8R/9f0QKv9t965/
9f2wVbNhYtW/+n7oyz44pulffT9sWzPw2K9/9f0kz6Nh8rPoenX4odXDkGv9
7/r7o/579NgsYhl//NDb033vnw9/FJ720pYjf1r+kLmePNaZGP74E6t17CSx
iT9Ct81Tk/n3ffHH++2n8/2J/f1xu8l8cTMx2x9fzC6OMaLvp8AfgUHPDc79
+z77Q6ut5OkS+r6X+8P98oQRtcS1/vhdPPjherpfGv0Rts9oyzPiDn/Mj0vZ
E0P3W68/civWnlKi+5MVgG13nlTdJpYJgKen1f54ur8VA/D3dRl3KT0PtAIQ
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
         
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1279.}, {0., 4.828724230216337}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"<x>\"", "\"var r\"", "\"enclosure\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9584010777409773`*^9, 3.9584011229255323`*^9}},
 CellLabel->
  "Out[1854]=",ExpressionUUID->"1b5e514f-ed12-4e8b-8a87-b50ba4727201"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Total circle", "Subsection",
 CellChangeTimes->{{3.9584010468196497`*^9, 3.958401051720194*^9}, {
  3.958402042399867*^9, 
  3.958402075934569*^9}},ExpressionUUID->"c4897fb2-9885-4efd-a02b-\
2cd96d3dc11c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dt", ",", "T", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "2000", ",", "50"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"J", ",", "k", ",", "\[Alpha]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "2"}], ",", "1.55"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"R", ",", "\[Omega]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.01"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"znew", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results2", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Dynamic", "[", "results2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "NT"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Round", "[", 
      RowBox[{"T", "/", "dt"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"t", "<", "NT"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"zgoal", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", " ", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"zgoal", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zgoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"R", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zGoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"\[Omega]", " ", "t"}]}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zgoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"znew", "=", 
      RowBox[{"rk4", "[", 
       RowBox[{
       "z0", ",", "zgoal", ",", "rhs", ",", "dt", ",", "J", ",", "k", ",", 
        "\[Alpha]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z0", "=", "znew"}], ";", 
     RowBox[{"t", "++"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"scores", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"meanDistance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"radialVariance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"occlusionScore", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results2", "=", 
      RowBox[{"plotResults", "[", 
       RowBox[{"znew", ",", 
        RowBox[{"L", "=", "15"}], ",", 
        RowBox[{"zGoal", "=", "zgoal"}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<<x>\>\"", ",", "\"\<var r\>\"", ",", " ", "\"\<enclosure\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9584011302114897`*^9, 3.958401133994063*^9}, {
  3.9584018484681177`*^9, 3.9584018849912167`*^9}, {3.958401949924601*^9, 
  3.958401972945465*^9}, {3.958402003018358*^9, 3.958402003102953*^9}, {
  3.9584021016724377`*^9, 3.958402133233197*^9}},
 CellLabel->
  "In[2251]:=",ExpressionUUID->"1726b92e-8859-4e43-be16-cf95cc56b7af"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`results2, StandardForm],
  ImageSizeCache->{1098., {171.134033203125, 176.865966796875}}]], "Output",
 CellChangeTimes->{
  3.958401136136962*^9, {3.958401854406398*^9, 3.958401885195663*^9}, {
   3.9584019517562513`*^9, 3.958402003297665*^9}, {3.958402105239531*^9, 
   3.958402134009121*^9}},
 CellLabel->
  "Out[2258]=",ExpressionUUID->"866b2b42-5fa6-4b4b-b259-7d00bd543b40"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.958401136136962*^9, {3.958401854406398*^9, 3.958401885195663*^9}, {
   3.9584019517562513`*^9, 3.958402003297665*^9}, {3.958402105239531*^9, 
   3.958402118959882*^9}, 3.958402149008422*^9},
 CellLabel->
  "Out[2261]=",ExpressionUUID->"00beaaaf-74b2-4102-ac21-822a2997d238"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw9m3lcjOv7xwdJ1lKWKMqehGTL/qG0WIsklUz7omXa95qapZlqmrFHUilJ
thDioLLGsUSLLDH2LJElOoRfv9f3vjr/nNfb/VzPdX/uz71c8zxPI9yCVnl2
5XA4mioczv///3//tSz4dTnf925E6wL2Dzj1uOrGhuxvjNXQdDW11x0zYg3M
ieUe6dWDrh8A6VD9BTc9fjDWxo+7G2e27/3JWBfLlvSdUVL5m7E+NvEDjEyk
HPyPR+K7WkH5PtOujEfjomm/1OvdVBiPxcvBvas1H3dnbIDCTbdjggt7MDaE
1HiimYl/T8ZG+MX7uHjlyN6MJyF259/ek+/1YWwMZZ/o3ydj+jGegnqtBY3u
fTUYm6CXXvb2Ow3EU8HNm31oek5/xtOwqodIK89Nk/F0ZHpOKviip8V4Bm7v
iZ1eX0s8EwN8Xh66nDiAsSlMVnSrrBk5kPEsRBUZZV+9QDwbDdl6M63sBjGe
g6FFwh4xz4nn4tmxtICh/oMZz8OII4ay4i/E81G5237i5zBtxguQNOhcaukX
YsDjXsDbcwFD/sd8gFuocLvzkjFnIT41jnggWzuUtS+E6f0GldCrjDmLMMUz
da1wig5rX4TNU37OnJPJmGOG0q6ihsE/qd0MqkkrR6500GXt5vj56qDf0ROM
+ebwtY7TOtZnGGtfDLu7Xyz7eTDmL4ZU8+SakjPUbgFRz2j3zX2Hs3YL5GfH
1G5zYcyxhLL35Fibw9Ruib7Hv+mE/6R2K5TWull7Wuixdiv41fTn/7uJMcca
Knt+9170mNqtMVdvsftJTX3WvgRCoxSZaAZj/hK8uoo7ExypfSm0u2tNvh1P
7Usxr2Rgf5c91L4MTxdrrL//D7Uvw+puOz8VN1D7cminzQ21aaX25bgX6ht1
sf8I1r4CQ32HfKubyJi/ArvKzlvts6b2lXDdm780yYPaV2Kf2slvD+Op3QYa
uxaOdN7OGDawHR7TN+AIXW8Dr24DBhpcZVxhg/6F+78JGineFm+bA/ebfaN4
W3AO5Xx/2nMki7fFdv/4yvhhjCtssXDVd2H9ZMacVWipPfyrcSFjrEJ7Y9/R
HqspfhW6GR/KyfCg+FUoa8tauzqc4ldDL8rW4LaI4lfjlo7r20/bKH417NSG
Ve7cR/GrsWTT5cxnpRRvB/nP45YHL1G8He4MbE4vvUvxdrjicuxI4BOKt8Po
forbA99R/BokySdbTWql+DXYqpbgVfOX4tdglnn7il89R7H4NbiRd9+3SIsx
xx62crHWA13GsMe+3Bld3cYw5ttjrGGW0nMixdvjWnDwuQHTKX4tIhqs5gnm
UvxaeA1JfHLKjOLXYvkPecDiJRS/FuhTUDPDhuIdcO9i4ZnMNRTvgHzN5++P
OVK8A7o8i7KZt4HiHSB7Lmju6k7x66D678xEPy+KX4eCJwZPbvtS/Dqs5Twb
aRpA8eugtVvwxINH8Y64YWdnpRJK8Y7Ir26eZhNO8Y7YEuvk+jmC4h0xIFLo
OzmK4p3w1OOpn0o0xTshskxlYndivhPqLry5EE7XV3Rcb/rvm3eRFO8Me4lW
j1RiOOPOjEcR/sR8Zyw+INi8krjCGaKcP+EmnfHrMSj71t3/qH9Yj++RdUZf
ifnr8XvmksNzOuPXY+bRl/E3OuNdoFq+22wb9Q8uOBomOO7d2X8XJD9Qzakg
rnDBwsYaa6MYit+A0VeOHewRS/EbsKVxhe/8OIrfAK+1JaPOxlP8BvTfLGjt
l0jxXPTf6LxsL5+xPhcWY+uHHEim+3Eh6lPzY6iIMZeLyidPRrek0P25+Oi1
UtycyjiXi5uDXdcoZZSPC/Xbmc35CsZKLgbZmzhqbqH8rhj93FA6dRvld0V5
+HCbs9spvytev3rWK3gH5XdFl4na1n0yKb8rPj1+OHc/ca4rxGXWMz12Un5X
TDNd4cbbRfld0Xjc631eFuV3Q9w64TjNbMrvhuN2ane/7aH8bvh3SnA8J4/y
u2FEUfOoyfmU3w1lk3ao+O2j/G7IkQdvUNtP+d2w/OOX+JfESjfMnTvr4aAD
lN8dla7t+F1M+d0RfNBw0YLDlN8djzfn/x1YQvndsTJ+yfKIE5TfHU3tF6Pn
nab87shTK8jf8A/ld0fBBp2MY+WU3x23BL4RTpcpvweeqaTldbtO+T3wQqVh
26BblN8DMV0sn0yopvweOHYmLTD2HuX3wOnXfa671FJ+DxT2j5N/raP8Hmg1
Cmt7XU/5PRA8eOPTQmKOJ4IWvdT9Q9fre8Jm31p7S2J44pjR8d576f5cT2wJ
nOExnZjvia3mT0+odeb3xK7RzU53ayi/J8pGr2+qJVZ6wmKZulM5MccLKy8E
tZ0n1vfC9vq2xC/E8EIhRJ6xnfm9cGrL0UBQ//gd1+/PKv9CnOsFixlDR3wi
fRVeeNMWVpDQQPm9YLzWwCz3IeX3Rv8K7YIBjZTfG7se39Muf0r5vXGnWned
xXPK7w2DaUP2G72i/N4w2TXvQPsbyu+NzZEfuTrvKL83rMQjvh14T/m98chS
LfbsB8rvA9NjB2wMmym/D3RsDwfKiOGDvKVZU94Tc33wzfXw6cSPlN8HRq9W
arh8ovwd7U5Hbsa2UH4fwFr98oTPlN8Hw8J6WG4j5viiJzdRcZZY3xd6B0un
HyGGL7Kfni8wIOb64kB9ZelPysf3haWjjUM59S/XF8eK59w3Ib0VvsiXjF/u
20T5fTE//e2iHBo/jh+aemfpP6Xx1feDxYs58U5Kyu8HU0vOqRLyh+uHs45X
A++Sf3w/9D7hzR1+n/L7wXaNePYiWh8Vfhixfc+Lozcpvx/2mnSprr9K+Tei
KKH/yNwKyr8RI8WnX48+S/k3wly6bFDneuduxCWe/oyIQ5R/IwI09yVadu4/
G2E2JmawIe1fFRsxYNzEl11p/1RuRP7pP5dNaT/m+OOXxt6rXWj/1vdH9uFx
ivcCyu+PyyZCi8t0fnD94ZAl/mlO5xW/oz0rfshLOr9z/dGgltw7nM73Cn90
d33u20Dnv9If/c+aZan4U/4A8B7c11X4Uf4ATNWe8/uZD+UPQOPhuK49vCl/
AG5ZfN4w0JPyB8DFcK5umxvlD8BNcz3FIlfKH4DSvdZ1v6l+UQZg9y3n2mHE
nED8GbZ8vL8L5Q/ERp2knML1lD8Qh7fXftjnTPkDsUHnw/Z/nCh/IPL2b+DP
JM4NxI4P5lVPqH6qCMQA3Uu3ThArA3F3otvLnnQ9Jwi9VFc3NxDrB2HrJcv+
kzrzB4H7OsaqlvrHDYJRzYexj7mUPwh/XqZOSuzUH4Rnak4Oy6k+qwjCtgln
tLcSK4Mw9pB0GTrrNx4eLZLa36R4DR4iLR74jiLW5yH+xOnNw2k8jXlY6fbv
y3QaP/Aw79zHBTbUXxse9o8ZccSZ9HJ5sL9Rs3jwWsY8HsqUnGrhauo/Dwt+
+u21onpUwUOB4bgC9+Wkhwf5hMXRu6l+LeEh/XTfH6WWpI+H5tER7eXmjKt5
cFpmFq29iPTyULp27ilfMG7h4efSdXFVC0h/MIaED9BRoXaNYCTO/vV1D7F+
MFyuzcp6TGwcjIet3taHiBEMu9bamk62CcaJCd1lkoWkPxjbG1+7N1F/eMF4
pmkaFUv95QcjSF39epYF6Q+G+eqv/ABr0h8MQdGhXbnLSH8wtHkaNz+tJP3B
WBCcYLacxrM6GIc8sz0v2pP+YNheuz7YivxoCUb6r793tpFfnBC0DFVWzKL5
pBGCIO8lPps7/Q9B09FH5Q0epD8E501er3ai9YgQ6KpH31Kj9WsTgtuW3tsm
0/rmhqC47uGV4EDSH4LNh0evtAwm/SGoX3h1UHQY6Q9B3IIfNb+oPs7tuP5h
+zFvqm9LQuBlIzT73VnPhuB0UbNVDdWv1SHolj3UcbyQ9IfgltfD8UqqV1tC
4Nf4q//1NNIfihptsySxnPSHoodyryyL6lP9UCxMGBwwjepL41CcmaVtqUb1
IkKxtVG8ax/Vhzah2DD/g9WIQtIfiqRuUz+GUX3HC8WqoIfqNUdIfyj8dxzZ
40n7uyIU14PCP9/srOdCYf2T93XSOdIfiodef54X03lREQqPTdLT+ldIfyhc
+ll5R1M9pwzFmEszC/hUz7WEIuLD2sbBd0l/GKYsm2dfRfWNRhgCKxZrPqB6
RT8Memp16XZ0/hmHYZL6jUMD6bxEGIqqenndfU36w9AnZ/C8PXT+csMwd5T+
CROqB3hhCHVLrhz/jfSHoX3fbpP8H6Q/DI1fCvtl/yT9HffLz03Y+pv0h+H4
rd/LrDmjmf4w7FYa71J2ZVwdBovApnRhd8bKMOQdcF64Wo1xSxhWHtLxsunN
mBMOjS1rAg72Y6wRjovexy8bajLWD8elYTO3zxjI2DgcgdvurDTQZoxwFDa/
zTPXYWwTjuaX7cvzhjPmhsM2ReruPoIxLxx2hn4zG0Yy5ofjlEHYgu+jGCvC
sXjW1IMXRjPODUf3V7/KuWMYl4Tj+h6zpX3Gkv5wXFj6e9Yr4upwnJjhoP5k
HOkPx0595cU6A9Lf0b8tLcXV40l/BD6251pvMST9EXhq12PwfWL9CCzPihyl
OoH0R+DSmrnLfIgRAVX+p6AuRqQ/AiYq2z9sJeZGoDHL2V1/IumPQI1ryF0d
Yn4ELkrzlhrT9YoIWJze9l8S5c+NQKXEXsue+l8SgV6jpjepdeqPgL35hNJv
NH7VEXBurPuvJ42vMgJ6rcFrrfVJfwR+5knbtpA/nEhEtd5s1dYl/ZFoNvrp
YDGE9EfCdH5ll6hBpD8SrtE71Qu1SH8k/noo7wk0SH8kdK+Yjp3bl/RH4vyf
YxsP9ST9kR3nw37n+zQ/+ZGwHex+fEMX0h+J6I9zhia30/yPhOOdI9oatD5K
IrGsx7X77zrr60iE5Fzj+FC9Xx2J+YVHdzx/Qes/Ena5X5bW0/ptiYRR5v1c
U1rfnCjkPx2YW0b1qkYU6myzphjSfqEfhes3P49PuEbrPwqGjrWFSZW0/qNQ
5HF0jwP93rSJgu/WOyuHnKT1HwWv6IQVZbTf8aLw+FmBi2oRrf8o7OZX/6NL
+6ciCo8ut4yYSr/Xczv61714WgTtxyVRaN3u1rt75/OFKNQLfs48KSb9UVBR
OO3PpOcbyijMr23TmUH1aksUak7brXKh84cTjcsD9BSn6fzSiMYilStrsqk+
0o/GaTOn5aup/jOOhnXTu24BdqQ/Gnfzug4YS+ezTTQuyRIemdD5zo2GlZt6
aDU9n+NFY97PQq2JM0h/NIq7h1X2Myb90XB3ntDyYTzpj4YK3/vXpFGkPxpT
Gi+M1KTnhRXRCNgp0X8xgPRHQ/b3yuO2vqQ/GoLGWWo+PUh/NCYZHJ8/tQvp
j8Hz+3m8gb9GMv0x8OP3Sg6k55n6McjoO9JwWgtj447rQ4a136Xnn4hBFH/a
FPErxjYxcDr4Zco6JWNuDE79vuE05xFjXgzslf0StOoZ82Nw/YSblRU9b1XE
wGu337ynNxnnxqDB8qXFuSrGJTHAsaVarZcZV8RgmUqGf/9KxtUxGGodvdby
PGNlDB7Xj5pefIZxSwyE1U3XlpxizIlFZIuj4bbjpD8W8ng9jfuHSX8sfrbo
ik0PkP5Y/FYWH7Wi58mIxXJjrp7RXtIfiz96dle0ckl/LMQn9V+47yH9sRAa
7LD7s5v0x0Kz2rzrpizSH4sh05UPhu0i/bFwFt3bNHUn6Y+F2aMfP/yIK2Ix
J2/3bCldXx2LbG/fg+F0P2VsR/165Ich5WuJxZgtKeGbskl/HPqOWxjTnEP6
4zB785CcS6RHPw66cVuH9iS9xnEYNF7gENSpPw6WnuplswpIfxzWDtKuW0Px
3Di03W84b07jwYvD3mCvr71oPPhx2PK57kZNp/443LqVVedJ+nI78tmd0Rq1
g/THoc8sfnE0Pd+v6Ojfr1yV5VtJfxzif1xw424h/XHQ2hkwe+Fm0h+H5qAB
b2dvIv3xuBzpt/mkgvTHo/lTaO4JYv14tN7B8I10vXE8+q9ULzOn+yEeFQ56
2c2UzyYefqGf82O2k/541Et6irJJDy8enPDAP91o/PnxyN2YqDeYxkcRj+J/
4gt75JP+eHz9133jrELSH49GlZMmFTQfK+Lxt3D9HQHN1+p4fHhr/2TvMdIf
j9VBO95m0HxviceenA/1I86R/gQsW7lm1/dK0p8Av56fbJuukf4ECB4t0Rh7
i/QnoCEmx8OY1isSsGX3h08BtaQ/AVoTljiH3Sf9CUiIXL6o8iHpT8Bckf78
7vQ+hZ8A36rK5nXPSH8CVmaNTupK+0luR/4x5jZZTaQ/AanT/yuseU/6EzB7
RdO1ox9JfwKscFe7z2fSn4DStJ+bln4l/QmI0ao61e076U+E6Tx8eN1G+hNh
43XPfzPth/qJsJg3s/t/v0l/Inbn/zEM5tD+n4jwi7nzj3Wl/T8Rf11sE96o
0P6fiFEnHy+/r0r7fyLMfG5V16vR/p+IXpe5YlEv2v872q+v/O9Kb9r/E1Ho
MHR9Rh/a/xPhnV6V+5q4IhH3tKS9zxFXJ8JImmZZR6xMxPhhD+0W0nnQkoi4
72KxHzGHj09jZ/WS0fVqfFw+x2lzp/5o8OGa8veHIfVXmw+tUTF6f7rT+ciH
Q9qkum/dGBvwcWcC13IFjYcxH8XuT64G0niZ8jF63KyJ2/+w8QQfo3482jmY
xteKj3NbWx9Kafxt+Dhol7rVh/xx4ONZu2FbFp1PXD5adxl8avzC2IePhcP6
5PvQecXr0JegNjKa5kcUH9srrQYWfWDM5+Os3ZtbFXSeSfg49GRdP8e3jBV8
/HC2uQ+af5l8TGo5+eLba8a5fDj7qqcsoPlaxEfI01G8cS8Yl/DhLhVmP6Dz
sIyPGWs3TcjvfJ/IxzS9e+b/PGZcxYeEq3e9jdZLNR/nD0UX5z5g3MDHMFHY
w5MNjJV8FPDWHj1N662Jj7y0AnUjOl9b+DCXhFaeovXZxscC6Wjr2TWMOUk4
se5M6Blaz2pJ6OtePdWymrFGEnIGfG+8eJuxdhIE+ecn7aLzWT8JiSHvQ5fe
YGyQhLLb7xK5tH8YJ6HIvtsoKb1fNU1C8L5vFZ7ljJEE28Lp9Vr/MLZKwsS9
0xZto/3KJgmPri8z/0T7mUNHvumh/IeHGHOTcONtcUnrfsY+Sbh5fA53Dp0/
vCTEBE9Zm0PnX1QS/B9vD7pI+zM/CX7b/nzKpv1ekoQ+M04/+ZrKWJGE/MqP
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
/1NR6qDQvdaD/E+FXfvmn8FdyP9UHCu0XNv0i/6eIhUn9BKNSunvKySpGPFT
6VL1kbEiFddaG3v8aGKcmYrLXvtSN71gnJuKsPNqe5RPGBel4rzL+3ljHjIu
SYXWcO3vG+sYl6Xiw9ud5yzuMq5IhZ9NysvnNxlXpSIx9tPJ6quMq1Nx+uCe
VT4VjBtScaPLIL+e9PciylRsLyjXeHuScVMqdOd2u2p1jHFLKuo1Fz21PMy4
LRXFN1V/BBygvy9Jw7xuo+JWFTJWS8PZcd8X/8ljrJGGH2qOz9ZkM9ZOw7hf
1fJVmYz105C+xLf05hbGBmkIFe1ZqKtgbJyGclf7su/pjE3T0H1o4ejfUsZI
wyxOP4OTYsZWaXDKu+7RV8DYJg2ll2Z8b0lg7JCGqcm/m6pjGHPTYPqp9+1b
EYx90jBjqqOwJZgxLw0j3MrlpQGMo9JwvulXdL0P+Z+GxIOLPKI9yP80rOv1
zjmYS/6nwYUXLEtwJv/TEHx/T9piB/I/DRwv6zdpq8n/NPCT7wyPXkH+pyHw
SuDr+dbkfxp6fL74735z8j8NYVoj2oNA/qdh9cQt3+Pnkv9pKAs3HXZtJvnf
0b7kxnNTE/I/DQZxDZJTk8j/NDydnpEzxoj8T8Ojf+Ni9huS/2lo8BGMvULM
ScdT01oVxwnkfzq63DHKG0nxGumYxW3bISLWTofqvZIbLcT66Tic2zpXRPkN
0uHY4/Sa5MnkfzpkTu02o4lN0xE1UP75C12PdAStrIv/PZH8T8ca4xeHhhDb
pMPt86+7MZTPIR2DdxTNTqb+ctPx7hmWWBP7pGPr3HF9x9L1vHT4mPw725ru
F5WOKWu8pwyh/vDT0ffVpsnHp5D/6XidEOdXQ+OrSEf05NCcJOLMdGTmms9Q
J85Nh7Huwp6ziIvS4X3utTh0KvmfDneZCd9xOvmfDoem8L9Hyc+KdPRp3/t2
32zyPx0vsjaf/TuP/E9HxQMLz0MLyf90mHvEpEwyI//TYZjtqFpH86kpHZrL
B4puWJL/6Rgtf7GgeAn53+HHxnGKhuXkvwwOnmee3bch/2Xo8bBiUwrNZw0Z
Bvirz3FbS/7LoFs4o/qSE/kvw9QA1eKvG8h/GbasC7AudCf/ZRA2iE8FepP/
MiwaNnZgzUbyX4YNmZzBZ3nkvwy+GllvZ4eT/zJ8VhcotWi9O8jQ5UXVp/pE
8l+Gl08lSyaIyH8ZJji4PHah/YUnQ6amZ/M9Gfkvg119e1PxZvJfhpLPwYNm
7yD/Zeh38HZ5cBb5L8OPG87u03PIfxkap/jsrd1L/sug+WdQ91baP4tkGL0u
rlsx7a8lMiz36mMnP0j+yxDwTSp8TvtxhQwjzie2m5WQ/x3Xq4YeK6f9u1oG
pf2Sj1knyH8Z1u8Y/q/7KfK/wx+vxsQjZ8j/jv59/vTG5Dz5L0PulalybTo/
2mQocMxvHHiJ/M9Al4Gm81qvkP8ZiAi+UGtURf5nYJew4uCfG+R/BhZ8Mluo
dZv8z8D+Ut+BV4gNMjBiotz15R3yPwNZBYPK9tF5Z5qBE/Keh4bXkP8ZSA3b
/uJOLfmfgQDVV+F698n/DPhlmA7Kpr+HdOjo3x5xVNED8r8jvmKRdCKdtz4Z
+LK2aeUpYl4Gak2aVO8SR2Xgnd+5rXXE/Ay4DtLp3vsR+Z+BGHmeoJXaFRn4
G8DbLKD2zAx45e0b8og4t+P6Kb/HhRAXZSBxvktCWef535FPPKbtEPW3LAMW
Q2r4KtRekYGRtUKPTcRVGbDdH3ruEXF1Bh7/tnh3jrghA4HjneN6UD5lBi67
2HA2EzdlQFd4v6qGrm/JwO7aeb/UKX9bBoRn+klyqB7hyHFTbvfV7R75L4d+
ot/NweSnhhxTw9W7Zlwn/+WY0K/RRo3mi74cBfaBYesqyX85Ui+ZZBfQ/DOW
4/KHw/XRND9N5Xh5/t9eH0rJfzke3sLQsqPkvxwmvd6FJBSR/3KMXuxgvZTW
m4McvUZ+mz6O6hGuHPIfvJFbqB7xkSMoqezTRapHeHLsG9Oz7XEG+S+Htk2x
pSyV/JejLFHb/TnVHxI5xoapBwQnk/9yWKk/emtEf7+bKUeLzgNOSST5L4ez
z3rXC1RvFMlxePi6sbP9yX85DlwoOWbpRf7LwVX3W1XpQv7LUXkl5/NlO/Jf
jik5HI+PVC9Uy5FRnvjP0QXkvxyLH3qVfJpG/svxvYvBxRV0/jXJsbN9m8O5
keS/HLcydg2/P4T8lyM8f12Ynwb5r8CIEp+61z0Yqyig+/i/PT04NB8UEDg5
P7nTwv7+uY8Cd6akF3k/Z6yhAEyVydn1jAcoIGkapVpwi7G2Ao88/aZyrzLW
VWBaz80P7S4w1lfgiPB3QEAp49EK7PradOzaQcYGCmRN/3krZy9jIwXCXO5v
zdjJ2FiBSJuj5pAznqZA3y7eGv1EjE0VsEgTFxhFMZ6r6PC356pdvoyhQLcP
vcumODM2V0BVo50/1paxlQIb8usnT7TUw/8B92N5DQ==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw9mnlczN/3x6dIJZK9ErKkEGWrpOVFIktJRApNmzYtWidtUzPVNDPVIMoe
Pgghy+cjhLFEISakRIosIWTP2m9+D+d+/ePx7M59n/d937Pde84w3wi3AFUO
h9OnK4fz/////ddurymY1kceXmNPf0C2pc4um5vVxBrQzuyuEvNLQawDk8kb
WhZ23CHuB8nZjfucvjLWhW6nau6/C+8SG2DL0DfPPgyvJTZEGde9yxcLxsMx
KmZbr4CJjEdiRIJiw7vj94hHIaa2fNz9u+x5JniifvxylAHjMdg1YdPNSdeY
fFPM1CyItjrCeDxeTbV5cmIa+705vn+yHtw3gz1/AiwO2n09ZX2feCL2CcM0
YFRPPAk9X6j1qenSQDwZmv8aPWuTPySegicGQWd7cRuJLdBlo0Jtd9NjYkt0
CjRPpxk0E1thUHvNCOejjKci+mLp7cpJT4itwdl8dP2VPYynQeXRV8tlQ54S
26A9XH26pJixLdoe/efZYN9CbAeB+uXs8U8Z2+Pm1OVzrHKeEQNf+7+1PjLn
+V/mAzaHjx7I6fOCxqejTDrz2496Yv50JBX0WVm16SWNz8B+25/cEOtWGp+B
zdrXncdeIeY44OC39+O6TX5F4w4IrLj3Yr2ImDMT+U/2lHtcZOMzET1e20Pc
xMYd0Xrho3HRGzbuiHPmL99atbHxWejCWX8/8i0bn4WyPr9q33ay8dkonjHr
wpvhr2l8Nj6nfP6WsZiY44S9j3q9PJjLxp1w2fGu4m0VG58D7Rfd7gs62fgc
2H4KTF9m/IbG56J2wZSsRdbE/LkYm60XVT2Gjc9Dfb3XB52PbP48JPddPdZ8
G3v+fMzPwsZLJmx8PlbdXnfa7X/fxxle56qWPixn39cZCTojBq6rZt/fBQmK
trPHrrL9cUG+5b1TC0/TfnIWwHzRAR72037zF6Diw5DXNblMH1zBizK9+yiK
9AeucAp4PFLHnfSN74qd4rfJcyxJP+Wu2OJltF3TnunzQkxcOHmpgeEjmr8Q
9SXbD/fVJfvgL8SekWe6Bcwi+5EvhH1lWNHgImZfbtCVfkvr2Z/sHW54t+LP
ItP9ZJ98N+TMu2U/ah7Zr9wNX0c889z2h/mfRaiMeNW7VXCb5i9CVVT7jWvj
yF/xF6EjwPZ9H9UbNH8RNEV61fyflTR/MXYZRy+aO/wazV+M+092TN6ysYLm
L4ZR/4JRKvwrNH8xCr5ONHd4epnmu6Mu/WRbl33EcEeRyYj8mMvEfHeEFBs9
8rRj891x9ovzr/GG9HzOEpR/qjXrE3iV5i9ByYQaZ5kevR9/CSbf1T9uM/Y6
zV+CFs7bKV8336T5SxHd+ogrX8bWvxTpWnViq0nkv/lLEZTfo7rwDft+S6Fd
fU0acYf5Ow+Y9tneT9pM+wEPnNAaMrd9wAOa74EXpj3tEE/+Te6Bdx4e54Rd
2f4vQ66jfkmoD+kHlsFdq8wvrIHpj3I8ISjaLIL0Tb4MxzXstoaOYPrpiU+a
/exKf5H+whMWXyRb56gwe1aOv70fXGFB9iT3RI+ow7uebntL873wvJ/roI2D
22m+FzrvL9IuEH2g+V4YtDM2IEz7E833QmPxrq5dSj7T/OXwUuu9MHzlV5q/
HL5XvW5vGNFB85cjymPll7Lv32n+cmiEbR5k2fST5q9AovqoZZZ3f9P8Fbi/
89jPkJpOmr8CMT4Ld//3hoO/81dghNrpywUfVP4yZyUMpjr5l3So/mWsxDjd
bUMvdnb5y/yV2G80VfermhrNX4msgKBBrRrdaL43kh0sw1U01Gm+N2zPPLPS
UNOg+d5oOP3kyx4VTZrvjXDOqRafP8QcLqa6x9uP/Nn9LxtyIY+Omr7juxY9
j4vakjW3in73+MtcLi7GjL6eqKVNz+fCZPqChjDjXn+5iIvbqqve2IzRIXlc
tH6e1RB+g7iZi5ezY76t4/Um+T74XimKeDuxD8n3ge3AgJ8BP4nhA8fRDdXB
d/qSfB8YxU5ZGHGqH8n3gXdh84HXB/qTfOV8/54lAcUDSL4PNq28lv6odCDJ
98Gyeuv7Thd1Sb4vPvEc9Hrd1yP5vqj1se0e8kaf5Pvic2qrxbnfg0i+L9pX
eP23RmMwyfeF2838jnr1ISTfF8KdLic2fCeW++LchHEFug+HknxfDE3aNPjF
YkOS74f9lmcENceIDf0w8+qCbm+6DCP5fnj64KLp/XnEXD8s7q45y1RCzPdD
09QeF6ZcIS7yw4j60oEV34nlfsgfPYrbY/xwku8HnZK9Vtl+xBx/DP5jb+W+
jdjQH2OeN7RmNhDDHz47HKceGTKC5Pujn2nijsogYr4/Tk5MHO9wmrjIHx9V
d7hv7DWS5PvjgWjsKctQ4mZ/TM36crr9OjEnAHuHLYLuOCOSHwC3VOHepTJi
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
HF6cHzJ0YgqxeRzyVp4POMVn8SkOZ/4EZR5l467K3+eebN/L5nPjsDlfS3Nn
KHFkHJZKX9146UnMj1P6H2veKUdiWRwqRQt+3TQlLoqD6k3LMXq92frjENOo
r979OX0feRwaJ679mrmbWBEH8bz4Bk1Pdt6KQ/eGS6UzehC3x2HJY+/zf86y
/Y+H9pzLDgdD2f7HQ1zwa57WELb/8aia67fdu5b0xzweObKQc/tlxIhH8fFb
VVhI7BqP4YkiG5keMTceK/4dsGjVG9LfyHhIp1vuu3ON6X88bBOf+VgcYfof
D6vgjUv3b2f6H49Cz/Yx8/OZ/sfjsstze3cZsTwevNuCC6fyiBXxECqyfKoY
N8ej5uDvErsc4vZ4NNz2iI7OYPGfh1+v1X/5xRPr8HB/x+00DR9iQx7U7jjE
fwaxOQ+rTe8UtTH7BQ9jzro6W79i9s/D2VuH0/ofY/bPQ7jd57rbkcz+efCr
3nbRz4SYz8N2jX7hyxvI/8h48HFd4DxQRFzEg2ZqTP/GCcSlPER/a/6nfz3z
fzwIkrdoOCYRK3goXP1jAW8ocTMPqUFDRy+9RP61nYfnXa2Szqxi5/8EXA9Z
W5CkTayToIz/ztyZ5Sz+JwCv73Y8Dyc2T4CmsUHHtlHM/yvHpx9si2xh8T8B
6unm9kv/YfE/AXd+9POcF0QcmYBdblsv1o0n5ifA3fR3v7wOik+yBLQmOyz7
VsHuMxKw5eEbue5mFv8SUGIlShi1hsW/BAzv7vzWzpnFvwTcj228UG3K4l8C
Pn79LAjVYfEvAfqNYwc+/UbxlbMW3vP15J7PiHXWQsdwi6LsHrHhWmT5D952
tJLYfC22+vR/pSMnxlp8vHBl0fbTxK5rcWrOignh/7L4vxZfX8S0RZ9g8V/J
qZ8uG51k8X8tkl/2eDGX3efI1uKaIPF0ZzmL/2uhHbv6nv1Vlv+shUnym4X8
uyz/WYva0i8pH9n7K9ZCz/GH3t3vxM1rEWIdn/K+D1v/WiRmGnUtNyfmJMK5
Y83zyYuJdRKRJD72pCKJ2DAR+PNR/pPdL5knwmfjb4/JjcRIREPii5KRA9n+
J6LU9rlu4BK2/4n4NiD6jPdmtv+JaFJN3tTxkO1/IiJrDDhNg0ifZIlwUpOf
HLmUuCgRywZNac+VEpcm4orWIUScJZYnwl1TkWb1nOW/ifhd4rs9sQfpc3Mi
JkcNOe88kel/Isqrj89xXsb0Pwm9V9jUHclg+p+Ecv8I6fBzxIZJKBzo7zWl
K9mTeRIi7VZvHLeC5f9JaKja+6y5iuX/SSg+N2273lyyV24SVqoIZ7Y1Ekcm
4ev851YnhMz+kzC0h6hwsA3zf0mwXe75rZhD/rMoCTuSI4/Nv0Vcqny/tydP
JBSx+7UkXNDadPpZFPP/SvlrlxYcNGTxLwkHzfNGLBay+JeEidebt1e3sPiX
jGFG3aNO2tF5TCcZU7dc01yUT2yYjB5zO5YXPyM2T0bi/D9vCtl5D8mY/Z/V
7doYYtdk3F7SLy3tX2JuMoKCvvS1+0AcmQzbd/lVBcbs/iwZOxNc/Sw9iGXJ
uNctAB0Cdp+WjCXhantuHyQuTUZTrWlbxE1ieTKMPZNnrWslViTDe4Nnc1cO
O+8m41e2+d25fYnbk3Fz3JFew0ew828Krgea1p0zJ9ZJQccx86YaW2LDFHCP
VthcnU9snoIpvV0VN1cSIwWL0/uN6BpL7JqCD3ezNRbKiLkpUD+xZ2VhKXFk
Cvzy53w4XUvMV87XH7+2+g+xLAUXn1RUXxjNzvMpODX7Z7WGO3FpCowbHh5U
S2Xn+xS8m6riULWXWJECgd8Ay+vXiJtT0GZ3ebXjM+L2FEwV95nZ7wcxJxVP
d9eUPtag+wSdVLT3D+oVpkNsmIoTgTrhzxibp8Ktbb7pZi1ipMKz29dj+arE
rqlYdUH8oM83dl+ZimIXjRtlr4kjU7G/Z3rMj0ZifirGno75vKOGWJaKBO0d
XGEFW38qDi33qjtbxtav/H2zZEnoQbb+VNR4yvqs38LWn4o9Al29PSK2/lTw
fvrarI5l60/F/LCC53wftn4++rXZPO/vTKzBx86+h8YJLYl1+Lhv9WZL6xBi
XT7iF242fa3C7mv58DpeFMp7TPtnwodbcIjF++NMX/io2spPfJBKbMVH0Omn
2SqzmP7w4X9jUpOTOrETHy3TjjrYXSV9duXjSaqKwbVMYg8+isZaXHo8i91H
8/HTLEW3lzpxEB9+Oel5r68Np+/Nx15vcc4PETGPjzHzlyZHziHm83H6kb3b
UQ1iER+3RnILoirI3mV8mNUU3FVPJS7kw9TiXw/BJHbfzkfujneLuj8jf1Ks
/F4RE5291rF8lY9oDRNjh2nEZXwEqNziPLrI8lc+Xv6c9rZZnbiSj3ejYya/
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
1s7q2c0inPROf2kupfN3qwjF+n11cvRYv4MICbX29hP/Ie4QYc7Sk8M/jGX3
v9lw8tlyLrSUWCMbbX5LZthNoPsAnWyY3x55+NsRYt1sPCjbvuinMesPycbG
pIhq/nZik2z00BufVt6D1Yuz8brnLzv7aGKrbMhemButv8vqx9moCFH/7+s4
ur9wysY17wFbb/CJXZXyumds68nqvx7ZaNlvXZ/WldXXsnHBd+LJ7lOIg7Jh
7Lxr00BP4shshLacQddoYl42Jic+yTdIIeZnYyWnPP4l65cRZaOmKq68Oo5Y
lo0j1b99p/gSF2Zjbnj/erEju5/Oxuy3l85GGBIXZyNw8cQVRz6zel02tI17
aU1h/Tdl2fhmsNfggYTV77Ix9d76pXUuxJXZcNy10VVXi9XzlM/Xuvrq90X6
XvXZmKYuqHDkETdn4/dDdf4Cc+LWbHSfef2t+itW78+G+5VQvZY97P4nG+/3
tH4w9mH1fzHurLG752xIrCFGu2VTl/7P2f6L8f3LI9U+x9j+izGHa9c9UML6
ZcU4VWm4pkc0sYkYaTqeH0yDWb1AjDcO+r+bIoitxHj+5/VyPRGrH4jhslkh
DThK7CTGwg1GPSsesXqCGBWGF5p6a9H7eYhxq3bvYYEFqy+IcfLY+pqdHsRB
Yjydpus7JpzVG8RY+aX0/N5oYp4Y7n+2DBeEEvPFcHLTvxvuTiwSIzBqx5Vt
41g9UozfQcbL+d/pfQrFaDimteX1adafIcblei/BOLa+YjHavGuPzzBg/Rpi
zC1+MC+A9XeUiWG/qmjgyhWsf0mMWjftL0s/kX1WilFYEzppchqr54gxIHPU
w99qxPViDL5ayO0Qkr03izFVxffRwp/kD1rFkFenisMCWb1LjINvWtvzrpM/
6RCDr6/akWXM6n8SOIy+/Cmc9QNpSDDn3GvJ4zryXzoSXMsr6/7cjFhXAskB
xfFJWeT/DCUYkT7sq88j8pcmEtTkLPCPnkRsLsHGXp42PQzI31pJ0MfLYJLz
A/LPkCB7hsoL/k7Kd50k4KUaqZnFkT93lSCyWlHuwmXnPwlef9Op9POieMCV
4MqwbW1GqyheBEnw6bXoszWf4kmkBPE7A78776d4w5NAMCRmZlsTxSO+BJcd
nN0fjSIWSfBVSxDbM4Xil0yC769vSdufUHwrlGCrS2X9o/nERRJ49Lrzyfe8
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
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw9W3lczN/3DqEsyV5UIpSytFESPYlkS8pSKq3a931vpmmmaWaqsZQiSraI
j2wVkUghWwglkqSytNhD+M339Xsf/vE6nfe95z73uefec869M9U10HrbQCkp
qTHSUlL/+/////WabA19f/JLQI8J8wf88jMIn7CWZBnIaUWWnLzWxcjysB0o
tzVI6gMjj0NLTve6y+dIVkCUgvn7+Kq3jKwEtzcWBaXrOxlZFRumWd9Pn/eG
kafBzfrHOb3SDkaeDqeCW7+/D6HvZ8LwmKJ0smE7I2sgz+ZL6bIwkjUhn3g5
dM4l6m827Gc1vlCOaGPkudiyujkgVYtkbQT+qdqsa0uyDkxStn38EkmyLu5l
uVSeXEKyHoL+C6mf7UCyPgzCItYvUXrNyPMxvq331aIBJC/A3oATIx16XjGy
AfbO7g91+EKyIVpr13y4U0TyQjz8aHB7YRDJRrBWkVKzzmth5EVgjf61Q/0z
ycZYmby0JW8syYsxuqTiU7DJS0ZegkkJ0YmKgc2MbIL1TkG5+UkkA0sWXLgy
P/jF/8ssIED08O5ZNiNLmWKRZp53cwzpTXH8d8a4QWueM/ql4Amzv02LZmTW
Uggihld8vtrE6M3QLv74VNT5jNGbwf2pcF2uC+mXIYqzXfT5JOmXQejwSubc
d0aWWo488c059/oaGf1yJNsXwC6X9ObIeW1eaXC/gdGbY/XHH5uVhzCy1Arc
fTLvamkqtV+B5Q6VxXkHSG+BDTM9k6X8SG+BCzU6f7xnk34lXkSaKx2Ifsro
V2Jn1fm/Hu2MLLUKC37GZ7z8Z38VOoZrNbm3kn41PC7FPSsfTO1XY21Bz5bq
INKvgZFA64q+O+nXAOGNP/uTSL8WLupHDJbfJP1aKGnLfV9l9oTRW2L8JZ8q
PTnSW8JtSf2rgP9Ivw7V0by5S8oeM/p1qFCpmnarmvRWcO9ZZm7aysiwgv5h
77fZ5xiZZYU7y1ykZQwZudIKSqsrtxn2Mf1JrQenXOH0Qndqvx4vr2QMLBlF
7ddj+Y+1o/uzme8r16Pu4PJJIx9Te2twNb4P/1jFyLDGtIqfh40GUHtrKAw9
Kp3kQu2tkTmtYah9BrW3gfo7UxeWO7W3QWGu6uFG63qmvQ2Kyr8Z8BWovQ3a
osUtOTcYvdQGyFqrKDz6+4hpvwE/vHpNX1+j9hvAN1cb9WoDI1duQPCXXT3z
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
p6rk/aX6pEYyPpVa3OfQfqYtkUdEXeYNI/9PRqA4r+j7Hsofk/HwkLut3Qvi
PxkPeDKvOtSJ/2QMtymyEFL91zYZOqW73d5SPds5GQvnu7TVUD3UKxmWp5+W
vI5mvg9KRqgi2/BRNiNHJSPqzLvqzU5Uf0nGlblRBxbR+x9+MnoerT/vt4ry
8WRM+HQt49on4j8Zjcq5HrsOEf/JcO3mlgbbMnJhMhzNz53rpPcDxcmYbCiC
P723KEvGIK2K3te03iuTEfLj6TITqu/dTIZm68wmKNL5n4zfUtezNe0ZuUFi
z2tIwqU/tP8nQ63OWe/EU+I/GVzbsunfxMz+0ZuM4mGKnR2zaP9PxomdParf
aD1LcXG2urNz41jin4uP2r6bztF5Lc/FmhrHrHMbiX8urH6lDF15ifyfC0fd
nwl7fYh/LvTevtdbTueJNhf1swsnX5Ej/+fifRFL5STV78GF9/kvTztymP4t
uDBQbyjP/E77PxcNKWXtFeHk/1wsc7znJkf+5syFc23fx+w04p+LZLPdH4yH
kv9zcfuKal1iP/HPRe4FpSs66uT/XMieCRw/nd4L8SX2hrkO2vWa/J8Lm5E3
zFdQ/Sqbi/75I/Rlqd6ZL8Hzfc6JZbTfFHJhbpZleYLui4q58BC8X6FN9aQy
yfzOaxcc0ST+uegedflkGtUzbnKRmW8iPbSQ6lkS+7XlgZNqyP8l8xXa0HuP
ztcWLgx19zbbhRD/XExaWjHbjOq3vVwEC9Xap5qQ/3Mx6MvJvYPovY0UD5Ef
bnjzZjHrRYaH5PdTVnwxIv+XyLzgIAMv4p+Hsd27dLk0H6o82DcFXpEWE/88
/KzpfX2b9mdtHpzmirbciiH+eTjM+bMTB4l/HlbNdRq/8i/5Pw99AzLD/C+Q
//NgEF3uUUn7iy0PK79Z2f2i88CZB6OBC0PH0/scLx4mafR1mVP9L4gHvnn5
i2A32v95sKvWz1UtJv/nYd61cSVGVH/j8xA478LuqW+Ifx6uHah58OAQ8c8D
+3vryjIO8c+DkuXVk95UTy/kYVp6gZMO3X8V8zDs/hV7223EPw+Tzexq8+l+
p5KHS783XJWl+8abPJjPniPrR/XVOh5mHl80eOljZjwNPOz5NHXipl8MXy08
fHSxGn93PMV/POTG7FVeQfcZvTxkPFefoE3rv4+HG3KKImuq70mlwHva4IMd
eXT+p4B1uazWW434T0Fd7E/LVqqXKKQgf4p60H6qF6mmoGvnSblZF5nxaKRA
NGE/3+YFxf8pCLFxmGUSQPynYF5XxPMLdyn/S4HUceFX3WDy/xQM2nfo+h66
r7NKgVxnW8138g9biT2XWZtPLKb4PwWXhnjk+9J7Tq8UcKzatrq9Jf5TsHNY
vbLtOor/U7C1cNlCX9qPWSk4ePW0vYDee/JTsO/UDby0pvgvBZPl13w7Rfl4
dgqOmeU/ac+j/T8FZroLDA3JXwpTsHDcl9LVbOI/BXEjfx4+MZ34T8HhwQZ/
NZ9Q/J+Cs2ry+5ZE0PmfggaLcRXvKf+qS4HwoZvBFLrPbEiBlqpqQBndD7Sk
wLJ05vTDtL46UzDs7N2JFyme7E3Bg6K+w09iaf+X9DcieaYL3WdI8bFiYtbk
N3ReyfDxTvO8x2J9yv/4KM88am9E9UoFPj62jx0lRe8tVPlYvS7hpArNpwYf
RjZda6JGEf987C4psayl+pEhH3dn3t74cwL5Px+Pt1vsOLWf8n9J/9+G2A5+
SvkfHxuXjtg9rpnifz4ONzc38b8S/3y0aQpCJpmS//NxVuXE3a1llP/zUV2z
3ef7YeKfj86L2ze8ofchLD4Msow55VQf4/Nx2kondb8i1WP4uOX8xPVRI/HP
R8rfTb29Qyj/58NU/c3HK7WMvpCPgedH5iQfpfyfj0uT7D9eoP7K+Jh3Yawa
h97PVfKROzFC5ec//vmYwVZr66F6ah0fF2Z9K11L7/ka+NCNKvgV/If452Of
8S+TIHpP1Cnh89bDaV+rqN4l6V/JcZklvT/vk/D1yPbjC3pPIpUK78Gjb7zS
ZfQyqZgfq99n2kH8p2JlpmDyHnp/qJCKBv5KgQnVN1RTobS09msOrWeNVGjX
8wo+0fsr7VR4rjcWHR3H9G+Yitba0FMZVF9CKvp7/S2uv2f0FpL+tXbczhJR
/ScVTtc+wZbeq9imQmbOzCPKdVRfTMXNuV3vs+j9l1cqDK6YJT0WEv+pcAy5
3Gc6gvk+KhU/e+vzVo2k90sSvC+V6zguxH8qbu3ZYLMrn9GLUzEkvNlCQPc7
2amYZNN/VofqefmpSMwJPjHFj5ELU1Fv8d76Bb3HL07FW6fvOtyxzO8DylKh
1sS6ftiL6pepmDXvRvIAqofdTIXlO33fsqeMvi4VYdqfc2SontqQis/Vi98Y
031NSyoKM4OuOnow+s5UvG9OOhnjwNjrTcWL60MuFXOY/vtSMexRox7rKNX/
BeB9u1E1NJnqfwKMep2+6+MXRi8vQL176ZipdD+nIMAZ84aDzilUHxbgg5/j
vGftTHsNAXTHq+6LaKB6qQBbDh4f/InuewwFWLFwso2hJvEvgGBokEPIPOJf
AIyz/6FJ7yOtBDjXOLo15DODx1aAR5h30Ooa1VcF2Jej4BRG8+UlQDRcRDun
EP8Se1oK8meziH8B+p+aWb5NJP4FeHnn3pNYMTOffAEOXazsSZ3C/B5ELMB+
6cM3A/rI/wW4emPKH6WfxL8AleOr3TV7iH8BtLd69Gyi90zFAnj+3qlx/zej
LxOgyeftFqwj/iX218q6r4wh/xfg6Tr1TRupXlongFnRlZGr3zH4GyTjS63Y
t5zq3S0C9CkITMLciH8BLl2a++Iah/iXzN/AstgAum/oE8Bbp2nFbTP6fYsQ
McsNjX98IP4lctWarVWV5P9C1Dol7jPgMv0rCOGzdq10jRH5vxDuN46EWBlS
/VcIVuVd9eEXiX8hPC/XVObuIf8XYmzEjqCcWqr/CWHn4jNm3wPa/4W4vEr2
5Ax6L2clhI2ckcZUf6r/CvF1W3jLz3/vEYXYLr2ioiGP9n8h3NRG65yYx+AL
EkLhhWGmA71njRLiZ5HK1AmTiH8hWvuScmqvEf9CVI/XdN01h/xfCO//jJ6X
yDJythBsW6vHa+k9UL4QMiM2F74kfIVCrO+e9tDmL/EvROj3xZl+9HuaMiEs
1Xdoliwg/oU4sWv07gU+5P9CvL9Rf+hGIPm/ENbn+E3bH9H+L8QFI/ltD8h/
W4Q41rtT5i297+wUInFIq4sF7b+9QvDKTFVLXhH/QoxszdHp2k77vwjT9vd+
vr2F9n8RDilffCo9gPxfhHV9LnnllC8piJAnLxo25t/9kAjXPWKfCrtp/xfh
ZfEU3UmPKP4X4cB89zMy/nT+ixCv42svu4z8X4Rzk72l+NHEvwh3Gw8uqKL1
YCWCu0varHTqz1aEgMEPFM1pvM4iFBk8PLuG9lsvEY6zlt0fSveTQSLIfTvz
MXUo+b8IKn8jHqrXEv+S3PyA7oH19N6aL4LODj99LXqvK5bgGTfj3atyiv9F
uBmSZmF0ie5nRIhKjZf+TO9pC0UYKf5+VnUCnf8iDBpwUnmXA/Evwtw7kXZe
9J63UgSLqBcaswyIfxGara1VLjoR/5L+JrsrqtL6bhDBJdSw+/4but8UoZa7
wW5UIfEvQnjKD82uSIr/RJhveS++gdZznwhn5VaOG0T3LVJpqN1+a6YP3YfI
pKHIb9jiLlPiPw3668cmyiwn/0/Dy4VmtRb0flM1DX3ClV/6KX7SSIPmkqj7
tsfI/9OQsU/zcr02+X8aLFdYDwopYGSkodOz3Og+vWe3SMMdXbuBPvT+2ioN
nrY56tJ0v2SbBvknOrYFdeT/abjC/THQqoP8Pw3de8cmrKb36EFp6O/+oBu4
m/hPA0/2h4YOxXOsNPy3/lVDDsUP/DSk8HJsRzgS/2nIO61gzH5D/p+GafZC
wWGa7/w0mJUOzAk+Q/lfGjq8ZVv1x9P5L+mv//HPCvLXsjRMTt8vrPv3PjkN
u7wGmxsuIP4l+ooIH+OJxH8aPvuctQgT0vmfhmP1a98Hcon/NGhsXuZ9cTWz
33WmAfl/n52j/bE3DdZT0zjNAcR/Gk5eKz51n8YvlS5ZbypH59J7c5l0RJzx
XeBHv0+UT4fUoqHxwk6K/9JhutO0eOlM2v/TcfnF3nufXtL+L9HL6Se3ipnx
aKejYHJNhzzdLxum4zxfcerwXvL/dNxZe/nqjAfM9xbpCAjRVU5KoPvUdKy+
vubgTyviPx29A+9Y8+XJ/9NxIOGVk6I3094rHe+SboX1UzwZlI7DUxLybtcz
+qh0eA0ZuWHVavL/dFhNmJq3cR+j56djW2mAvFYXnf/peGOq/fWSBvGfjqD2
Lc/PPiT/T8fdi1ZinxSmfWE6nt1V/7Woivw/Hc/7j415I8f8XrUsHU2VS1/b
0u9TK9Mh5Dd1uFfQ+Z8OleaRg47cYfR1kvmq7lmQ0EPnfzpcEvT02p4z42uR
zH8fxr2lfKlT0p/R7gV7KN7rTYdJ4p1zSwlvXzpkjpxMuziKzv8MjIjX9fjS
QP6fgYDPebe10hi9fAbm6J1pDHMk/89A11a9H7r9jF41A1f3Jd7xTif+M6B6
89nVSnNmfNoZaDjwft4YOn8MM1AUJeL2O9H5n4GlqYNuKm+g+C8Dj+ybe6qT
if8MuKuz39gVUfyXgb9z261i9xH/GdiVVK6gY038Z6Cieq9cP8WLQRlw+JJd
6hlC/p8Bx3ELLUL//R44A+PCh/0dSeczPwOTS/PNrBXo/M+AyWbtvS/LKf7L
wIwRr7anW5L/Z2C79eOwa9pMf4UZ+FBYkKVO50lxBgo0BnEjaL2UZcDt52sR
j/y9MgP3l+f9dspl+ruZAe6jRm0XGm9dBi7GOXv8IX4bMlD7uqfy6mziPwMD
h90d/IlN/i+xZ+AVmLWZ8r8MVMeb29ycwOj7MuDbzjIyI/+UEqPNV73ejeIb
aTFmzRqTUEC/P5YR4+prX/Y9Og9GiBE7Ye1o7lTGvrwYXS6bKitVmf7GieHd
ONew5RgjK4jhxFp69yf5j5IYlYtzOiy/0PkhhlvRjNMvyH+ni2HYEdQ4nd5n
aIjh1fqHxR3J2Jstxo8vm63il9L5IsaWI7tNQ+n32PpicErvaM+j3wcZiuGy
XV57C/1+xFiMaZ0OBqM0GHsQozPQTMcvkZGXieG6mP3+oAOtRzEGbpzm87/1
/3+dgFtF
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1042.}, {0., 13.34748847742056}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"<x>\"", "\"var r\"", "\"enclosure\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.958401136136962*^9, {3.958401854406398*^9, 3.958401885195663*^9}, {
   3.9584019517562513`*^9, 3.958402003297665*^9}, {3.958402105239531*^9, 
   3.958402118959882*^9}, 3.958402149078762*^9},
 CellLabel->
  "Out[2262]=",ExpressionUUID->"5c9d84a8-186f-4ade-88cf-b6f55b13214a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure of 8", "Subsection",
 CellChangeTimes->{{3.9584010468196497`*^9, 3.958401051720194*^9}, {
  3.958402042399867*^9, 
  3.958402043936533*^9}},ExpressionUUID->"c6e53e77-cf78-49ee-8258-\
7bd4dcc86ed2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dt", ",", "T", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "2000", ",", "20"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"J", ",", "k", ",", "\[Alpha]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "2"}], ",", "1.55"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"R", ",", "\[Omega]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.0025"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"znew", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results2", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Dynamic", "[", "results2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "NT"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Round", "[", 
      RowBox[{"T", "/", "dt"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"t", "<", "NT"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"zgoal", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", " ", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"zgoal", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zgoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"R", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zGoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"\[Omega]", " ", "t"}]}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zgoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"znew", "=", 
      RowBox[{"rk4", "[", 
       RowBox[{
       "z0", ",", "zgoal", ",", "rhs", ",", "dt", ",", "J", ",", "k", ",", 
        "\[Alpha]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z0", "=", "znew"}], ";", 
     RowBox[{"t", "++"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"scores", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"meanDistance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"radialVariance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"occlusionScore", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results2", "=", 
      RowBox[{"plotResults", "[", 
       RowBox[{"znew", ",", 
        RowBox[{"L", "=", "15"}], ",", 
        RowBox[{"zGoal", "=", "zgoal"}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<<x>\>\"", ",", "\"\<var r\>\"", ",", " ", "\"\<enclosure\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9584011302114897`*^9, 3.958401133994063*^9}, {
  3.9584018484681177`*^9, 3.9584018849912167`*^9}, {3.958401949924601*^9, 
  3.958401972945465*^9}, {3.958402003018358*^9, 3.958402003102953*^9}},
 CellLabel->
  "In[2203]:=",ExpressionUUID->"13cf54f5-f94a-4b20-af1d-191f3af8c7f0"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`results2, StandardForm],
  ImageSizeCache->{1098., {171.134033203125, 176.865966796875}}]], "Output",
 CellChangeTimes->{
  3.958401136136962*^9, {3.958401854406398*^9, 3.958401885195663*^9}, {
   3.9584019517562513`*^9, 3.958402003297665*^9}},
 CellLabel->
  "Out[2210]=",ExpressionUUID->"b39bdd06-1b79-4d47-a951-2d6b092a38d7"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.958401136136962*^9, {3.958401854406398*^9, 3.958401885195663*^9}, {
   3.9584019517562513`*^9, 3.958401973928566*^9}, 3.958402027621202*^9},
 CellLabel->
  "Out[2213]=",ExpressionUUID->"dc1731c2-e33e-455a-b62d-5c252de659a1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw8nXlcTev3x0OSOVQyJWMhZA7hgyiEShIVSRGiOanUaZ7rdDqdTp3QNWZK
CJEhc+YQQgghhJAk0+/8Xt/96f5zX++722ftz177eZ611rP2vn2cPaxdm6uo
qLRUV1H5/3//75/aKYY/x5Qb1dZPEf4DtFe/frBxF1kdj70v+DxzJmuga4d0
rYShZE28ev6tRtyGrIPdV788f6JG7on1njd7tBhG1sOkBWclXwLJffHHyq7t
8Zfk/kgyUtW1nP5D4IEoX79pdMxBsgF+Wffc9iLnp8CD8WbSpV4bVjQKbAjn
mgPOrX+Rh8F+jqJZWMIvgY2Q32J0uevA3wKPwDZxyNWK2+SR+H6rW3x8wh+B
R2FI9eqNO53/Cjwat6Jv1Xkt+CfwGLgPr8rL66uC//FYdJlcX2WSRh6HdbYe
5Tp/yMawnTQse+XSZgKPR4f3J/TbHCNPwLU+RwdcV20u8ESkLf6Qf3MO2QTd
g5udUkkkT4Ljf7rbh18mT0bWpD/9W/8iT4GD7Z1i3SEtBAbG9gx7/c5WYBHg
ktc+/24Ij0+F5HDIj9HbeXwqLu1rnbDiIo9Pg7lPjcbelzw+DX8mr/s+9y+P
T4dZ+0kPkruqCsenY+WwtKJdwwRWMUWblBqLa9N53BSP1q7UHLSIx2fgXPn7
ex/deHwGXg+583byRh6fiYVTtfMnx/L4TBRO3/mzrYzHzaDvetr5/DYeN8PG
IXbHA/N43By7IjqYzjnB4+Y47zSkt/kFHp+FT92Wu0Xc4PFZeNxOTdT+Po/P
xrGrNWO/V/D4bFwL/fLDrIrH56D74mk1nT7w+BwcGGPWY+kXHrdAyoS30WN/
8LgFrrheMt3xm8fnom3rGunBZi2F43NRPX16/TI1gVXmYUCRzvhTbXh8HupF
n1KudeDx+fBUFG0Rd+bx+RheVhzbRZvHLTEttOOfRd0EhiWyrldMde7Jv7fE
V5OTk8f2FrjYEmpbr0U97MPzrTDuWGuHWf15vhXufCsqTh7I860wb2V3370G
PN8K/evn/tkymOdb4/6Z6wfXG/J8awxu1i+/xzCeb40BpXMadg/n+dboOCXS
XmsEz1+A7MiSONeRPH8B5k7/0jlrFM9fgNT6sNUFo3n+AoSsNnp9dAzPt8ED
naGXto7l+Ur2HzXSZxzPt0HMKDeMMOb5Nlj5uc2Xx2SVhSjRVhntNZ7nL0SQ
xrh3dWTRQvRdXfti5QSevxBeo96+uEJWsUW1j1OOzkSeb4tl3fpdXUwW2cLg
5JI/CeRiW/zXYVXZQbLKIux8n1lxqen8RYD5a8WtpvMX4fGNQPG1pvMXYXCH
pSNONp1vh6+n3n/a3HS+HSYWzx/l33S+HdqMUlkxvel8O1j06fG0ZdP5izHi
5rVfp6kHi1EwOlvTnSxajMOhtwM0mvQvxrDa//z28f6oLEHDi1SbSU33bwmu
Ldlsf5n3V7QEf3OCbs5suv9LIJ1x990Z+kfFHtGqKz8OI8MeWx6Ydc6gP0X2
+BDzN+UH/V1sjym9Dygsm/zvgCUOY9228fmAA3ITHQd+bHp+HKD2pUp1BLnY
AYXv9hit5/Om4oikbmfLdvB5hCO27Y/sft+I5zvC8cOZQf+anl9HvJ+8z6Af
WWUpGku6mEzl846l2HtgeczioTx/Ka4OyTN05/goXgqNzXctNg7h+ctw1W9D
qzCOJyyD9uK+QRGDeP4yTFg4/ZKoafwtQ8ziqc036vN8J3Suj5rrzvGq54Q4
n9hzSwbw95yw07J8gynHt5MTdEboxw3qx993wm9z6/Zt+gqc44Q989b2eKNH
e074+qv46mnOH5VOUNF/OzRVl/aXY0DgGQenXrS/HHF3gtYM4fyD5ZCZHlzz
tTvtL0d15WzPo5yvRMrjPfYk+erQ/nLI/0jKhnel/eWY3HGm7Vst2l+OvWqB
/RSatO+MDJOVFnO60L4ztr6/XPmjE+07o2zMy885GrTvjNnqSbEzO9K+M0qL
hp+obk/7zpgov5YS0472naGm39itX1vad8aEpb9cilrT/gos3HFwk6U67a+A
JC/H8yXnd6zAtImqs71a0v4KmO05q/WnBe2vwMj1a59HNaf9FWhca3u4LdeL
4hVI0o/LTP4nrCeVK9D3RcnWDn+5vrhgVUrW7QSuN3oucD0zY5TaL4Hhgu/W
D8s2/RTYyQXXRvU/87VpvXLB3vLrDS71Aue44GrxhOSyOoGLXfCudH/M1G+0
74I+WcM/7Wta/1zxOG7HtS61tO+Key0uDNj4ifZdcWZld/WKGtp3henvLoEm
TeupK6rL6iKy3tG+K1LEz4fWv6V9V0zRfBA6/w3tu+LU0KKwXU3r80qsHGAz
8ddL2l8J2ymzC+a+oP2VuDvEsG7zc9pfiQ5uHs1rntL+SsSneL0Zx/U/ZyW2
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
rADzE3E8VFwtD2/9zfwvHuXHRAa/G5n/xWPjgAszbZn/5Mbjzp1qzTzmR/nK
3998NqtFPfO/eIzo3rnSlvlVcTze+e6u2c38qyQeNm7TS+qZn5XGo37wrsDp
7G8pj1fmh4ltkz8y/4vH7VYHwx98YP4Xj0DvC297NvW7xKPHiKBpy5kvNsSj
QT0yazvzSZUEnH8T8+MV8031BHjcNVze9xXzvwTIX2k+X8p8VScBi8Y+C8hk
PquXgN2VfcfeZb5rkID51QG6rdn/YpSAgeO9x09m/4txAuoV2cle7H9BAvIP
hA3Y/oD5fwKGPNzV8l4Z8/8EjJ+RNLYZ83O7BEx6cejsUObvTgnoNjsp1475
vVsC4m+mNYQ15f8JqF0+5vge1gcCErAk5+mH26wfiBKgcfbb5jrWF2KV+hMf
l3W9TP8noN2a2ozxfN9JnoAF5imfFp+n/xPgsq1dZUAx/Z+AUYEnfGRn6P8E
jFj4Mv/wKfo/ASrjb2+5eZL+T8D+3Aumbwvpf+X1bPu75x/7X0oTkKY4eV+b
9ZjyBIwNH3rbkPWaygRcOh67eSrrOdUJCO7002wh6z21Cbj7YNf9VawHNSjv
T/HRuRtZL1JJROcG0+NxrCepJ6JrV49umaw3aSTCRn920G7Wo3QSsX/b21cF
rFfpJWKTj82Sc6xnGSSiy3f56xusdxklIr6uMPHhZvo/EYcPHbF9oaD/E7Gw
MmL2+0z6PxHpe3p7fM2g/xMhORBw/Sf7XewSMa9l8EoV1uucEpFj2tlMjfU8
t0QkBvf2bct6n2citk2KqOvIemBAIo5k6dzuwnqhKBFbhhxr05X1xNhELNMY
lteN9UZxIkzr5hb3iKb/E2HV6blZr0j6PxHvR+2ao8v+llyl/TMr7uqyvyU/
EbcO3Hupy/6WQuX9yj4QoRtM/yfi35UdRb1YXy1R/r2mW2rPpn6WRAzssq1t
D9ZnyxPxrsVPo26s31YmYvfTDupdWd+tTsQzq7AMTfav1CbC+u67153Yv9Kg
vP+ypz87uNP/STDb9vFRW9ab1ZPQeHVXojrr0RpJMD+ZqtOS9WqdJBz+MzKy
mQv9nwStFm0f/GH92yAJi/rLNBvZj2KUhLEHLGbWs55unASTl9u8vrLejiR8
atV68yfW482T0HfNh1vvF9H/SQhbcbj9W9b37ZTnu55f9qqp/p+E13+Drj9n
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
ivsbwVLEWC56F5rE+qcUN2r6ftzP/ZJI5f3sOqdvOd8njpXi5NPvrs24H5Mo
RdihVekGTe8rSxE5r1XyXO7vSKXol758qGcO66VSlC8faiXmflG2FLmO8x8e
2MX6qdJfV55uLuH+0w4p2ozqH1HJ97VzpSiZttv1O/ez9kuRZ2XQvxX3v/Kl
+Ke1Z7MW98sKpBgw1uOQHvuTC6UoLW01xYD7b6ekUPsxe6Ah+5GLlc9b12Vm
htzPuyjF/SWnwg3Yf1wixbWPw0/olQh8Q4pYk+fXNbmfWCrFzO5zslVvcfxL
8fKBdbvaUo5/KXSnjvv7gPuXFVIcl262OcH9zkopfiyQfJWxn7hKeb/aJhZ5
cP+0Wjm+mq9Pm8791hopBt6OX9qZ/cK1Uqx/sqtZBfdv66RQvdm4POctx7/S
fw/HuC7jfvBv5Xj/EfpFh/vHKukY3Sn44w3uL6umo/3vWQhq6gdOxx+P2Dv9
2P/bLh3tKmzjLnN/WyMd2X0XWa7gfrhmOl5MPNixkfvlOukIP9PmUDz313um
o8e8bF0t9vfqpePMZ93pmdyv75+OKaYPW3fl/r5BOtblSpcmc//fMB2DJh4e
+o/9vEbpiLra1WU1+wlGp+NfzoTPN9i/a5yOV2a6pwexX9ckHSN6LjwVyn4G
pKPjI5WKW/z+hmk6ure417Yr+3PN0/FkYnsTO/ZTWKRDERzmKGG/hWU66o0l
yy+xP8MmHfGrR074wv4Nu3R0Cn39SGuAwA7pWDj57KhR7A9xSodn1IqJs9hv
65KO040tXy9iv4lbOhp2rh6wjP217ulQ8638spT9K57pqN45G4vY7+KbjiVD
tFuZj2K/Qzq2vZs0aQT7Z4LTMfKz+ePO7LcRKf0jnfWghv04kel4Fl8x6Cz7
d2LTkfdI/1Yc+3sS01Fy7dEpi6b+2HQsu6xf24r9Q9J02PS+6VzE/iK58npK
W2usYj9Sdroynv/vWxv2L+WkQ9e/vPVu9jftSIdmtN/8ieyPyk3Hg8mnz11h
/9T+dAzs5L20qZ81Px1Zq+/2u8p+rIJ0DNPK0JjMfq5C5fmKL/32sd/rVDoC
U+MdNdgvVpyO2qehp9exn+xiOk7+dja9wP6zknQ0GzPumwb7124o9VzzuG7L
frfSdPTW/3RLyv64snRkKP91nf105crnw89x+U/231Uor2+wfn1v9vdVpqNg
cdW5yewPrEqHRY2oZCH7DavTsStiTgdX9j/WpMMg5luG+zL29yift6Exa9z5
vaE65f2N9EpwWc5+n3T4bghQWcjvE/1W3o+yk7cnrWD/jwzpC/L+6fJ7Rqoy
WMt7ZTSQ1WXQmDhw8zVXgdvJUH5zbLd0fg9JQ4aIqnZd7FYJrCnDVN0jki78
fpKODN+MQnOukHvK0P1Hxxm+qzn+ZZggmhPXjd9f6i+DU39H/+NkAxleZh3R
mreW41+Ga5r/PJ+SjWTobD9c4srvOY1W/v4Xr4g3ZGMZ7CcazXdax/Evg8q+
9ir3yJCh16fXOZP5fShTGdoNuG6ynWwuw5Beqs9VPDj+ZfgobpO2iGwpQ/a6
OJfdZBsZfuraL6sl28mQWxmTMpLfo3KQoVrLtNl6spPyfu/+VLyN7KK836s6
Piklu8ngE7TQoYHsLkP/0nSrbl4c/zI8T7p6ZRTZV4YGebsbZuQAGbZrZ69d
SA5WXn9D2REHskiGx6kjDzuSI2XoM3Surx05VoZOh8pbzSUnymAzc3vgRLJY
hpNq0sf9yFIZvh/eM0aNLJfBw+Nn5ktef7YMn2MOaJ0g58jgP0H1eBx5hwxP
Yucl2pBzZfDt9Hl7N/J+GRSf7No94v3Nl6Hv5g5lEnKBDEHvclqbkQtlePjq
QNF3+vOUDDcfP2/YQi6W4Y1Dze1p5Isy5RORNv8Fn48SGb4e3hwdSL4hQ6HF
04gO5FIZ3g8dYruZz1uZDId7r2qnTy6XQXzK/+g+Pq8VMhRvMXUaQq6UYb/0
bI9dfN6rZJA8eVTfg1wtw6dlsSpJHC81yvvX4rzZT46nWuX4+xDyxIlcJ8PM
W8evXeB4bJChZp5r/77k3zKMsAv9EcTxq5KBsaG/re9wfKtmYOLaOzP6ktUz
ED6t9tl6zgftMrCop/nQ45w/NDIwMODilF+cXzQzEHLCYsBEsk4G3udeqPHn
fNQzA7E/1Xbmcb7Sy8DMe58cXnI+65+Bfcvn9utMNsiA9qpPapM5/xlmwLpM
pr2yqb88A34uqsvjOX+OzsAzk491ezm/GmdgXuq/yivsjzbJwLs5L0a94HyM
DEw6Mfx3Pedr0wzcHxdq3ppsnoHzH5bo63B+t8hAsp/p7n6c/y0zcHL/kQdD
uD7YZOCwo/ZFo6b3FTLQvm3pppFcTxwyoHF4fOcRTf3LGbCV/JdiyPXIJQOe
DbNVB7B/2U1pv+36kO5cv9wz8H3LuHbtub55ZmBji6tFv7n++WYg6/k4xTuu
jwHK32+VXHiP/cjBGTi26GqfIq6nogzl8/ekaivX28gMLJ61t2M4+5FjM3B0
b4f85VyfEzOwNvj+vclcv8UZqPtxJrYb+4+lGbhxNKTiC/uN5RkokhdVXGE8
kJ2BNkUdMxRN789k4Iijerd17DfeodT/aICnCeOL3AysSX2ypzX7jfdn4Pnb
lHtlfH8nPwOTR2c3bma8UpCB6pMWhq7sNy7MQMyuSr/BjG9OZaCseXxV0/fl
ijNwqXBd1EHGRxcz0Ddxu6sH+4tLMuDQfaxkKOOpG8rn83FfnfeMt0ozsKr3
EtWd7C8uy4CPztkVTfFZufJ+PNCfrs3+4grl71s5HrzB/uJKpf9W9zgaxniv
KgO7v2ksH8P+4uoMXDv1/Oxb9hfXZECS1vOZnPFjbQY8rOaXmLO/uE7pv6qv
8T+a3vfKQPBiv5E72V/8OwNh1eOuWzE+VZEj8F/y8j+MX1Xl8Jl/vlku+4vV
5Yh+1K7QivFuOzlCfmeLGxkPa8jRPEKasY39xZpyDDys/mgW42cdOVbbNV9e
y/7innJ0fbppoozxtp4c2pZrfSey37i/HK835nWtZH+xgRwta3RHRDJ+N5Qj
slPsDX32GxvJ8WHKnu/XGO+PlmN0yZjCdU39xnK0Ur/fW4P5gYkcbYP6Gh9m
vzHkWH7jQDsb5hOmyuuvbsz9znzDXI7u7cN1MtQ5/uUweHZwpTHzE0s5+vi+
3vKI38uzkcPGI+BGYNP7ikq9rY809mD/sYMcCweUjT7N/mMnOepXdIxeyvcf
XeQYPDLp5z/2H7vJsfnJmqz/+P6kuxwbFCd9pjO/8lTqPRAhfs38y1eOeY7n
f8WwHzlAju3d3IoHNzD/l2NvmP27m+xHFsmx0j8gzIv5XaQcDYPEaVrsT45V
Xv/w1YNPMh9MVN7P2LOWy/j9PbHS3lHTTi3ZryxV3q+LW/338X1TuRxjHdYl
WDPfzJZj280pSxrZr5wjx5VeWz9uY366Q44Zmq0tLd4x/1eeb/YloZ757H6l
f/TP7fuP/cv5cqxpU35i7mvm/8rnyTihuJH9y4VyeHwdcC2X+fIpOS6L3lUu
anr/Vo5nxu07qvN7fhflKI45s/QEv+dXIsfvn3qP17K/+YYcjtPnJfRmfl4q
x+cZtsFl7G8uk0OmM+V4PPP5cjlutWs5cxr7nSvk+HUka+SvpvxfjupX1dFH
+b5xlRznT96y8GL/c7Uc07b1SR7G+kGNHCbWB2w+sv+5Vjke747ae4D1hjo5
HgStk3uwH7pBOV4a1AeNYn3itxz3pu9zbbjB/D8TdbmfF51lPUM1E73PrWod
e435fybKPBUR1uyXbpcJpyr1Ul3WQzQykZbQv6GG/dKamUjVXNzyNOsnOpl4
49qqWQr7p3tmIj0jus6Z73vrZSLpQ793xqy/9M/E+4t9qzX4frhBJiRbTjW+
Z73GMBPPVPoMvsL+aqNMGPn7he7k++ajM/Ew5H6LaNZ7jDNREmFd7Mb3000y
kVPy7fRc9l8jEy4Ox1qOYb3IVGmvdVKOLvuxzTPx09Qpow3ff7fIxP4eHb41
sB/bMhP1vdecesfvE9pkYtjCSb8rWJ+yy4Si+8yiu/xeoYPyuJZx8+vs13bK
hJXOqUeX+P1Cl0wEt/ecfYH1LrdM3H78xuECv2fonolQ89xul9nP7ZmJya+N
4q6zXuabCc93X47cY393QCZMullte8bvHQZnInlnrkMN622iTFS1Nfvwm98/
jMxETd16Ww1ybCZ+dVq0ayD7wRMzsfTnoFdTWL8TK+01U9NyYH+4NBNruv+Z
HrSD4z8TY3drBmxuqv9l4rDNjBPnt3H8Z0K7NrBj0/cQdmSidKI0XJucm4kl
F5y7z2A9cb/y+Tmw95k/+8vzM9Evue/DffzeQkEmTMf4tK1iPbIwE9Eh4yJ6
k09lYqTu7xlL+b2G4kzMWzfFPof96BczET/a69pr1jdLMrHd72vWMPKNTOwa
pVUWyH710kzcH99z0zV+H6IsE/1fTNjci1yeicwy6URf1k8rMtG9bNKyW/y+
RGUmDPzHdzQkV2VCozrQOon97tWZ+Lq/avhX9rvXZMLa3jxvCbk2E96LV5Zd
Zr22LhML5B9zx5IbMjFtbtDIveyP/50Js71ZG/qQVbKgm34xJJvfi1TNwjuH
ZfN6kNWzELn+TM1m1ofbZaGgVV+n/mSNLFypPpaXx+9LamZhcEvZMxOyThaS
R178fov99z2zcPnBiEYXsl4WfKUnv/xlPbp/Fuzr+7/MJhtkIalb3zuTyYZZ
MLKde7GK/ftGWZj3dsi5ZPLoLGilGt40IRtnYfzM3R8/JXD8Z+Hr9Qr9nWRk
4aVDvWgZ2TQLj2a3/NuLbJ4F763Nd1Syfm6RBUnRrQ27yZZZePDdKMSbbJOF
3+MeFk0l22VhgGLhGC2yQxaGtRj4uSaO4z8L7U7s/lhCdsmCpmrvMXvIblkI
P19wNYnsnoUvKv4H/cmeWdBOXfB+Bdk3C1Fb+4QsJAdk4Zp5xvo55OAsbBk6
7+wMsigLIrXzPqbkyCzEj7VMMSPHKv/ecZzWfHJiFjTey9TtyeIsKPasd19L
lmbh0+It00VkeRbOGL8WZ5Kzs2CV9sL2ODknCzcWasgfkXco70fWDVsV3q9c
5fMwdn76EPL+LJyfk7fQnpyfBceyiswUcoHSXyP2rmj6PkxhFmJOnCtoSX+e
ykLIzL3JZuTiLBy/cOlrEvliFpxPWb4sJ5dk4fO75UsN+DzdyMKT8+9WBZNL
s3C09eF/ZeQy5f1wcBw4ks9reRYGXVpZkUauyMJ78z59G8mVyvsfePxH03io
ysK0tkMcy8jVyr93tLE253iqUfqz28sHxU3fc82C4Vm795M4HuuU48Wkc+JZ
ckMWqiInFc3geP6dhbH6z/xLySoKjH97/fQyzgeqCvgsOpz8jayuwDZfjeoE
ziftFDgyzbjEgPOPhgLma+cNvUbWVKDm6SwtT85fOgo09/62qTvnt54KyOJf
u1wl6ynQ71TClWDOj/0VmODbd/tozp8GCiRsP1ZXSzZU4OXqAScOcf41UiDn
Yo+P/pyfRysQNkU7CZzPjRV4u9spvQPnexMF7p7Xav6CDAWsW/a+fZzrg6kC
v+aPbpBwPTFXQPPAkwBvrjcWClzutNrCluuRpQJL+v5dN5nrlY0Cu3/GlQ/m
+manwIFvJdE9uP45KLA5yNRHg+ujkwLTn1rLW3P9dFGgoVvXWjWur24KTDwn
8lXn+uuuwJcbc3p34PrsqUB4mMr7rlzPfRW4bvXt5gCu9wEK9LpienEc44Fg
BYate3FpLuMFkQILz4ddb3o/LFKBN0P23oxivBGrwOtPey/uZjySqMDwoTm5
NxmviBWof+Pl9YPxjFSBFs3KtAcw/pErsHT+TLEt46Ns5f3boXk/gfFTjgLq
b20rLnL/bofSvv6X7GaMv3IVGH0hrf00xmf7FcgLK+ofzfgtXwG1c4fKbzK+
K1DgYU5i726MBwsV+D16+OdVjBdPKe2fmjXpZNP+nwInny/+15Hx5kUFgj/v
Hbya8WiJAl+H2RZcYrx6Q4FG3empAxjflipgW6p/LJbxb5kCYyfGdf3M9wnL
lfdHUbTHjvFzhfJ5uP/S6RLj60ql3kdfjcYwHq9SoId2fvtcvr9YrcC+Nwff
92I8X6O8Hx0XF8kY79cqx6NxlXfnuxz/CvzwdVBNZb7QoMClK1udOzO/+K2A
y9FlIhnzD5VsFDzoY9mL+YlqNt544+Iu5i/q2bDU/XBrJL9v1C4busv0nc8x
/9HIRodFdzysmS9pZuOWd/a719yv1MnGWl3Nc0HMt3pmY3Zo9tsuzM/0lOeP
8pmXx/3L/tmo7pL/ZjbzO4NsVDab+d875n+G2ehxqIVHPPNDo2xM2CTFUOaT
o7OxamqY2l1+/8g4Gx5jRhwKYD5qko1pt98b9WG+imys3lPmd535rGk29q+r
99jA782bZ2PpxfEdBzA/tsjGD7O108uYP1tmY1fwxN+RzK9tlH9/Y8qgcczH
7ZT6o7+deM/vITlkY86rws1bm76Pn42XbR9fWMj9UZdsRPeP79Ge9QG3bKyx
f5N2iful7tmY2ljfI7Tp/eZsICh/23i+/+ybjVc5ddrfWZ8IyMYzcdqqQ6xn
BGdj/ReLiPWsd4iysbv1HTtD/v8CIrNx4NW5B++bvoeUjRCvgg97WF9JVP7e
kRHRq1l/EWej6OVx6SDWa6TK5yejqOV77q/Ks3G5MffKXtZ7srNR+7GqZC3f
P89R6p1064ch60c7svH31plpn1hfys2G+//1dO5ROaZrGA+ppBmHnRHVSFuz
QlNUTMjsi9IQHabSdtoJnQbTmGg7M4gSKRHhe57nG2M3KYccShRTtkVIcoiM
JjFJkpFqj4Zov/9c/flb31pf3/s+z3Xf97rutbpumaUfp/90RIczf/SsW0K/
Kkc7z7UfWzrTzzqtw7ETEXYt9LvydTC6FdlyivvXQh0OzY9cuoz+WZEOzfMu
7HLl/vWSdp7fXZvYSv+tRIdvu76KPkW/rlR7vj17jGLo55Xr4FPt0ubU6f9p
96lxovNL+oOVOhxf4P3TYfqHVdr911eNCaffWKOD4eP02kHcx9bqkBftkPqA
fmW9dr+LA0em0t9s1CHm4MOcKdzHNmnn4Xuwo4P+aKsOgbvSzXLpp7Zp96f+
4uUo+q/t2nkmjrW25D7WQGBEsmPHdfq3hgIfvamdvZp+r4lAWGGB7VD6w2YC
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
x/FHQUf/yXnSVI9eOaeuGi4zxP8BOl0HaQ==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw83XlcjN3/P/As3UKRPYTsIUSWEL3IUogihKJ9k/Z9nfZpn2lmmkWRPWkj
kj0KSQghlKKorCEK4Tffx+99Pvc/9+N5X50513XOdZ3rLO/r3ONt3DfZ91RQ
UFBUUlD4v3///3/a9YXNXlJb6V19+g/ITm27Ocz7BlkJK6e0Gj1+cI2sCiVL
/u5nkcxDYZT+ec8J/XKyGpYJypbzb1eQ1RETt9o7trWKrIGil5tvxf+4T56A
M28yJuv/rSZPwg5UaQ8pfUiegozCHsUvtB6TNfHO59ncE0uekKfjTPWVljWZ
z8hauJXvF/PfznryLLzfq1ISb9tI1kZrpfuQX+9ekecgxKWhuXByE3kuUp+6
HJ73mFkHbeGen+2ymedBtewgf+nB1+T52LNRffnJnez3FsBbt7CuXpfltxAt
y5e9Fe58SdbF0v/8U7/z6siLoO31ufZY43PyYmSkdGi9WMquZwnW6M6K1M1+
StbD587KTToa7PqXImz1l5jEYzXkZeB+697L0XtE1ofy9BExoU0PyIDiXJ0f
NzKovDnA9aU+jf4P79Hx5VhzJ9MmNY3qi7Mcd18l9SoJrKTjK+DwaNmOkXFU
v5wVqO/pH7vl/E06bgA3T7MvlwbQ/cMxQJPy3qe+MWV0fCUmKuTy0kdfp+Mr
kdl3679590vp+CpclwzYUK93lY6vwtSF0lnPBlym46uxXzPoSaXqRTq+Gnf9
Y8yX6p+n42vg+fvgtrr0c3R8DaYpr2nzG1pMxw1Rt+1zQM+zZ+i4IXZd+mOZ
6VtEx41w4YlnA2/zaTpuhFmaQ4M3rT9Fx9dis0qgdbRlIR1fC03HLot3fQvo
+DpMVnduWxqRR8fXge/7xGfdmFw6vh6fQ88MPvk8h46vB/fTQFsUn6DjxlBR
vFMyPy+bjhsjekjPwZ2XjtPxDXA8frffzKZjdHwD3qx0bzs3hqywESeSc57n
uByl4xsxJuHD3jUVR+i4CXrvUtz5cx4ZJjDqTEvfVHCY/t4E7Xr5xX0WkEtN
kBBw/9iHW4covSl0svtkf7ElwxR46yXV6EvmmCKiTClaVnyQ0puCG5tkJ9pD
VtiEDQLM2jGVjE0Ys39wD4O2LEq/CdZ3pqecLySXbkJY5+Bj80PJCpthtK33
hyUbyNiMzXeNciwmsvSb4Zg0kGvfdYDSb0b98IWRNwrJCmboabnitY47GWbQ
2qOyerQOmWOGhMZb9R2/91N6M3z0na2x5jZZYQtUYp7vOyIjYwuMTZJe57iT
OVswR/VbYg9Dln4L3mVyjbdPZOm3InfQvsl7erD0W3Gqf7m481Umpd+KsLr1
P2+Uk0u3YrtMq+rwCbLCNlim+ky145GxDQmOGloNASz9NiybsDPmiw1Lvw21
9Vbfgjew9Oa4qLCo0WYJS28OBbHwT/I0lt4c+7Knv29RY+nNobukq9myL0u/
HV2DawIafmVQ+u0IdL+/YtdHMmc7XLXfFNxtJJduR+gyzs0Jj8kKO6D4zalj
cyVLvwMtsoJX5qUs/Q680Nc2nH6Opd+B6xmm96/ls/Q78ebosfcjj7P0OxG4
ddz1mVks/U7kJAcN+Cll6XdCs6hAOUDI0ltgkKy//fFUlt4Ctvmlo6ITWXoL
GDbkh/TnsvQWKOqcobYkhqW3hJKGNE81iqW3xMDJ6VMSIlh6S5RVH0s+ymHp
LZE0bkIfa2aFXSjYu/rOBWbsgsYzk/Gn/pd+FxYpBu5cwX6/dBdcZ5595Pq/
/Hej34CZbbPY+WE3pEkr/8b+7/x3Y/Laaf7e7PpKd0PTsrrkq4Clt4Jw52bN
Xqx8NKxQcSRz+uH97PessDHUYtKDI2QrK/RSmRKUeJL9vhWiTlfxqk+Ts6wQ
aPn47v4LLD8rTK5QknRcJzdaYYy3mnn1HZa/NV4vMA3UZveDhjVyRm11GdLA
8rdGdvPLTP82lr81XsT7Je7sYPlbI2nFgsLL/1j+1qhPD0rN6M/uV2v5+4JX
9GMEudEaeLU1v3ISu39tYNldO3LEXLKGDW61PJE812fPgw1gtOrpEPa8WNlg
YNvlhGsW7PmwwZWm116v95CzbPB5xpntvsEsfxvocp4OCUxk+dvgi/ojzod9
LH9baPCWJN7LZfnbYo7WY82xV1j+tnDKPbHj+X2Wvy1W5Aye2fM1y///0p8/
J+xg+dtC53LyGH4f1t7Y4pvgVNKPUeRGW4yZtXtZ+SzW/tjByuuG388VZA07
aK1+GS3axtojO3zjL7sudiVb2aG4sjHtXwRr3+Tp897ZVYnJWXaofeBW+CeP
5W+Hz6end6aVs/ztkF6+vDzxBcvfHo/G/zjZ8pXlb49dFrvXHevH2mN7bH07
zvDWBLKVPUoSR5qsXcLaZ3sk2Y0fOduMnGWPG4eKrHz3svbeHllpx9+rx5Eb
7WE+rjlm8kHW/jsgdNKwnqkXyRoOsKq0XrT9CcvfAWrTJvWP/sLyd8BobdP8
uP/Y+8UBd7PtkkKHkrPk6Xkd4sMT2PvKAYPvnL/zU5vc6IDP+i8ncfTZ+8sR
VaovDy1g7y8NR3x75bxmjCV7nznCdsHa4fNcyVaOuNdkMCw4mOXvCIUDf9Z9
TWD5O2LhobdlUhnL3xEFTmO5njksf0dMCrc8GniB5e+EbzYN005XsvydYL3H
ePLoFyx/J2wpzsk+857l74Q9g5ffDOtm+TthV30KP1CF3t9ZTphUPX/c0bHs
fe+EV/nvontokxudEFVj/yxlOXv/O6OJZzbPeDNZwxn3Nq7L17Nn/QFnVIaX
WFn6k62coTu71r4gnsxxxsSt2bVzM1j+cpfX17Tks/ydMTf7md+9ayx/Z0zO
OfDibQ3L3wWzk6s05rSy/F3w2TTZLu83y98FLtXpN3YOpP6MlQsmXB9jqzeR
9W9c0KBz32LjQnKWC2q23X4oXEcudcHFU8I3ylbkRheoisYUn/Nh/ac9EH3O
sxfFkzX2oGB7y7Bj+1l/ag/+OFxubSti+e+B2hwPBevbLP89+DkiLrx/A8t/
D3xP3+G2dbD896Ds3Ur93/2o/9a4B5+Wz72J8WQFV4xe2Gf5hYVkDVcMuefw
yHEDGa7oOXfcQSN7spUrHnlMvrc7hPUPXXFoPT8sR0DOcsXecdIn006y/qIr
dKuTf9VfZ/m7YszjJwNuPWf570Xj8k8L33xl+e/F1wYLmW5/1h/dC/6G4h3X
JpKt9sJhmigzXI/M2YtbOuI47y3krL1Qidu+NNONXLoXz8t8mrrjyI178dIg
cH/aQdb/dUPJuvdpuy6SNdxgq6f/xuoxy98NK68/Pi/9zPJ3w5meXfP69mP9
aTdU3XgUVDCJnOWGugz/giR9cqkbvvS+/yNrB7nRDdzo/T4ffMkK7rAtD1/v
zidruCPtcP3BaXlkuENzVbt49G2ylTtOqp03XfWG5e+O4Lq/X471oP5+ljsi
pEb7MJZc6o4A6Uv3wUvIje44vOUSX92cjQ880L47fcJuX7KqBzatfGDwPI2s
4YGtdmHDUwrJ2h6wuLPtYtA9MjwwvvvipqwPZBMPTDp3ovtvPxqfWHlAfOFi
bfo0socHeEGT/nMyJHPkv/foxGEvRzLPA9lFWfeLY8lZHhCVth6fd4xc6IEV
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
Nd64adxysgYfRuF7v/bfQp7ER86OXmu+OZE1+WjMNAh7HELW4qPHM4d5p3lk
bT4Srh3rHX+EPI+P28eWxG8vIevycfjF9p0Tq8h6fDwZNnvI2wYy+Jh3vWHN
wW/klXwM2RidataH9q8w5OOey5Twf6PI6/mIXnwl5+AssgkfitGzjy5eQTaT
l9/91QqVW8jmfOzlFK/f6Ey24KO7YcioyhCyFR/5k2t+LOKR7eTl5Wnksf8w
2YmPmVcPDO4sJrvykfTgmZNBJdlDXn/D7nVH1pN9+HgQPnHb2XZyAB/jLTf8
e9brFj3/fCyZnBzcPpzM4WPk8jcmXdPI0XxY3BvX64semctHq8XNoc83kpPk
90POuD5FNmQeH47btHYE+5KFfKhmHk6ayyVL+Pjy5/PoWhk5gw+FrhnRe/LI
WXxsOjsWH66Sj8jL84ru7e0Pydl8KOXyxEXN5Fx5fTY2jP/5g1wov38QXj+t
L+0/coaPr+22y1aNJpfwsVBD/dzameRLfEiq75Qs0ieX8iEqmFY0yJRczse2
H8FDH9qQK/iYvlVkFORDruJD/cuDy31jydV8FNkOfREuJtfwMaP+et+6bHIt
H+fWlheOuUCu42O4OHT+yjvkRj5c/t37vaGO3MzHGc4gh6Ufya181O8a+njA
X/IHPrJvjsq+PuA2Pf98+PKe6ZmPI3fwcVLD9/O92eQuefm5ho+aAnK3/H4f
/2O4pQlZIQ07fkLP24rcOw0LdbQbHT3ISml4tfj31sUcsnIapkbof2tLJaum
oTHqn6LfAfLQNKwdcOhlfT5ZTf57+V8qNa6Q1dOwyUF9xLK7ZI005GQWqcyv
I09Kg45pbmfv92TNNJjH71bP+0nWSsNStcRrWkq0/4y2PP3BTTOihpPnpSG3
AxkFk8i6abhyxmjLqblkvTTE7bgjigMZaZAk8/fN2UBemYZRdU8P5e8kG6Zh
0aP1b/84kdenQS902IGxfmSTNPRd86C3ahTZLA1Xt+w3fpBKNk/DyrVj860z
yBZpGB4cvL00m2yVhqLjbhEfzpDt0rBPc9XWN6VkpzSYHGz5L6eK7JqGiwtf
lS6qJXuk4eYWx0JBE9knDV2d1grnPpED0vCE5/P80E9ySBqWcfo4bu19h57/
NHyYsulu9QBydBpaJPY6g0aSuWnI+7rwyvCJ5CR5+W8t5DdqkXny8hMUVe9d
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
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw8nXlczN37/0MIuWXPnj17CNnyQqiEKCQhFEWrdm3TPu1TTc3U5CN7SCIh
QgghRKEISciSQsj+nd/j9365/7kfz/vdmWuueZ3rvM+5znXOPXCD8zLblioq
Kq3VVFT+37///z+Ns6IaHzt1OlAzS/gPyDUNSGuufS6wGtbXlg1x683nGuhf
5WupWvRC4G6IifL6GiSqFVgTjbGuhulpfN4Xjmd1PUyesr0WDrZ+oZ66nn8/
CGZHe278WPVK4CGwzBuzT2sJ/34Yhry4N3X+LbI23nrsz1+35InAI6He28P0
gl61wKMR/7dX3LwlzwQeiwDNV/MP3eDf68DHxGyttGeVwOOx+r9zQSe9Hgs8
AectTnm3rqoUeCJst32orL/Mv9eFvHn8nMA7/LxJiJpm/G79lacCT8bqkguz
XAbT/hQkiR5IWqTzuR6aumkqei0kT0XVsD0d7RzJ0/Ahz0jLWE6ejoVfNi+p
3EyegdTZy/qbziTPxNDI/5Uc7UbWx91IebeLdfx+s9A2eIPUo4gMeItGbdqz
T2AR8D1Fujckis9n40mE1rS/rnw+G1dbb48Ur+bzOehivz748Xw+n4MrG5rq
b0/k87n4OX/qTP1BfD4Xp9KSO43vxOcGGLRqYPqZ78LvKTJAVo6J7t+X/H3n
YfzYPma3y/h8HkZ7Vhz5fYnP5+OXRaiRXS6fz4fVzUne9Xv5fAGi3f52cpHx
+QJIoxrr7kfxuSGGBm6JbxvI54ao15rRpdGNz42w/vy6R372fG6E64vvBO9Y
x+fGqOiOI3NX8Lkxfrm1L9+wiM8X4mNNee9GAz5fiKDCywNqZvC5CXze7byt
M4nPTTDn/NfJ98fw+SIUDyyxvT6MzxfB/OqAuWpafL4YngMN3GJ78flifJ9e
MX15Vz5fgofreztYdeTzJdA8P9Mwoy2fm+Jz5Fav/i0Fhinyovs1lf8S+r/I
FF/KIv5c/CZwofLvb41beuAT42MpjjjsqjhbLzCWYrHJOt0Ob9h+KeJ7fwtM
qmX7pVg1rf3fZdVsvwyvD77uYVjF9svQ4ed/Rq4VbL8MF/aLxt4qZ/tlGLXg
spvlXbY3Q9ifiPs9b7O9GXbufNRP9Sbbm8FsbMnA/sVsb4ZvXcQXbK6wvTnc
P16penCJ7c0xNiza1q2Q7c3xcuLEhVPPs705YmceCRlewPbLkRv1SW3mGbZf
jgX9d1V4n2b75ajue/Zz5Um2V7Ju8Np1eWy/Ap+a7bXUTrD9Crxy6WtQdpzt
V8D4eszDC8fYfgXmKLq9L8lh+5XYdVOe8v0o26/Ec/fcBgOyaCU08qu7Zmez
/UrcyMsarEtWscCsoc/nPjjC9hYwDjy2I4kssoDN4dq1W8mFFsiJ/JlvRVZZ
hQ/XzF5t+td+FXx3zNeK/Nde+XzU3IOX/rVfhdtWtde6/LNvCcsxLYu9ybDE
ka3nf3wmiyyh/z3mZAj9KbSEX+6UlcP/+b8a88c8nfmUjNUwdvhYeoC/l2g1
3r4Y5RfC37NwNe68DctxyWV7K5x7P6zW6d/vb4WaNLNEf+ojsoLqulXT0//p
Z4Wf5l42N06x/RqUdbwia5vP9muQubanjRn7g2gNWvi+sDpylu3XwDRVq3f3
c2y/Fq2ttPWi2L+wFl2mpqxU/9f/1iKk27B+iotsvxYzZieOn3yZ7dehoYfr
7CdFbL8OUUZdfsdfZft1WDDSSnPxv/6v5OZM45432N4aKRv2Ln7HeNGyxhzL
ETXXb/HzrKGxVOvq8TsCW1vj2q815/cx/kTW8MwLTthdJnCGNdSCH6kdvE97
1jB4MbPx9EOBq62V+n7ufq+S9tfj07hE46bHtL8efr1eWg94SvvrcXLQnTFm
HC+s16NTiI44vob216Pj7RLDco4vGetRqDbBeOBr2l+PprwMO0+OR9Xr0bqy
KajsHe1vQKsP8R56H2h/AzLK5w7Z10j7G+BzSN+l12fa3wBvybcZyV9ofwOc
VvR11mym/Q2401b0fvcP2t+Ab8vap+v+pv0N+FB0wPbWX9rfiDf3pk1w5Pir
tREOh2LfdW3N8XgjOl408LvI8dp6I4z63rvj0Z7j+UboGdvf0+H4nrERvq2a
XD51ErhwIxY6t00900Xg6o0oa/FIL7I7x38bDPwwddZaTdq3QePgUMXUPrRv
g1v3FDP79Kd9G4i21nRvNZD2bbBDU6f7x8G0b4OuB0tGv+T7qlDZvtZu8bMR
tG+DY/M1HZ6Npn1byLsv9H45jvZtUfmg2PbjBNq3RXa3w8NbTaZ9Wyx2tzjW
eyrt26Kqu+jrFL5PM2zx37Tu7yxn0b4t3EcsDAmZQ/u2mG6RkHtsHu1vwvPL
8S4vDWl/E16HDT7a34T2N+GyfLXNmiW0vwnbb3qE7VpG+5vwsfpx23fLaX8T
2ldoPZ+6ivY3YdmqP23irGh/ExoMlzm//jd/2IzWPn015m+k/c1Y6Ov37OAm
2t+MWfFHy7psof3NCD383wuRI+1vRs8MddUmF9rfjH6mumMc3Gl/M+a2GL78
jRftb8bAwrRtW31p3w6dH1r4fQqgfTs4r5xhHxBM+3ZAro5Op3Dat8O+TTrF
eyNp3w5dc+Zqz4qlfTt0WhG44KmE9u3gur1Vv2Ap7dthkM+PnSPltG+Pq/dk
1x4qaN8ehoN6RkfupH17TO579vmsPbRvjynykks/9tO+PQz2pA49c4j27ZGb
5t4iIJv27SFakrto/nHat8e08dktup6k/S3YKLrQrTaf9regq3hOQP452t+C
N08SJyVdpP0tOJrZYYLrFdrfgsH1bbaaXaf9LVhbXfVw6i3a3wINvHAecpf2
t6BFjsPIrvdpfytS+xb/aV1J+1sRMwi1v6pofyvm+fa+962a9rci0FF24Wst
7W/F+Tkf93yvo/2tOFC42lOlnva3Iml/q7EdPtL+Vrwc+9+lXl9o3wFTpPIR
ozn/1nLAmLRTq+f8pn0HHOnltcSqhTBft3ZApKTyp09rzucdsPLEw5WKdgJn
OMBBzdqysKPAhQ747bniR11ngasdUPk+aWz3Hpz/O8K4+WW9QW+BtRyxZct/
47z7CwxH6P68VJfN9YO1I9Qaszq/GUb7jthbZJcxbBTtO8LnQVj05nG074i+
XcKvH+Z6pNoRXfc8Mf08hfadkLfvU0/9GbTvhAeP+naPAe07IXXNPv0nBrTv
hFGrr0aNN6J9J/QrOdQgXkT7Tggb57TxxVLad4KaYd8qrKB9J4x8lLNklyXt
O8PQoecJ1XW074wVaqP+btlI+87w+ZM3rHwz7TvjzkFXLTjQvjNyJrWpyXah
fWe8sGm/XsuD9p1xY1WrJKkP7Tvj8jobxw4BtO+CQ3lxL0ODBdZwwa5VdxtV
Ivh9XJB13y40MFpgHRdIOgYmq0j4/Vzg33FUr1CpwKYu+Frpoto+ld/XBcaY
bZK4Q2AXF0zN9HnZdze/vwtWvXpRdHC/wBIXRHSa/EzvMP1R2jfpMuLGUYFz
XPDmaBvZmhP0zwUd2sf2+3xa4FIXtLrY/ljUOfrrgj/7S+cNuSRwowt63etd
euEq/XdFaw8NgzU36b8rNE9fTv7F9byWK1oljc/fUU7/XeF6YPZuVNJ/Vzzu
c9Xg5RP67wpzL19pdA39d0WWv1rYxNf03xUO6n/aPXlH/13x/tuDHuJG+u+K
xDff/qf7hf67Yoz+0eSa7/TfFb9qdT8k/KH/rlg+65BiTithvV/qiiMqvROa
2gpc7QrDTt4XD6gL3OiKDba7Blh1Zn5gG3I/rf5f5x4Ca2zD14AVOsW9Bdba
Bt0Y7eLAAQLrbMP4acss9IYIjG3QGjmj7KO2wKbbULZhyqisMQJbb4PnJP9l
mycI7LINZweNmz54isCibThWuOLhs+kCS7ZBfddLzR0QOGMbjk/J+2g5T+Cc
bVh5Kdysl7HAhdugodNKp2Ix/d+GzHZnvWVm9F/5+ZbDBqy0oP/bkJ22t1vP
NfTfDVoyP+OH6+m/G9qtrTom20T/3VCjXTndYiv9d8NEQ+dKTRf674bqTsG+
le703w3XLz/ukuZD/92gGjZGYhlA/93QA51qe4fQfzeMU/z98yiC/rvB/eXG
u2kx9N8NRW3ECy0T6L8bmpz/t6ZXCv13Q0/1wm8P0+i/G7pPeN8uZSf9d4Oa
TC3UbC/9d8OS2c+Xaxyk/+4w8tN2LjlC/93xssTzQsRx+u+O86+MJ885Rf/d
ob273eWfZ+m/O/Z9+m1+opD+uyP3qcXjrcx/Wbvjmtf4eYNu0H93OJeFBj28
Tf/dYdJ6cmB0Gf13R16v/8boV9B/d7h0LvBpqKL/7nj0pNxs53P6747da8sO
LnpF/91RvU5zy4+39N8dBqlvg/c10H93uGZ71ixuov8e+DvujufXZvrvgewd
78ek/6b/HsiyP/JlVkshf6fjgUu/7p993kZgeGD/WQ2noA4Cm3rAseOH7/01
BLb2QI+NtSZnugns4qEcD03NzXoJLFI+n+f++00/gSUeGDLVZ1LAIIEzPNBC
0+lNp+EC5yjt9Tdss3OUwIUeMHtU4z1KR+BSD9zWUxmbpytwtQdepxp2mTFV
4EYPGNQYdymcyXykJ6rj/XrPniOwhicy7kzteWG+wFqeuC690jR1If33hOSY
0c5jzKfCEzEfH7QcZk7/PeE0ybaDzIL+e2KPpGyv6hr674lAu7ozTuvpvye6
JC+det+W/nsiPmRvB70t9N8TnyzX9pM50X9PPBlYu+rTNvrvifuvgrOMvOi/
JxreOKvs8KX/nigrLsb7QPrvifVZSRZTQum/F/Z6X5gQIKb/XhD/GXymMIb+
eyn7R3DlHwn990LbFaG+esn03wttjM5HOabSfy84HD7ycccO+u+FLcPOpF3f
Rf+9sObgJJfGffTfCwsOW1l1OUT/vVDmtMJoXDb990Ino0kDFxyn/14wevv1
1qqT9N8Ljw+GTt18hv57IbI8d5HzefrvhaDf85pcL9F/L/Rf9qaH81X67w1F
o97OTTfovzfcZp/ztLhN/73x3ex9uME9+u+NrJkj80c+oP/eKHve3LL1I/rv
jd3TjSxzn9B/b5iXnfJZ/Zz+e2P41VTj37X03xvrJk4+Ka+j/95Yff7qvjHv
6b83rLp5tyxooP/eOO2xJW/uZ/qvbD/3+IGir/TfG0fiLS7p/6D/3jiXu/rD
sd/03xtDm1a2j1fh/oAPtnwcED+7pcAaPvA6+9WnsZXAWj641c/ogqK1wDo+
8OstMpvbVmD4YODsFqNeqwls6oOOauOmRbQX2NoHecPtPQarC+ziA5Nm9btn
Owos8kHuXY/Zpp0Elvhgv+PvM9UaAmf4wMLk13jHLgLnKL9vnxtpX7oKXOiD
7gPOv/HpLnCpD4b8b1zXHz0ErvZBwxLPDp6aAjf6YPqtt1fre9H/7TBq9Xrq
+j70fzvSD161KO1L/7fD8szrntP70//tUK8/tHXXAPq/HXq67oatBtL/7RDN
PLzbehD9347NTWed8gfT/+140rbnro5D6f92bNk2YeyaYfR/O/q2jmqfOZz+
b8e8LztHftCm/9tR5fA7eNxI+r8dN/pNVHMYRf+3o+FhZfae0fR/O1oNStr6
YAz93w7T++0mqo6j/75YVPDp+2gd+u+L5xM75pmOp/++eHVn8CrnCfTfFxNa
dnwsnkj/fZFddHjcDl3674vl8xsXZk2i/77or6gYcnIy/fdFhpPr0TNT6L8v
nuQ/qM7nfpXEF+d8dbNzp9J/5d+7X1PPnEb/fbG79snHlOn03xcNJhXLRDPo
vy8qJo4cajOT/vui7J3l2jn69N8X69a0aeo9i/77QVb25HE9WcMPF29mdjgL
+u+H2GvzfIJn038/jBh0uLfBHPrvh5Z1r1/+JZv6YcKxIXfz5tJ/P5QE7L1n
a0D//ZCcdqW60zz674dNPi0/5ZIlfhiZ8enX0vn03w+roxc2vyHn+KFR/vyR
7wL674ejTZmKtob03w8vwk+OjyVX+8HuJaTqRvTfD+Xzd50JI6v4452XeXoz
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
A/r/tmD9iWkUpq9pSirsx/l/FNpkDI8eN5Dz/yjELBz9YB/n23ZK7uBtN5jz
cZcojB0YPClzFOf/UQhZcllHdxzn/1HofS1v0TXWp4ijYKZxP3D9ZM7/o3Cy
aceZltM4/4+C9ea4j4d43iYjCn0chmpazub8Pwqt/9QM1PhXrxKFi00LWt7i
+uR0FCa8uZ8lMeH8PwpavTp1X23K+X8UBhl7jh1tzvl/FA4cjnvfivUrFVFY
e/rxnJrVnP9H4U6P50OureP8X/n5PoPCj2/k/F9p32+w5V6eF2qOwlTxZmk6
12sq0Xh80FVbwfWcWjSuuBe1y3Cj/tE4/eT5qMNe1D8adj0XBhf4Uv9oDHcS
qZQHUv9oaA1ukfaR9S06yucLFs7pLqb+0fgoffxen/UtiIbKwjGxThLqH42u
rc/02Mv1rWk0hiV/93vG9a9FNGZVrc/V4vrYOhq7dm86snkX9Y/GO2eftSf2
Uf9o7N/Q7kybQ9Q/GtltQ3LXZlP/aCwZb6pfwHoXcTTa3364aADrXSTRmHDB
/34E613k0Rh6dHfxlwvUPxper/f0ti+i/tG4Nezx+efMJ+REI8Tzf5nrmG84
HY1RKrhZw3xEofL71nTsvZX5iuJoKNSWiZsfUf9onPmxtF30M+ofjaWnFksG
1VL/aFwIC9W4UEf9ozH+5kh/63rqH42Fz9yut/lE/aOxuTqm7thX6h+DDxE7
bq3/Sf1jsO/Pta09VJj/iUFmjvbJO6rM/8QgdeCDnbHtmP+Jgaywuo/pf8z/
xGBEwbJ+Pbsy/xcD3QfjZDU9mf+LwfkpHn7H+zL/F4Myg16F4QOZ/4vBVJcO
y9cNY/4vBjM76Y6dwXoXixhYjXHX78d6F+sY/Ge9z7vlJOb/YrAiLfXOO9a7
uMQgRKXP5Ep95v9icO/su//dmMv8Xwy63r7y64Ih838xWPDSck7+Iub/YmA2
znzDyWXM/8UgdsyyJadWMv8XA2/x+59nrZj/i8GSF8csi1jfkhODgqPD15Zu
Yv4vBk4tbjQ/28r8Xwxuru/Q77ML838xiN5jfq6dJ/N/MVhzUrVkMOtZKmKw
Y7vL9Nki5v9i0Cyt+b0+jPm/GKjOUbQOZz61MQZ/R5QaHGG+tTkGvrpZRx4y
H6sSi6erl0xoncb8XyymBd0umrST+sfixayJK+33Uv9Y/Cz0fbzzIPWPxYL4
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
5mocxfOjWXJcmu3c6QTXkzlybK1fP+mJncAn5AiQrtzTmuvP03KsvLAGY1jf
XCDHqdZBn824Xi2Uo6DVrT0+HgIXyfHC1ETvf1zfFiv7w3Y1+UXWO5fIcflv
u0MveJ9fqfL3WmaxXDWY6385siu+iwaHcf0vh/PHz11ns/65So57v42/WEVz
/S+Hz9aW6l5xXP/LkXyp76x43vdXJ8fzkwqPfayHfi+HeLooJV/G9b8cM9Ju
iG9yfd8kh1Hs9omPWR/dLMcjq3j/ugyu/5Xx+7ft4s97uP5PxfyZL6J/8jyy
aioOPBzQvwXrpdVSkXa84F0r3g+ongpJy/zHrXi+WSMVc/273VfJ5fo/FTdj
75z/wfPQmqlYHvMu8ONprv9TMfb7lr+1rKfWSsXms0uH3Of56iGpaLlx3/2L
F7n+T4XcyfHHIdZXj07FSWmuj+Qa4z8VZRqh07bxfkFdZfum+sGmrLfWS8UK
n1b9RpYy/lPRsOaRugrzMUhF+5kxj+7eZ/yn4lLDZMedvH/QUOl/46/Ddszn
mKRC/3LrgDFPGf+pOL0u4EY9z6Obp6Ln7lTvgy8Y/6m4d07ibM37Ca1SsS5v
T0qXN4z/VBy53+v+hXeM/1RUTJrTxe4D4z8V/ae7T+rA/JNDKi5raQw7+Jnx
nwqT0MCbs1nP7Z6K318mdbzP8/beqZDFHru3gfXdfko9QnxbveP5fJGy/S3t
CEfWe4emQu2i5by3PM8vTsXd/AtD17dm/i8Vmpe7atzj+X9JKkwXDHw/oz3z
f6lwunxx1y7eFyBXft+Ap5oqnZj/S8XqBa5TLXi/QEYqfkwIe3eQ9eJ7U+Fh
M6Xnl+7M/6Wi4P6pvVOZz8tS6jHM2M+rN/N/qchynh+ezXryE0r7vXsfftqf
+T/l550zLGvL+vIC5d//dng9gv8/lsJU1LtNLTXgfQlFqbCW+Xha8L7F4lQk
ZnW5bDNC4BLl75OvutOe9eilqdjnu/XzpjEClyv7q33gQSvez1CRilY5KYeM
xwtcpfz9pw2r1pnI+u1UtDl3aWIn1q/XpmLTlYHxLyeznjsV4bd6V+UyH/o+
FWOWZ6pun8b67lS0+1v3acoMgZtSkXlcK6Ge90k0p+LxpfzrabME/pWKHM35
EbNms/47DcUbRCce8z4K1TSMN1o0w9mA9eBpOLGvoN2PeQKrp2FlYXs1P95n
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
5mtJjFyaW/T9FYMDJWJ7pm0JZB5XkETw7F0pdy4ZHCwxxPFQVvpFg0Mk/K97
3PNjnleoxOEJk2c9Z15tuETk/MsdT1Ya/IGE3dSPLn3BPLBIiWiHiTcWnTM4
SiImabFdRIXBMfrfb+SlvV1ucKzEz4+jXQOZLxYnsbjmgvnbZw1eLHEi7YFN
+BmDl+nj6RIWGl9q8HKJx0VrTm9jXtlKiRV398f/VmJwiv59a06+8/SUwakS
Y1pWT/Mlp0tst43enFps8GYJv4WHmq8zD22b/nwzktb7kXdKfBW09a1viwzW
JKoLv3QZSM6S8M1/4S6Zp5wt8bDsacQwcq5+/8X2XUeY95sncfnSN2bh5AMS
vyyvTG5nPtshiaCmjJ4/kAskPhvtcSCWfFSi6UzVrFHk4xI53aJtO5GLJBJ7
Hqy4etzgEombJeEbjpHP6vPbptJ/H/mchFv+woZscpXErdkRW3PI1RIth3c4
HCTX6OMNemXHKfJNifSERfV3ybUSU///0TBrjueexL5Zn3gGkOsk1uVW9llJ
rpcYtPXKyWKySWJEgfLuw/vTIrHA3DEunvxMImk9Ii+8zE9W+Pu9IrMA3m8z
hfMe06cfIVsqjN6dNtWHz6ubwor5lXUnydYKHyZsGjSDz9tWYdyBLnXN5L4K
oSnR/orzxV5hZHHxgBDOJweF0qkuiV05/5wUBv+a+G452Vmho1XGlkzO1xEK
/SZ4+i3ifHZX+N2u15T3ON/HKIzfV1boQz14KXxd/3CpG/Xiq9A76sGq4dQT
FJ7KUedGUm+BCsduvj5zAvUYpNCmNdlNo16D9c+bmSyWUs8h+vXXBdrtot5D
FUpmmk2qqqL+Fd42+W+y5nrxgULBik63w7ieRCqMCPfyzq6m/hX+t7JsUxvX
nxiF963UlZlXqX/9+qtW2Jzk+hWnMGnOqJFjr1P/CnPnLXE+yPVvmcKZlrYm
j1vUv0J55sebfuP6uVLhzr8i66ZzfU3R/9+geLMnXH9T9ft7+PLuDK7P6Qph
hza9+m+u35sV5of2737pAfWvMLFh2MY1XP93KviviUjz5f6gKcSaglvbHlH/
CmPf21n1O/MJsxVWOZ2x2faY+lfomb3wu1jmFeYp7G41/+LdZupfYV1Cj1JP
5hceUoi82j7BuY36168XF1znyP3wqD6/p809PZj75XH9+t/mlLlyPy1SqP8h
ud6P+22JQmaPd1xmMO/wrILf7XmfLrfg/q/wZYv9kRzmH1YpJNWVdrj8Cvd/
hb2Tjni/1oP7v8LQ/DFzwqy5/+vjaU7+j+L5oVYf77jrgQ08X9xTKOz0uWkS
zx91CosiSz/J4/mkXmFea+muXjy/mPT5OKho41rmJ7boz+Px3aHtDjz/K8SF
zY1KHszzfxZCes8eb8E8xU5Z+v5itvcLZ/4eyMLnuYnSlfmKXbIwv/mm7Vme
xyyz4J0/rfMid4O7ZsHpVHPkwNHX/P4Bztndvg==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 2053.}, {0., 2.654202669081343}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"<x>\"", "\"var r\"", "\"enclosure\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.958401136136962*^9, {3.958401854406398*^9, 3.958401885195663*^9}, {
   3.9584019517562513`*^9, 3.958401973928566*^9}, 3.958402027703156*^9},
 CellLabel->
  "Out[2214]=",ExpressionUUID->"8b8d75a3-c022-4f4e-8a15-cad527939ab6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dt", ",", "T", ",", "n"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "2000", ",", "20"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"J", ",", "k", ",", "\[Alpha]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "2"}], ",", "1.55"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"R", ",", "\[Omega]"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0.0025"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z0", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "L"}], ",", "L"}], "}"}], "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"znew", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results2", "=", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"Dynamic", "[", "results2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "NT"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Round", "[", 
      RowBox[{"T", "/", "dt"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scores", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"t", "<", "NT"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"zgoal", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", " ", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"zgoal", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Omega]", " ", "t"}], "]"}]}], ",", 
        RowBox[{"R", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zgoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"R", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "}"}]}], ";"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zGoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"\[Omega]", " ", "t"}]}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"zgoal", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"znew", "=", 
      RowBox[{"rk4", "[", 
       RowBox[{
       "z0", ",", "zgoal", ",", "rhs", ",", "dt", ",", "J", ",", "k", ",", 
        "\[Alpha]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z0", "=", "znew"}], ";", 
     RowBox[{"t", "++"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"scores", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"meanDistance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"radialVariance", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}], ",", 
         RowBox[{"occlusionScore", "[", 
          RowBox[{"znew", ",", "zgoal"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"results2", "=", 
      RowBox[{"plotResults", "[", 
       RowBox[{"znew", ",", 
        RowBox[{"L", "=", "15"}], ",", 
        RowBox[{"zGoal", "=", "zgoal"}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"scores", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<<x>\>\"", ",", "\"\<var r\>\"", ",", " ", "\"\<enclosure\>\""}], 
     "}"}]}]}], "]"}]}], "Input",ExpressionUUID->"fb962765-d9c9-402e-b32c-\
22acb2d2a4eb"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.6950439765866632`*^9, 
  3.695043977473637*^9}},ExpressionUUID->"ff805ab3-7106-49f3-93e0-\
80729a8a8d8a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rhs", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"z", ",", "_Real", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"zgoal", ",", "_Real", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"J", ",", "_Real"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"K", ",", "_Real"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "_Real"}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "i", ",", "j", ",", "xji", ",", "yji", ",", "thetaji", ",", 
           "distSq", ",", "xtemp", ",", "ytemp", ",", "xgoal", ",", "ygoal", 
           ",", "aGoal", ",", "xdistGoal", ",", "ydistGoal", ",", "distGoal", 
           ",", "thetatemp", ",", "xRepGoal", ",", "kGoal", ",", "goalRadius",
            ",", "yRepGoal", ",", "parabolicDistCutoff", ",", "dist", ",", 
           RowBox[{"vel", "=", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0.0", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "n"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", 
                RowBox[{"i", "+", "1"}]}], ",", 
               RowBox[{"j", "\[LessEqual]", "n"}], ",", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"xji", "=", 
                 RowBox[{
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "j"}], "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"yji", "=", 
                 RowBox[{
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "j"}], "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"thetaji", "=", 
                 RowBox[{
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "j"}], "]"}], "]"}], "-", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "i"}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"distSq", "=", 
                 RowBox[{
                  SuperscriptBox["xji", "2"], "+", 
                  SuperscriptBox["yji", "2"]}]}], ";", "\[IndentingNewLine]", 
                
                RowBox[{"dist", "=", 
                 SqrtBox["distSq"]}], ";", "\[IndentingNewLine]", 
                RowBox[{"xtemp", "=", 
                 RowBox[{"xji", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"J", " ", 
                    RowBox[{"Cos", "[", "thetaji", "]"}]}]}], "dist"], "-", 
                    " ", 
                    FractionBox["1", "distSq"]}], ")"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ytemp", "=", 
                 RowBox[{"yji", 
                  RowBox[{"(", 
                   RowBox[{
                    FractionBox[
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"J", " ", 
                    RowBox[{"Cos", "[", "thetaji", "]"}]}]}], "dist"], "-", 
                    FractionBox["1", "distSq"]}], ")"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"thetatemp", "=", 
                 RowBox[{"K", "*", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"thetaji", "-", "\[Alpha]"}], "]"}], " ", "/", 
                   "dist"}]}]}], ";", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"vel", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}], "+=", "xtemp"}], 
                ";", 
                RowBox[{
                 RowBox[{"vel", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}], "+=", 
                 RowBox[{"-", "xtemp"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"vel", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}], "+=", "ytemp"}], 
                ";", 
                RowBox[{
                 RowBox[{"vel", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "j"}], "]"}], "]"}], "+=", 
                 RowBox[{"-", "ytemp"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"vel", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "i"}], "]"}], "]"}], "+=", "thetatemp"}],
                 ";", 
                RowBox[{
                 RowBox[{"vel", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "j"}], "]"}], "]"}], "+=", 
                 RowBox[{"-", "thetatemp"}]}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Goal", " ", "term"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"kGoal", ",", "aGoal", ",", "goalRadius"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{"2", ",", "10", ",", "0.2"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xgoal", ",", "ygoal"}], "}"}], "=", "zgoal"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xdistGoal", ",", "ydistGoal"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xgoal", "-", 
                 RowBox[{"z", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
                RowBox[{"ygoal", "-", 
                 RowBox[{"z", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"distGoal", "=", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["xdistGoal", "2"], "+", 
                SuperscriptBox["ydistGoal", "2"]}]]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xRepGoal", ",", "yRepGoal"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"distGoal", "<", "goalRadius"}], ",", 
                  FractionBox["xdistGoal", 
                   SuperscriptBox["distGoal", "2"]], ",", "0"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"distGoal", "<", "goalRadius"}], ",", 
                  FractionBox["ydistGoal", 
                   SuperscriptBox["distGoal", "2"]], ",", "0"}], "]"}]}], 
               "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xRepGoal", ",", "yRepGoal"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                FractionBox["xdistGoal", 
                 SuperscriptBox["distGoal", "2"]], ",", 
                FractionBox["ydistGoal", 
                 SuperscriptBox["distGoal", "2"]]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"vel", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "i"}], "]"}], "]"}], "+=", " ", 
              RowBox[{
               RowBox[{"kGoal", " ", "xdistGoal"}], "-", 
               RowBox[{"aGoal", " ", "xRepGoal"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"vel", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "i"}], "]"}], "]"}], "+=", " ", 
              RowBox[{
               RowBox[{"kGoal", " ", "ydistGoal"}], "-", 
               RowBox[{"aGoal", " ", "yRepGoal"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"vel", "/", 
           RowBox[{"N", "[", "n", "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"RuntimeAttributes", "\[Rule]", "Listable"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Parallelization", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rhsNavigate", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"z", ",", "_Real", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"zGoal", ",", "_Real", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"J", ",", "_Real"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"K", ",", "_Real"}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "i", ",", "j", ",", "xji", ",", "yji", ",", "thetaji", ",", 
           "inverseDistSq", ",", "\[Alpha]1", ",", "\[Alpha]", ",", "xGoal", 
           ",", "yGoal", ",", "kGoal", ",", "\[IndentingNewLine]", "distSq", 
           ",", "dist", ",", "xtemp", ",", "ytemp", ",", "a", ",", 
           "thetatemp", ",", "xgoal", ",", "ygoal", ",", "xdistGoal", ",", 
           "xRepGoal", ",", "yRepGoal", ",", "distGoal", ",", "ydistGoal", 
           ",", "goalRadius", ",", 
           RowBox[{"vel", "=", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0.0", ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "n"}], "}"}]}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", "\[Alpha]1"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1.55"}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"goalRadius", "=", "1.0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"kGoal", "=", "0"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "n"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "\[LessEqual]", "n"}], ",", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"i", "\[NotEqual]", "j"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"xji", "=", 
                    RowBox[{
                    RowBox[{"z", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "j"}], "]"}], "]"}], "-", 
                    RowBox[{"z", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "i"}], "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"yji", "=", 
                    RowBox[{
                    RowBox[{"z", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "j"}], "]"}], "]"}], "-", 
                    RowBox[{"z", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"thetaji", "=", 
                    RowBox[{
                    RowBox[{"z", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "j"}], "]"}], "]"}], "-", 
                    RowBox[{"z", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "i"}], "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"distSq", "=", 
                    RowBox[{
                    SuperscriptBox["xji", "2"], "+", 
                    SuperscriptBox["yji", "2"]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"inverseDistSq", "=", 
                    RowBox[{"1", "/", "distSq"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"dist", "=", 
                    SqrtBox["distSq"]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"xtemp", "=", 
                    RowBox[{"xji", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"J", " ", 
                    RowBox[{"Cos", "[", "thetaji", "]"}]}]}], ")"}], "dist"], 
                    "-", " ", 
                    RowBox[{"6", "inverseDistSq"}]}], ")"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ytemp", "=", 
                    RowBox[{"yji", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"J", " ", 
                    RowBox[{"Cos", "[", "thetaji", "]"}]}]}], ")"}], "dist"], 
                    "-", " ", 
                    RowBox[{"6", " ", "inverseDistSq"}]}], ")"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"thetatemp", "=", 
                    RowBox[{"K", "*", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"thetaji", "-", "\[Alpha]1"}], "]"}], " ", "/", 
                    "dist"}]}]}], ";", " ", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"vel", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "i"}], "]"}], "]"}], "+=", "xtemp"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"vel", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "i"}], "]"}], "]"}], "+=", "ytemp"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"vel", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "i"}], "]"}], "]"}], "+=", 
                    "thetatemp"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Goal", " ", "term"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xgoal", ",", "ygoal"}], "}"}], "=", "zGoal"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xdistGoal", ",", "ydistGoal"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xgoal", "-", 
                 RowBox[{"z", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "i"}], "]"}], "]"}]}], ",", 
                RowBox[{"ygoal", "-", 
                 RowBox[{"z", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"distGoal", "=", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["xdistGoal", "2"], "+", 
                SuperscriptBox["ydistGoal", "2"]}]]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"xRepGoal", ",", "yRepGoal"}], "}"}], "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"distGoal", "<", "goalRadius"}], ",", 
                  FractionBox["xdistGoal", 
                   SuperscriptBox["distGoal", "4"]], ",", "0"}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"distGoal", "<", "goalRadius"}], ",", 
                  FractionBox["ydistGoal", 
                   SuperscriptBox["distGoal", "4"]], ",", "0"}], "]"}]}], 
               "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"vel", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "i"}], "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{"kGoal", " ", "xdistGoal"}], "-", 
               RowBox[{"a", " ", "xRepGoal"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"vel", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "i"}], "]"}], "]"}], "+=", 
              RowBox[{
               RowBox[{"kGoal", " ", "ydistGoal"}], "-", 
               RowBox[{"a", " ", "yRepGoal"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"vel", "/", 
           RowBox[{"N", "[", "n", "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"RuntimeAttributes", "\[Rule]", "Listable"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Parallelization", "\[Rule]", "True"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rk4", "[", 
      RowBox[{
      "z_", ",", "zGoal_", ",", "F_", ",", "dt_", ",", "J_", ",", "K_", ",", 
       "\[Alpha]_"}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "znew", ",", "n", ",", "i", ",", "j", ",", "k1", ",", "k2", ",", "k3",
          ",", "k4"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"znew", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Dimensions", "[", "z", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{
          RowBox[{"Dimensions", "[", "z", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"k1", "=", 
         RowBox[{"F", "[", 
          RowBox[{
          "z", ",", "zGoal", ",", "n", ",", "J", ",", "K", ",", "\[Alpha]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"k2", "=", 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"z", "+", 
            RowBox[{
             FractionBox["dt", "2"], "k1"}]}], ",", "zGoal", ",", "n", ",", 
           "J", ",", "K", ",", "\[Alpha]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"k3", "=", 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"z", "+", 
            RowBox[{
             FractionBox["dt", "2"], "k2"}]}], ",", "zGoal", ",", "n", ",", 
           "J", ",", "K", ",", "\[Alpha]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"k4", "=", 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"z", "+", 
            RowBox[{"dt", " ", "k3"}]}], ",", "zGoal", ",", "n", ",", "J", 
           ",", "K", ",", "\[Alpha]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"z", "+", 
          RowBox[{
           FractionBox["dt", "6"], 
           RowBox[{"(", 
            RowBox[{"k1", "+", 
             RowBox[{"2", "k2"}], "+", 
             RowBox[{"2", "k3"}], "+", "k4"}], ")"}]}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"plotResults", "[", 
      RowBox[{"z_", ",", 
       RowBox[{"L_", ":", "2"}], ",", 
       RowBox[{"zGoal_", ":", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "colors", ",", "p1", ",", "p2", ",", "p3", ",", "Z", ",", "Wp", ",", 
         "Wm", ",", "meanX", ",", "meanY", ",", "\[Phi]", ",", "\[Theta]"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"colors", "=", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<VisibleSpectrum\>\"", "]"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"750", "-", "380"}], ")"}], 
             FractionBox[
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"z", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "All"}], "]"}], "]"}], ",", 
                 RowBox[{"2", "\[Pi]"}]}], "]"}], "-", "1"}], 
              RowBox[{"2", "\[Pi]"}]]}], "+", "380"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p1", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "All"}], "]"}], "]"}], ",", 
                  RowBox[{"z", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "All"}], "]"}], "]"}]}], "}"}], 
                "\[Transpose]"}], ",", 
               RowBox[{"VertexColors", "\[Rule]", "colors"}]}], "]"}], ",", 
             "Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<X\>\"", ",", "25"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"zGoal", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"zGoal", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", "\"\<x\>\"", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "15"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"\[Phi]", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"z", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "All"}], "]"}], "]"}], ",", 
           RowBox[{"z", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "All"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Theta]", "=", 
         RowBox[{"z", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "All"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p2", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Phi]", "//", "mod"}], ",", 
              RowBox[{"\[Theta]", "//", "mod"}]}], "}"}], "\[Transpose]"}], 
           ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<\[Theta]\>\""}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", "15"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Z", ",", "Wp", ",", "Wm"}], "}"}], "=", 
         RowBox[{"findOrderPars", "[", "z", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"meanX", ",", "meanY"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"z", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "All"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Mean", "[", 
            RowBox[{"z", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "All"}], "]"}], "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"p3", "=", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "0.06", "]"}], ",", 
             "\[IndentingNewLine]", "Cyan", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Z", "//", "Re"}], ",", 
                RowBox[{"Z", "//", "Im"}]}], "}"}], "]"}], ",", "Black", ",", 
             
             RowBox[{"Text", "[", 
              RowBox[{"\"\<Z\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Z", "//", "Re"}], ",", 
                 RowBox[{"Z", "//", "Im"}]}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "Magenta", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Wp", "//", "Re"}], ",", 
                RowBox[{"Wp", "//", "Im"}]}], "}"}], "]"}], ",", "Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<W+\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Wp", "//", "Re"}], ",", 
                 RowBox[{"Wp", "//", "Im"}]}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "Pink", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Wm", "//", "Re"}], ",", 
                RowBox[{"Wm", "//", "Im"}]}], "}"}], "]"}], ",", "Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<W-\>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Wm", "//", "Re"}], ",", 
                 RowBox[{"Wm", "//", "Im"}]}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", "Blue", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{"meanX", ",", "meanY"}], "}"}], "]"}], ",", "Black", 
             ",", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<\[LeftAngleBracket]x\[RightAngleBracket]\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"meanX", ",", "meanY"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "L"}], ",", "L"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "L"}], ",", "L"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Re(Z)\>\"", ",", "\"\<Im(Z)\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "15"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], "}"}], "]"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"findOrderPars", "[", "z_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "Z", ",", "Wp", ",", "Wm", ",", "i", ",", "numOsc", ",", "\[Phi]", 
         ",", "\[Theta]"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Z", ",", "Wp", ",", "Wm"}], "}"}], "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"numOsc", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"z", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", "numOsc"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Phi]", ",", "\[Theta]"}], "}"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"z", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
                RowBox[{"z", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"z", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "i"}], "]"}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Z", "+=", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Wp", "+=", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", 
              RowBox[{"(", 
               RowBox[{"\[Phi]", "+", "\[Theta]"}], ")"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Wm", "+=", 
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", 
              RowBox[{"(", 
               RowBox[{"\[Phi]", "-", "\[Theta]"}], ")"}]}], "]"}]}], ";"}]}],
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Z", "/", "numOsc"}], ",", 
           RowBox[{"Wp", "/", "numOsc"}], ",", 
           RowBox[{"Wm", "/", "numOsc"}]}], "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"mod", "[", "\[Theta]_", "]"}], ":=", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "-", "\[Pi]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"meanDistance", "[", 
      RowBox[{"z_", ",", "zGoal_"}], "]"}], ":=", 
     RowBox[{"Mean", "[", 
      RowBox[{"Norm", "/@", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "2"}], "]"}], "]"}], "-", "zGoal"}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"radialVariance", "[", 
      RowBox[{"z_", ",", "zGoal_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "radii", "}"}], ",", 
       RowBox[{
        RowBox[{"radii", "=", 
         RowBox[{"Norm", "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"z", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "2"}], "]"}], "]"}], "-", "zGoal"}], 
           "]"}]}]}], ";", 
        RowBox[{"Variance", "[", "radii", "]"}]}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"collisionCount", "[", 
      RowBox[{"z_", ",", 
       RowBox[{"\[Epsilon]_", ":", "0.5"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"positions", ",", "n", ",", 
         RowBox[{"count", "=", "0"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"positions", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"z", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"extract", " ", "x"}], ",", "y"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "positions", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{"positions", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"positions", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "<", "\[Epsilon]"}], 
            ",", 
            RowBox[{"count", "++"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"i", "+", "1"}], ",", "n"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "count"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"occlusionScore", "[", 
      RowBox[{"z_", ",", "zGoal_", ",", 
       RowBox[{"agentRadius_", ":", "0.2"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "positions", ",", "relativeVecs", ",", "angles", ",", "deltas", ",", 
         "intervals", ",", "merged", ",", "totalAngle"}], "}"}], ",", 
       RowBox[{
        RowBox[{"positions", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"z", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "2"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"relativeVecs", "=", 
         RowBox[{"positions", "-", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"zGoal", ",", 
            RowBox[{"Length", "[", "positions", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"angles", "=", 
         RowBox[{"ArcTan", "@@@", "relativeVecs"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"deltas", "=", 
         RowBox[{"ArcSin", "[", 
          RowBox[{"Clip", "[", 
           RowBox[{
            RowBox[{"agentRadius", "/", 
             RowBox[{"Norm", "/@", "relativeVecs"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"intervals", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"angles", "-", "deltas"}], ",", 
            RowBox[{"angles", "+", "deltas"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"intervals", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "&"}], "/@", "intervals"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"intervals", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"int", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ">", 
                RowBox[{"int", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"int", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"int", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", "int", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"int", ",", "intervals"}], "}"}]}], "]"}], ",", "1"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"merged", "=", 
         RowBox[{"SortBy", "[", 
          RowBox[{"intervals", ",", "First"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"merged", "=", 
         RowBox[{"Fold", "[", 
          RowBox[{
           RowBox[{"Function", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"acc", ",", "next"}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", 
                 RowBox[{"Last", "[", "acc", "]"}], "]"}], "\[GreaterEqual]", 
                
                RowBox[{"First", "[", "next", "]"}]}], ",", 
               RowBox[{"ReplacePart", "[", 
                RowBox[{"acc", ",", 
                 RowBox[{
                  RowBox[{"-", "1"}], "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"Last", "[", "acc", "]"}], "]"}], ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"Last", "[", 
                    RowBox[{"Last", "[", "acc", "]"}], "]"}], ",", 
                    RowBox[{"Last", "[", "next", "]"}]}], "]"}]}], "}"}]}]}], 
                "]"}], ",", 
               RowBox[{"Append", "[", 
                RowBox[{"acc", ",", "next"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"First", "[", "merged", "]"}], "}"}], ",", 
           RowBox[{"Rest", "[", "merged", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"totalAngle", "=", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Last", "[", "#", "]"}], "-", 
             RowBox[{"First", "[", "#", "]"}]}], "&"}], "/@", "merged"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"totalAngle", "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "Pi"}], ")"}]}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.827919845354088*^9, 3.827919846235579*^9}, {
   3.837537030809535*^9, 3.837537099257552*^9}, 3.83753717423792*^9, {
   3.887467969367312*^9, 3.887467976463355*^9}, {3.887468111838209*^9, 
   3.887468124534226*^9}, {3.887468381078816*^9, 3.887468386352764*^9}, {
   3.911065419627397*^9, 3.911065483949067*^9}, 3.9110655148941307`*^9, {
   3.911065547197394*^9, 3.911065547471232*^9}, 3.958304086478272*^9, {
   3.958304647612131*^9, 3.958304712472674*^9}, {3.958304744154172*^9, 
   3.958304861359129*^9}, {3.9583049374449043`*^9, 3.9583049431734953`*^9}, {
   3.95830499658046*^9, 3.958304999177541*^9}, {3.958306445518697*^9, 
   3.958306469073*^9}, {3.958306602486788*^9, 3.958306796147648*^9}, {
   3.958306952237397*^9, 3.958307012842017*^9}, {3.9583070775584583`*^9, 
   3.9583072330753517`*^9}, {3.958307276128615*^9, 3.9583072805561934`*^9}, {
   3.958307600292719*^9, 3.958307600780116*^9}, {3.958307657899788*^9, 
   3.958307822008307*^9}, {3.9583080173716803`*^9, 3.958308017675827*^9}, {
   3.958308048269268*^9, 3.958308069066022*^9}, {3.9583081317221193`*^9, 
   3.958308198057047*^9}, {3.9583082863089933`*^9, 3.958308288396006*^9}, {
   3.958394390354478*^9, 3.95839448365057*^9}, {3.95839456935909*^9, 
   3.958394582968121*^9}, {3.9583947255373163`*^9, 3.958394770963941*^9}, {
   3.958394809660434*^9, 3.9583948136640863`*^9}, {3.958395025295641*^9, 
   3.9583950281539907`*^9}, {3.958395579784071*^9, 3.9583955802833567`*^9}, {
   3.958395634079454*^9, 3.958395645348496*^9}, {3.958397013069674*^9, 
   3.958397013169541*^9}, 3.9583974783246803`*^9, {3.958398320567193*^9, 
   3.9583983938980722`*^9}, {3.9583989366988773`*^9, 3.958398950980385*^9}, {
   3.958398991598817*^9, 3.9583989963852787`*^9}, {3.958399073677647*^9, 
   3.958399074997756*^9}, {3.9583993222553263`*^9, 3.9583993301834373`*^9}, {
   3.958399376695321*^9, 3.958399435113989*^9}, {3.958399513555393*^9, 
   3.9583995338929443`*^9}, {3.958399597417321*^9, 3.958399597473916*^9}, {
   3.958399627852449*^9, 3.958399661025156*^9}, {3.958399858901403*^9, 
   3.958399874842441*^9}, {3.958399904920299*^9, 3.9583999327524652`*^9}, {
   3.95839997002641*^9, 3.958399970290771*^9}, {3.958400018203102*^9, 
   3.958400019259112*^9}, {3.9584001638103943`*^9, 3.958400164521448*^9}, {
   3.9584002183891163`*^9, 3.9584002336651783`*^9}, {3.958400317104719*^9, 
   3.958400373446751*^9}, 3.9584005550514*^9, {3.958400671960602*^9, 
   3.958400672059857*^9}, {3.9584007065397367`*^9, 3.958400708658721*^9}, {
   3.95840075665129*^9, 3.95840075704362*^9}, {3.958400796253943*^9, 
   3.958400806569682*^9}, {3.958400839170116*^9, 3.958400839419734*^9}},
 CellLabel->
  "In[1677]:=",ExpressionUUID->"9415a061-8af8-4097-932b-89035e9cebdb"]
}, Open  ]]
},
WindowSize->{1728, 990},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7b64f0aa-ca47-41a4-84d6-4ad7519af2e6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 3, 67, "Section",ExpressionUUID->"7004319f-afd5-499d-bb87-2a13e7535bed"],
Cell[740, 27, 245, 4, 35, "Text",ExpressionUUID->"5f4e01c0-6a9f-4e54-8bd1-e469c6e1a570"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022, 36, 251, 4, 67, "Section",ExpressionUUID->"a62f5431-6b7f-4448-ba23-125ce79f25cf"],
Cell[CellGroupData[{
Cell[1298, 44, 16087, 302, 430, "Input",ExpressionUUID->"cecc672f-0f96-452f-855c-7313178a3aa4"],
Cell[17388, 348, 937, 14, 365, "Output",ExpressionUUID->"5f2048ce-8700-4258-845f-3b204b0dd028"],
Cell[18328, 364, 824, 12, 34, "Output",ExpressionUUID->"f86c9825-0a83-43e1-bb4a-6e9236b0398b"],
Cell[19155, 378, 73604, 1288, 251, "Output",ExpressionUUID->"6d6182a6-3b53-46fd-943e-16a9265442e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92796, 1671, 158, 3, 54, "Subsection",ExpressionUUID->"602775f5-c144-4760-8d05-5dce18c88c22"],
Cell[CellGroupData[{
Cell[92979, 1678, 3201, 91, 283, "Input",ExpressionUUID->"0434f075-b06b-404d-b070-04c995a1db64"],
Cell[96183, 1771, 391, 7, 34, "Output",ExpressionUUID->"e4f7bc24-0547-4ec8-ac91-f9ea9094d1a5"],
Cell[96577, 1780, 31197, 598, 371, "Output",ExpressionUUID->"24244e8b-d455-4ffb-802d-bda1be9dec99"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127835, 2385, 156, 3, 67, "Section",ExpressionUUID->"f07bb820-a8cf-4e27-9302-cf9f5910752a"],
Cell[CellGroupData[{
Cell[128016, 2392, 205, 4, 54, "Subsection",ExpressionUUID->"2acf08db-8620-4006-a43d-23be3b9c7aaf"],
Cell[CellGroupData[{
Cell[128246, 2400, 4989, 151, 430, "Input",ExpressionUUID->"7e9a6686-ccb3-487b-adab-c6b52254662e"],
Cell[133238, 2553, 302, 5, 367, "Output",ExpressionUUID->"8665cb5c-619a-420b-83ec-07f2ab2b0c75"],
Cell[133543, 2560, 187, 3, 34, "Output",ExpressionUUID->"ee736963-3800-433b-9a27-a49edc6a46a5"],
Cell[133733, 2565, 66230, 1169, 255, "Output",ExpressionUUID->"1b5e514f-ed12-4e8b-8a87-b50ba4727201"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200012, 3740, 211, 4, 54, "Subsection",ExpressionUUID->"c4897fb2-9885-4efd-a02b-2cd96d3dc11c"],
Cell[CellGroupData[{
Cell[200248, 3748, 5570, 166, 451, "Input",ExpressionUUID->"1726b92e-8859-4e43-be16-cf95cc56b7af"],
Cell[205821, 3916, 425, 8, 367, "Output",ExpressionUUID->"866b2b42-5fa6-4b4b-b259-7d00bd543b40"],
Cell[206249, 3926, 334, 6, 34, "Output",ExpressionUUID->"00beaaaf-74b2-4102-ac21-822a2997d238"],
Cell[206586, 3934, 58012, 1034, 254, "Output",ExpressionUUID->"5c9d84a8-186f-4ade-88cf-b6f55b13214a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[264647, 4974, 210, 4, 54, "Subsection",ExpressionUUID->"c6e53e77-cf78-49ee-8258-7bd4dcc86ed2"],
Cell[CellGroupData[{
Cell[264882, 4982, 5521, 165, 451, "Input",ExpressionUUID->"13cf54f5-f94a-4b20-af1d-191f3af8c7f0"],
Cell[270406, 5149, 375, 7, 367, "Output",ExpressionUUID->"b39bdd06-1b79-4d47-a951-2d6b092a38d7"],
Cell[270784, 5158, 284, 5, 34, "Output",ExpressionUUID->"dc1731c2-e33e-455a-b62d-5c252de659a1"],
Cell[271071, 5165, 97579, 1682, 248, "Output",ExpressionUUID->"8b8d75a3-c022-4f4e-8a15-cad527939ab6"]
}, Open  ]],
Cell[368665, 6850, 5278, 161, 451, "Input",ExpressionUUID->"fb962765-d9c9-402e-b32c-22acb2d2a4eb"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373992, 7017, 156, 3, 67, "Section",ExpressionUUID->"ff805ab3-7106-49f3-93e0-80729a8a8d8a"],
Cell[374151, 7022, 43339, 1036, 3435, "Input",ExpressionUUID->"9415a061-8af8-4097-932b-89035e9cebdb"]
}, Open  ]]
}
]
*)

